// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/post_processing.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "object_detection/protos/calibration.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto;
namespace object_detection {
namespace protos {
class BatchNonMaxSuppression;
class BatchNonMaxSuppressionDefaultTypeInternal;
extern BatchNonMaxSuppressionDefaultTypeInternal _BatchNonMaxSuppression_default_instance_;
class PostProcessing;
class PostProcessingDefaultTypeInternal;
extern PostProcessingDefaultTypeInternal _PostProcessing_default_instance_;
}  // namespace protos
}  // namespace object_detection
PROTOBUF_NAMESPACE_OPEN
template<> ::object_detection::protos::BatchNonMaxSuppression* Arena::CreateMaybeMessage<::object_detection::protos::BatchNonMaxSuppression>(Arena*);
template<> ::object_detection::protos::PostProcessing* Arena::CreateMaybeMessage<::object_detection::protos::PostProcessing>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace object_detection {
namespace protos {

enum PostProcessing_ScoreConverter : int {
  PostProcessing_ScoreConverter_IDENTITY = 0,
  PostProcessing_ScoreConverter_SIGMOID = 1,
  PostProcessing_ScoreConverter_SOFTMAX = 2
};
bool PostProcessing_ScoreConverter_IsValid(int value);
constexpr PostProcessing_ScoreConverter PostProcessing_ScoreConverter_ScoreConverter_MIN = PostProcessing_ScoreConverter_IDENTITY;
constexpr PostProcessing_ScoreConverter PostProcessing_ScoreConverter_ScoreConverter_MAX = PostProcessing_ScoreConverter_SOFTMAX;
constexpr int PostProcessing_ScoreConverter_ScoreConverter_ARRAYSIZE = PostProcessing_ScoreConverter_ScoreConverter_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PostProcessing_ScoreConverter_descriptor();
template<typename T>
inline const std::string& PostProcessing_ScoreConverter_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PostProcessing_ScoreConverter>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PostProcessing_ScoreConverter_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PostProcessing_ScoreConverter_descriptor(), enum_t_value);
}
inline bool PostProcessing_ScoreConverter_Parse(
    const std::string& name, PostProcessing_ScoreConverter* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PostProcessing_ScoreConverter>(
    PostProcessing_ScoreConverter_descriptor(), name, value);
}
// ===================================================================

class BatchNonMaxSuppression :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.BatchNonMaxSuppression) */ {
 public:
  BatchNonMaxSuppression();
  virtual ~BatchNonMaxSuppression();

  BatchNonMaxSuppression(const BatchNonMaxSuppression& from);
  BatchNonMaxSuppression(BatchNonMaxSuppression&& from) noexcept
    : BatchNonMaxSuppression() {
    *this = ::std::move(from);
  }

  inline BatchNonMaxSuppression& operator=(const BatchNonMaxSuppression& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchNonMaxSuppression& operator=(BatchNonMaxSuppression&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BatchNonMaxSuppression& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchNonMaxSuppression* internal_default_instance() {
    return reinterpret_cast<const BatchNonMaxSuppression*>(
               &_BatchNonMaxSuppression_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BatchNonMaxSuppression& a, BatchNonMaxSuppression& b) {
    a.Swap(&b);
  }
  inline void Swap(BatchNonMaxSuppression* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BatchNonMaxSuppression* New() const final {
    return CreateMaybeMessage<BatchNonMaxSuppression>(nullptr);
  }

  BatchNonMaxSuppression* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BatchNonMaxSuppression>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BatchNonMaxSuppression& from);
  void MergeFrom(const BatchNonMaxSuppression& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchNonMaxSuppression* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.BatchNonMaxSuppression";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto);
    return ::descriptor_table_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScoreThresholdFieldNumber = 1,
    kUseStaticShapesFieldNumber = 6,
    kUseClassAgnosticNmsFieldNumber = 7,
    kSoftNmsSigmaFieldNumber = 9,
    kIouThresholdFieldNumber = 2,
    kMaxDetectionsPerClassFieldNumber = 3,
    kMaxTotalDetectionsFieldNumber = 5,
    kMaxClassesPerDetectionFieldNumber = 8,
  };
  // optional float score_threshold = 1 [default = 0];
  bool has_score_threshold() const;
  void clear_score_threshold();
  float score_threshold() const;
  void set_score_threshold(float value);

  // optional bool use_static_shapes = 6 [default = false];
  bool has_use_static_shapes() const;
  void clear_use_static_shapes();
  bool use_static_shapes() const;
  void set_use_static_shapes(bool value);

  // optional bool use_class_agnostic_nms = 7 [default = false];
  bool has_use_class_agnostic_nms() const;
  void clear_use_class_agnostic_nms();
  bool use_class_agnostic_nms() const;
  void set_use_class_agnostic_nms(bool value);

  // optional float soft_nms_sigma = 9 [default = 0];
  bool has_soft_nms_sigma() const;
  void clear_soft_nms_sigma();
  float soft_nms_sigma() const;
  void set_soft_nms_sigma(float value);

  // optional float iou_threshold = 2 [default = 0.6];
  bool has_iou_threshold() const;
  void clear_iou_threshold();
  float iou_threshold() const;
  void set_iou_threshold(float value);

  // optional int32 max_detections_per_class = 3 [default = 100];
  bool has_max_detections_per_class() const;
  void clear_max_detections_per_class();
  ::PROTOBUF_NAMESPACE_ID::int32 max_detections_per_class() const;
  void set_max_detections_per_class(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_total_detections = 5 [default = 100];
  bool has_max_total_detections() const;
  void clear_max_total_detections();
  ::PROTOBUF_NAMESPACE_ID::int32 max_total_detections() const;
  void set_max_total_detections(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional int32 max_classes_per_detection = 8 [default = 1];
  bool has_max_classes_per_detection() const;
  void clear_max_classes_per_detection();
  ::PROTOBUF_NAMESPACE_ID::int32 max_classes_per_detection() const;
  void set_max_classes_per_detection(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:object_detection.protos.BatchNonMaxSuppression)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float score_threshold_;
  bool use_static_shapes_;
  bool use_class_agnostic_nms_;
  float soft_nms_sigma_;
  float iou_threshold_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_detections_per_class_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_total_detections_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_classes_per_detection_;
  friend struct ::TableStruct_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto;
};
// -------------------------------------------------------------------

class PostProcessing :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.PostProcessing) */ {
 public:
  PostProcessing();
  virtual ~PostProcessing();

  PostProcessing(const PostProcessing& from);
  PostProcessing(PostProcessing&& from) noexcept
    : PostProcessing() {
    *this = ::std::move(from);
  }

  inline PostProcessing& operator=(const PostProcessing& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostProcessing& operator=(PostProcessing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PostProcessing& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PostProcessing* internal_default_instance() {
    return reinterpret_cast<const PostProcessing*>(
               &_PostProcessing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PostProcessing& a, PostProcessing& b) {
    a.Swap(&b);
  }
  inline void Swap(PostProcessing* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PostProcessing* New() const final {
    return CreateMaybeMessage<PostProcessing>(nullptr);
  }

  PostProcessing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PostProcessing>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PostProcessing& from);
  void MergeFrom(const PostProcessing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PostProcessing* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.PostProcessing";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto);
    return ::descriptor_table_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PostProcessing_ScoreConverter ScoreConverter;
  static constexpr ScoreConverter IDENTITY =
    PostProcessing_ScoreConverter_IDENTITY;
  static constexpr ScoreConverter SIGMOID =
    PostProcessing_ScoreConverter_SIGMOID;
  static constexpr ScoreConverter SOFTMAX =
    PostProcessing_ScoreConverter_SOFTMAX;
  static inline bool ScoreConverter_IsValid(int value) {
    return PostProcessing_ScoreConverter_IsValid(value);
  }
  static constexpr ScoreConverter ScoreConverter_MIN =
    PostProcessing_ScoreConverter_ScoreConverter_MIN;
  static constexpr ScoreConverter ScoreConverter_MAX =
    PostProcessing_ScoreConverter_ScoreConverter_MAX;
  static constexpr int ScoreConverter_ARRAYSIZE =
    PostProcessing_ScoreConverter_ScoreConverter_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ScoreConverter_descriptor() {
    return PostProcessing_ScoreConverter_descriptor();
  }
  template<typename T>
  static inline const std::string& ScoreConverter_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ScoreConverter>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ScoreConverter_Name.");
    return PostProcessing_ScoreConverter_Name(enum_t_value);
  }
  static inline bool ScoreConverter_Parse(const std::string& name,
      ScoreConverter* value) {
    return PostProcessing_ScoreConverter_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kBatchNonMaxSuppressionFieldNumber = 1,
    kCalibrationConfigFieldNumber = 4,
    kScoreConverterFieldNumber = 2,
    kLogitScaleFieldNumber = 3,
  };
  // optional .object_detection.protos.BatchNonMaxSuppression batch_non_max_suppression = 1;
  bool has_batch_non_max_suppression() const;
  void clear_batch_non_max_suppression();
  const ::object_detection::protos::BatchNonMaxSuppression& batch_non_max_suppression() const;
  ::object_detection::protos::BatchNonMaxSuppression* release_batch_non_max_suppression();
  ::object_detection::protos::BatchNonMaxSuppression* mutable_batch_non_max_suppression();
  void set_allocated_batch_non_max_suppression(::object_detection::protos::BatchNonMaxSuppression* batch_non_max_suppression);

  // optional .object_detection.protos.CalibrationConfig calibration_config = 4;
  bool has_calibration_config() const;
  void clear_calibration_config();
  const ::object_detection::protos::CalibrationConfig& calibration_config() const;
  ::object_detection::protos::CalibrationConfig* release_calibration_config();
  ::object_detection::protos::CalibrationConfig* mutable_calibration_config();
  void set_allocated_calibration_config(::object_detection::protos::CalibrationConfig* calibration_config);

  // optional .object_detection.protos.PostProcessing.ScoreConverter score_converter = 2 [default = IDENTITY];
  bool has_score_converter() const;
  void clear_score_converter();
  ::object_detection::protos::PostProcessing_ScoreConverter score_converter() const;
  void set_score_converter(::object_detection::protos::PostProcessing_ScoreConverter value);

  // optional float logit_scale = 3 [default = 1];
  bool has_logit_scale() const;
  void clear_logit_scale();
  float logit_scale() const;
  void set_logit_scale(float value);

  // @@protoc_insertion_point(class_scope:object_detection.protos.PostProcessing)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::object_detection::protos::BatchNonMaxSuppression* batch_non_max_suppression_;
  ::object_detection::protos::CalibrationConfig* calibration_config_;
  int score_converter_;
  float logit_scale_;
  friend struct ::TableStruct_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BatchNonMaxSuppression

// optional float score_threshold = 1 [default = 0];
inline bool BatchNonMaxSuppression::has_score_threshold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchNonMaxSuppression::clear_score_threshold() {
  score_threshold_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float BatchNonMaxSuppression::score_threshold() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.score_threshold)
  return score_threshold_;
}
inline void BatchNonMaxSuppression::set_score_threshold(float value) {
  _has_bits_[0] |= 0x00000001u;
  score_threshold_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.score_threshold)
}

// optional float iou_threshold = 2 [default = 0.6];
inline bool BatchNonMaxSuppression::has_iou_threshold() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BatchNonMaxSuppression::clear_iou_threshold() {
  iou_threshold_ = 0.6f;
  _has_bits_[0] &= ~0x00000010u;
}
inline float BatchNonMaxSuppression::iou_threshold() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.iou_threshold)
  return iou_threshold_;
}
inline void BatchNonMaxSuppression::set_iou_threshold(float value) {
  _has_bits_[0] |= 0x00000010u;
  iou_threshold_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.iou_threshold)
}

// optional int32 max_detections_per_class = 3 [default = 100];
inline bool BatchNonMaxSuppression::has_max_detections_per_class() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BatchNonMaxSuppression::clear_max_detections_per_class() {
  max_detections_per_class_ = 100;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BatchNonMaxSuppression::max_detections_per_class() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.max_detections_per_class)
  return max_detections_per_class_;
}
inline void BatchNonMaxSuppression::set_max_detections_per_class(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  max_detections_per_class_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.max_detections_per_class)
}

// optional int32 max_total_detections = 5 [default = 100];
inline bool BatchNonMaxSuppression::has_max_total_detections() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BatchNonMaxSuppression::clear_max_total_detections() {
  max_total_detections_ = 100;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BatchNonMaxSuppression::max_total_detections() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.max_total_detections)
  return max_total_detections_;
}
inline void BatchNonMaxSuppression::set_max_total_detections(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  max_total_detections_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.max_total_detections)
}

// optional bool use_static_shapes = 6 [default = false];
inline bool BatchNonMaxSuppression::has_use_static_shapes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchNonMaxSuppression::clear_use_static_shapes() {
  use_static_shapes_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool BatchNonMaxSuppression::use_static_shapes() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.use_static_shapes)
  return use_static_shapes_;
}
inline void BatchNonMaxSuppression::set_use_static_shapes(bool value) {
  _has_bits_[0] |= 0x00000002u;
  use_static_shapes_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.use_static_shapes)
}

// optional bool use_class_agnostic_nms = 7 [default = false];
inline bool BatchNonMaxSuppression::has_use_class_agnostic_nms() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchNonMaxSuppression::clear_use_class_agnostic_nms() {
  use_class_agnostic_nms_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool BatchNonMaxSuppression::use_class_agnostic_nms() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.use_class_agnostic_nms)
  return use_class_agnostic_nms_;
}
inline void BatchNonMaxSuppression::set_use_class_agnostic_nms(bool value) {
  _has_bits_[0] |= 0x00000004u;
  use_class_agnostic_nms_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.use_class_agnostic_nms)
}

// optional int32 max_classes_per_detection = 8 [default = 1];
inline bool BatchNonMaxSuppression::has_max_classes_per_detection() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BatchNonMaxSuppression::clear_max_classes_per_detection() {
  max_classes_per_detection_ = 1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BatchNonMaxSuppression::max_classes_per_detection() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.max_classes_per_detection)
  return max_classes_per_detection_;
}
inline void BatchNonMaxSuppression::set_max_classes_per_detection(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  max_classes_per_detection_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.max_classes_per_detection)
}

// optional float soft_nms_sigma = 9 [default = 0];
inline bool BatchNonMaxSuppression::has_soft_nms_sigma() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BatchNonMaxSuppression::clear_soft_nms_sigma() {
  soft_nms_sigma_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float BatchNonMaxSuppression::soft_nms_sigma() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.BatchNonMaxSuppression.soft_nms_sigma)
  return soft_nms_sigma_;
}
inline void BatchNonMaxSuppression::set_soft_nms_sigma(float value) {
  _has_bits_[0] |= 0x00000008u;
  soft_nms_sigma_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.BatchNonMaxSuppression.soft_nms_sigma)
}

// -------------------------------------------------------------------

// PostProcessing

// optional .object_detection.protos.BatchNonMaxSuppression batch_non_max_suppression = 1;
inline bool PostProcessing::has_batch_non_max_suppression() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PostProcessing::clear_batch_non_max_suppression() {
  if (batch_non_max_suppression_ != nullptr) batch_non_max_suppression_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::object_detection::protos::BatchNonMaxSuppression& PostProcessing::batch_non_max_suppression() const {
  const ::object_detection::protos::BatchNonMaxSuppression* p = batch_non_max_suppression_;
  // @@protoc_insertion_point(field_get:object_detection.protos.PostProcessing.batch_non_max_suppression)
  return p != nullptr ? *p : *reinterpret_cast<const ::object_detection::protos::BatchNonMaxSuppression*>(
      &::object_detection::protos::_BatchNonMaxSuppression_default_instance_);
}
inline ::object_detection::protos::BatchNonMaxSuppression* PostProcessing::release_batch_non_max_suppression() {
  // @@protoc_insertion_point(field_release:object_detection.protos.PostProcessing.batch_non_max_suppression)
  _has_bits_[0] &= ~0x00000001u;
  ::object_detection::protos::BatchNonMaxSuppression* temp = batch_non_max_suppression_;
  batch_non_max_suppression_ = nullptr;
  return temp;
}
inline ::object_detection::protos::BatchNonMaxSuppression* PostProcessing::mutable_batch_non_max_suppression() {
  _has_bits_[0] |= 0x00000001u;
  if (batch_non_max_suppression_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::BatchNonMaxSuppression>(GetArenaNoVirtual());
    batch_non_max_suppression_ = p;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.PostProcessing.batch_non_max_suppression)
  return batch_non_max_suppression_;
}
inline void PostProcessing::set_allocated_batch_non_max_suppression(::object_detection::protos::BatchNonMaxSuppression* batch_non_max_suppression) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete batch_non_max_suppression_;
  }
  if (batch_non_max_suppression) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      batch_non_max_suppression = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, batch_non_max_suppression, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  batch_non_max_suppression_ = batch_non_max_suppression;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.PostProcessing.batch_non_max_suppression)
}

// optional .object_detection.protos.PostProcessing.ScoreConverter score_converter = 2 [default = IDENTITY];
inline bool PostProcessing::has_score_converter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PostProcessing::clear_score_converter() {
  score_converter_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::object_detection::protos::PostProcessing_ScoreConverter PostProcessing::score_converter() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.PostProcessing.score_converter)
  return static_cast< ::object_detection::protos::PostProcessing_ScoreConverter >(score_converter_);
}
inline void PostProcessing::set_score_converter(::object_detection::protos::PostProcessing_ScoreConverter value) {
  assert(::object_detection::protos::PostProcessing_ScoreConverter_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  score_converter_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.PostProcessing.score_converter)
}

// optional float logit_scale = 3 [default = 1];
inline bool PostProcessing::has_logit_scale() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PostProcessing::clear_logit_scale() {
  logit_scale_ = 1;
  _has_bits_[0] &= ~0x00000008u;
}
inline float PostProcessing::logit_scale() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.PostProcessing.logit_scale)
  return logit_scale_;
}
inline void PostProcessing::set_logit_scale(float value) {
  _has_bits_[0] |= 0x00000008u;
  logit_scale_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.PostProcessing.logit_scale)
}

// optional .object_detection.protos.CalibrationConfig calibration_config = 4;
inline bool PostProcessing::has_calibration_config() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline const ::object_detection::protos::CalibrationConfig& PostProcessing::calibration_config() const {
  const ::object_detection::protos::CalibrationConfig* p = calibration_config_;
  // @@protoc_insertion_point(field_get:object_detection.protos.PostProcessing.calibration_config)
  return p != nullptr ? *p : *reinterpret_cast<const ::object_detection::protos::CalibrationConfig*>(
      &::object_detection::protos::_CalibrationConfig_default_instance_);
}
inline ::object_detection::protos::CalibrationConfig* PostProcessing::release_calibration_config() {
  // @@protoc_insertion_point(field_release:object_detection.protos.PostProcessing.calibration_config)
  _has_bits_[0] &= ~0x00000002u;
  ::object_detection::protos::CalibrationConfig* temp = calibration_config_;
  calibration_config_ = nullptr;
  return temp;
}
inline ::object_detection::protos::CalibrationConfig* PostProcessing::mutable_calibration_config() {
  _has_bits_[0] |= 0x00000002u;
  if (calibration_config_ == nullptr) {
    auto* p = CreateMaybeMessage<::object_detection::protos::CalibrationConfig>(GetArenaNoVirtual());
    calibration_config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:object_detection.protos.PostProcessing.calibration_config)
  return calibration_config_;
}
inline void PostProcessing::set_allocated_calibration_config(::object_detection::protos::CalibrationConfig* calibration_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(calibration_config_);
  }
  if (calibration_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      calibration_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, calibration_config, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  calibration_config_ = calibration_config;
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.PostProcessing.calibration_config)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace object_detection

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::object_detection::protos::PostProcessing_ScoreConverter> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::object_detection::protos::PostProcessing_ScoreConverter>() {
  return ::object_detection::protos::PostProcessing_ScoreConverter_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2fpost_5fprocessing_2eproto
