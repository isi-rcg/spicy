// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object_detection/protos/eval.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2feval_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2feval_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_object_5fdetection_2fprotos_2feval_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_object_5fdetection_2fprotos_2feval_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_5fdetection_2fprotos_2feval_2eproto;
namespace object_detection {
namespace protos {
class EvalConfig;
class EvalConfigDefaultTypeInternal;
extern EvalConfigDefaultTypeInternal _EvalConfig_default_instance_;
}  // namespace protos
}  // namespace object_detection
PROTOBUF_NAMESPACE_OPEN
template<> ::object_detection::protos::EvalConfig* Arena::CreateMaybeMessage<::object_detection::protos::EvalConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace object_detection {
namespace protos {

// ===================================================================

class EvalConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:object_detection.protos.EvalConfig) */ {
 public:
  EvalConfig();
  virtual ~EvalConfig();

  EvalConfig(const EvalConfig& from);
  EvalConfig(EvalConfig&& from) noexcept
    : EvalConfig() {
    *this = ::std::move(from);
  }

  inline EvalConfig& operator=(const EvalConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline EvalConfig& operator=(EvalConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EvalConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EvalConfig* internal_default_instance() {
    return reinterpret_cast<const EvalConfig*>(
               &_EvalConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EvalConfig& a, EvalConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(EvalConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EvalConfig* New() const final {
    return CreateMaybeMessage<EvalConfig>(nullptr);
  }

  EvalConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EvalConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EvalConfig& from);
  void MergeFrom(const EvalConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EvalConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "object_detection.protos.EvalConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_object_5fdetection_2fprotos_2feval_2eproto);
    return ::descriptor_table_object_5fdetection_2fprotos_2feval_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMetricsSetFieldNumber = 8,
    kVisualizationExportDirFieldNumber = 6,
    kEvalMasterFieldNumber = 7,
    kExportPathFieldNumber = 9,
    kGroundtruthBoxVisualizationColorFieldNumber = 18,
    kMaxEvalsFieldNumber = 4,
    kSaveGraphFieldNumber = 5,
    kIgnoreGroundtruthFieldNumber = 10,
    kUseMovingAveragesFieldNumber = 11,
    kEvalInstanceMasksFieldNumber = 12,
    kSkipScoresFieldNumber = 15,
    kSkipLabelsFieldNumber = 16,
    kVisualizeGroundtruthBoxesFieldNumber = 17,
    kKeepImageIdForVisualizationExportFieldNumber = 19,
    kIncludeMetricsPerCategoryFieldNumber = 24,
    kRecallLowerBoundFieldNumber = 26,
    kNumVisualizationsFieldNumber = 1,
    kNumExamplesFieldNumber = 2,
    kEvalIntervalSecsFieldNumber = 3,
    kMinScoreThresholdFieldNumber = 13,
    kMaxNumBoxesToVisualizeFieldNumber = 14,
    kRetainOriginalImagesFieldNumber = 23,
    kBatchSizeFieldNumber = 25,
    kRecallUpperBoundFieldNumber = 27,
  };
  // repeated string metrics_set = 8;
  int metrics_set_size() const;
  void clear_metrics_set();
  const std::string& metrics_set(int index) const;
  std::string* mutable_metrics_set(int index);
  void set_metrics_set(int index, const std::string& value);
  void set_metrics_set(int index, std::string&& value);
  void set_metrics_set(int index, const char* value);
  void set_metrics_set(int index, const char* value, size_t size);
  std::string* add_metrics_set();
  void add_metrics_set(const std::string& value);
  void add_metrics_set(std::string&& value);
  void add_metrics_set(const char* value);
  void add_metrics_set(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& metrics_set() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_metrics_set();

  // optional string visualization_export_dir = 6 [default = ""];
  bool has_visualization_export_dir() const;
  void clear_visualization_export_dir();
  const std::string& visualization_export_dir() const;
  void set_visualization_export_dir(const std::string& value);
  void set_visualization_export_dir(std::string&& value);
  void set_visualization_export_dir(const char* value);
  void set_visualization_export_dir(const char* value, size_t size);
  std::string* mutable_visualization_export_dir();
  std::string* release_visualization_export_dir();
  void set_allocated_visualization_export_dir(std::string* visualization_export_dir);

  // optional string eval_master = 7 [default = ""];
  bool has_eval_master() const;
  void clear_eval_master();
  const std::string& eval_master() const;
  void set_eval_master(const std::string& value);
  void set_eval_master(std::string&& value);
  void set_eval_master(const char* value);
  void set_eval_master(const char* value, size_t size);
  std::string* mutable_eval_master();
  std::string* release_eval_master();
  void set_allocated_eval_master(std::string* eval_master);

  // optional string export_path = 9 [default = ""];
  bool has_export_path() const;
  void clear_export_path();
  const std::string& export_path() const;
  void set_export_path(const std::string& value);
  void set_export_path(std::string&& value);
  void set_export_path(const char* value);
  void set_export_path(const char* value, size_t size);
  std::string* mutable_export_path();
  std::string* release_export_path();
  void set_allocated_export_path(std::string* export_path);

  // optional string groundtruth_box_visualization_color = 18 [default = "black"];
  bool has_groundtruth_box_visualization_color() const;
  void clear_groundtruth_box_visualization_color();
  const std::string& groundtruth_box_visualization_color() const;
  void set_groundtruth_box_visualization_color(const std::string& value);
  void set_groundtruth_box_visualization_color(std::string&& value);
  void set_groundtruth_box_visualization_color(const char* value);
  void set_groundtruth_box_visualization_color(const char* value, size_t size);
  std::string* mutable_groundtruth_box_visualization_color();
  std::string* release_groundtruth_box_visualization_color();
  void set_allocated_groundtruth_box_visualization_color(std::string* groundtruth_box_visualization_color);

  // optional uint32 max_evals = 4 [default = 0, deprecated = true];
  PROTOBUF_DEPRECATED bool has_max_evals() const;
  PROTOBUF_DEPRECATED void clear_max_evals();
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::uint32 max_evals() const;
  PROTOBUF_DEPRECATED void set_max_evals(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional bool save_graph = 5 [default = false];
  bool has_save_graph() const;
  void clear_save_graph();
  bool save_graph() const;
  void set_save_graph(bool value);

  // optional bool ignore_groundtruth = 10 [default = false];
  bool has_ignore_groundtruth() const;
  void clear_ignore_groundtruth();
  bool ignore_groundtruth() const;
  void set_ignore_groundtruth(bool value);

  // optional bool use_moving_averages = 11 [default = false];
  bool has_use_moving_averages() const;
  void clear_use_moving_averages();
  bool use_moving_averages() const;
  void set_use_moving_averages(bool value);

  // optional bool eval_instance_masks = 12 [default = false];
  bool has_eval_instance_masks() const;
  void clear_eval_instance_masks();
  bool eval_instance_masks() const;
  void set_eval_instance_masks(bool value);

  // optional bool skip_scores = 15 [default = false];
  bool has_skip_scores() const;
  void clear_skip_scores();
  bool skip_scores() const;
  void set_skip_scores(bool value);

  // optional bool skip_labels = 16 [default = false];
  bool has_skip_labels() const;
  void clear_skip_labels();
  bool skip_labels() const;
  void set_skip_labels(bool value);

  // optional bool visualize_groundtruth_boxes = 17 [default = false];
  bool has_visualize_groundtruth_boxes() const;
  void clear_visualize_groundtruth_boxes();
  bool visualize_groundtruth_boxes() const;
  void set_visualize_groundtruth_boxes(bool value);

  // optional bool keep_image_id_for_visualization_export = 19 [default = false];
  bool has_keep_image_id_for_visualization_export() const;
  void clear_keep_image_id_for_visualization_export();
  bool keep_image_id_for_visualization_export() const;
  void set_keep_image_id_for_visualization_export(bool value);

  // optional bool include_metrics_per_category = 24 [default = false];
  bool has_include_metrics_per_category() const;
  void clear_include_metrics_per_category();
  bool include_metrics_per_category() const;
  void set_include_metrics_per_category(bool value);

  // optional float recall_lower_bound = 26 [default = 0];
  bool has_recall_lower_bound() const;
  void clear_recall_lower_bound();
  float recall_lower_bound() const;
  void set_recall_lower_bound(float value);

  // optional uint32 num_visualizations = 1 [default = 10];
  bool has_num_visualizations() const;
  void clear_num_visualizations();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_visualizations() const;
  void set_num_visualizations(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 num_examples = 2 [default = 5000, deprecated = true];
  PROTOBUF_DEPRECATED bool has_num_examples() const;
  PROTOBUF_DEPRECATED void clear_num_examples();
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::uint32 num_examples() const;
  PROTOBUF_DEPRECATED void set_num_examples(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional uint32 eval_interval_secs = 3 [default = 300];
  bool has_eval_interval_secs() const;
  void clear_eval_interval_secs();
  ::PROTOBUF_NAMESPACE_ID::uint32 eval_interval_secs() const;
  void set_eval_interval_secs(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional float min_score_threshold = 13 [default = 0.5];
  bool has_min_score_threshold() const;
  void clear_min_score_threshold();
  float min_score_threshold() const;
  void set_min_score_threshold(float value);

  // optional int32 max_num_boxes_to_visualize = 14 [default = 20];
  bool has_max_num_boxes_to_visualize() const;
  void clear_max_num_boxes_to_visualize();
  ::PROTOBUF_NAMESPACE_ID::int32 max_num_boxes_to_visualize() const;
  void set_max_num_boxes_to_visualize(::PROTOBUF_NAMESPACE_ID::int32 value);

  // optional bool retain_original_images = 23 [default = true];
  bool has_retain_original_images() const;
  void clear_retain_original_images();
  bool retain_original_images() const;
  void set_retain_original_images(bool value);

  // optional uint32 batch_size = 25 [default = 1];
  bool has_batch_size() const;
  void clear_batch_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 batch_size() const;
  void set_batch_size(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // optional float recall_upper_bound = 27 [default = 1];
  bool has_recall_upper_bound() const;
  void clear_recall_upper_bound();
  float recall_upper_bound() const;
  void set_recall_upper_bound(float value);

  // @@protoc_insertion_point(class_scope:object_detection.protos.EvalConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> metrics_set_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr visualization_export_dir_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr eval_master_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr export_path_;
  public:
  static ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> _i_give_permission_to_break_this_code_default_groundtruth_box_visualization_color_;
  private:
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr groundtruth_box_visualization_color_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_evals_;
  bool save_graph_;
  bool ignore_groundtruth_;
  bool use_moving_averages_;
  bool eval_instance_masks_;
  bool skip_scores_;
  bool skip_labels_;
  bool visualize_groundtruth_boxes_;
  bool keep_image_id_for_visualization_export_;
  bool include_metrics_per_category_;
  float recall_lower_bound_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_visualizations_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_examples_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eval_interval_secs_;
  float min_score_threshold_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_num_boxes_to_visualize_;
  bool retain_original_images_;
  ::PROTOBUF_NAMESPACE_ID::uint32 batch_size_;
  float recall_upper_bound_;
  friend struct ::TableStruct_object_5fdetection_2fprotos_2feval_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EvalConfig

// optional uint32 batch_size = 25 [default = 1];
inline bool EvalConfig::has_batch_size() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void EvalConfig::clear_batch_size() {
  batch_size_ = 1u;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EvalConfig::batch_size() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.batch_size)
  return batch_size_;
}
inline void EvalConfig::set_batch_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00200000u;
  batch_size_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.batch_size)
}

// optional uint32 num_visualizations = 1 [default = 10];
inline bool EvalConfig::has_num_visualizations() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void EvalConfig::clear_num_visualizations() {
  num_visualizations_ = 10u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EvalConfig::num_visualizations() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.num_visualizations)
  return num_visualizations_;
}
inline void EvalConfig::set_num_visualizations(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  num_visualizations_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.num_visualizations)
}

// optional uint32 num_examples = 2 [default = 5000, deprecated = true];
inline bool EvalConfig::has_num_examples() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void EvalConfig::clear_num_examples() {
  num_examples_ = 5000u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EvalConfig::num_examples() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.num_examples)
  return num_examples_;
}
inline void EvalConfig::set_num_examples(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  num_examples_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.num_examples)
}

// optional uint32 eval_interval_secs = 3 [default = 300];
inline bool EvalConfig::has_eval_interval_secs() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void EvalConfig::clear_eval_interval_secs() {
  eval_interval_secs_ = 300u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EvalConfig::eval_interval_secs() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.eval_interval_secs)
  return eval_interval_secs_;
}
inline void EvalConfig::set_eval_interval_secs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  eval_interval_secs_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.eval_interval_secs)
}

// optional uint32 max_evals = 4 [default = 0, deprecated = true];
inline bool EvalConfig::has_max_evals() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EvalConfig::clear_max_evals() {
  max_evals_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EvalConfig::max_evals() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.max_evals)
  return max_evals_;
}
inline void EvalConfig::set_max_evals(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  max_evals_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.max_evals)
}

// optional bool save_graph = 5 [default = false];
inline bool EvalConfig::has_save_graph() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EvalConfig::clear_save_graph() {
  save_graph_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool EvalConfig::save_graph() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.save_graph)
  return save_graph_;
}
inline void EvalConfig::set_save_graph(bool value) {
  _has_bits_[0] |= 0x00000020u;
  save_graph_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.save_graph)
}

// optional string visualization_export_dir = 6 [default = ""];
inline bool EvalConfig::has_visualization_export_dir() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EvalConfig::clear_visualization_export_dir() {
  visualization_export_dir_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& EvalConfig::visualization_export_dir() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.visualization_export_dir)
  return visualization_export_dir_.GetNoArena();
}
inline void EvalConfig::set_visualization_export_dir(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  visualization_export_dir_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.visualization_export_dir)
}
inline void EvalConfig::set_visualization_export_dir(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  visualization_export_dir_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:object_detection.protos.EvalConfig.visualization_export_dir)
}
inline void EvalConfig::set_visualization_export_dir(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  visualization_export_dir_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:object_detection.protos.EvalConfig.visualization_export_dir)
}
inline void EvalConfig::set_visualization_export_dir(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  visualization_export_dir_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.EvalConfig.visualization_export_dir)
}
inline std::string* EvalConfig::mutable_visualization_export_dir() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:object_detection.protos.EvalConfig.visualization_export_dir)
  return visualization_export_dir_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* EvalConfig::release_visualization_export_dir() {
  // @@protoc_insertion_point(field_release:object_detection.protos.EvalConfig.visualization_export_dir)
  if (!has_visualization_export_dir()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return visualization_export_dir_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void EvalConfig::set_allocated_visualization_export_dir(std::string* visualization_export_dir) {
  if (visualization_export_dir != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  visualization_export_dir_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), visualization_export_dir);
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.EvalConfig.visualization_export_dir)
}

// optional string eval_master = 7 [default = ""];
inline bool EvalConfig::has_eval_master() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EvalConfig::clear_eval_master() {
  eval_master_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& EvalConfig::eval_master() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.eval_master)
  return eval_master_.GetNoArena();
}
inline void EvalConfig::set_eval_master(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  eval_master_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.eval_master)
}
inline void EvalConfig::set_eval_master(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  eval_master_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:object_detection.protos.EvalConfig.eval_master)
}
inline void EvalConfig::set_eval_master(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  eval_master_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:object_detection.protos.EvalConfig.eval_master)
}
inline void EvalConfig::set_eval_master(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  eval_master_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.EvalConfig.eval_master)
}
inline std::string* EvalConfig::mutable_eval_master() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:object_detection.protos.EvalConfig.eval_master)
  return eval_master_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* EvalConfig::release_eval_master() {
  // @@protoc_insertion_point(field_release:object_detection.protos.EvalConfig.eval_master)
  if (!has_eval_master()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return eval_master_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void EvalConfig::set_allocated_eval_master(std::string* eval_master) {
  if (eval_master != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  eval_master_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), eval_master);
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.EvalConfig.eval_master)
}

// repeated string metrics_set = 8;
inline int EvalConfig::metrics_set_size() const {
  return metrics_set_.size();
}
inline void EvalConfig::clear_metrics_set() {
  metrics_set_.Clear();
}
inline const std::string& EvalConfig::metrics_set(int index) const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.metrics_set)
  return metrics_set_.Get(index);
}
inline std::string* EvalConfig::mutable_metrics_set(int index) {
  // @@protoc_insertion_point(field_mutable:object_detection.protos.EvalConfig.metrics_set)
  return metrics_set_.Mutable(index);
}
inline void EvalConfig::set_metrics_set(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.metrics_set)
  metrics_set_.Mutable(index)->assign(value);
}
inline void EvalConfig::set_metrics_set(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.metrics_set)
  metrics_set_.Mutable(index)->assign(std::move(value));
}
inline void EvalConfig::set_metrics_set(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  metrics_set_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:object_detection.protos.EvalConfig.metrics_set)
}
inline void EvalConfig::set_metrics_set(int index, const char* value, size_t size) {
  metrics_set_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.EvalConfig.metrics_set)
}
inline std::string* EvalConfig::add_metrics_set() {
  // @@protoc_insertion_point(field_add_mutable:object_detection.protos.EvalConfig.metrics_set)
  return metrics_set_.Add();
}
inline void EvalConfig::add_metrics_set(const std::string& value) {
  metrics_set_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:object_detection.protos.EvalConfig.metrics_set)
}
inline void EvalConfig::add_metrics_set(std::string&& value) {
  metrics_set_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:object_detection.protos.EvalConfig.metrics_set)
}
inline void EvalConfig::add_metrics_set(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  metrics_set_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:object_detection.protos.EvalConfig.metrics_set)
}
inline void EvalConfig::add_metrics_set(const char* value, size_t size) {
  metrics_set_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:object_detection.protos.EvalConfig.metrics_set)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
EvalConfig::metrics_set() const {
  // @@protoc_insertion_point(field_list:object_detection.protos.EvalConfig.metrics_set)
  return metrics_set_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
EvalConfig::mutable_metrics_set() {
  // @@protoc_insertion_point(field_mutable_list:object_detection.protos.EvalConfig.metrics_set)
  return &metrics_set_;
}

// optional string export_path = 9 [default = ""];
inline bool EvalConfig::has_export_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EvalConfig::clear_export_path() {
  export_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& EvalConfig::export_path() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.export_path)
  return export_path_.GetNoArena();
}
inline void EvalConfig::set_export_path(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  export_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.export_path)
}
inline void EvalConfig::set_export_path(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  export_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:object_detection.protos.EvalConfig.export_path)
}
inline void EvalConfig::set_export_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  export_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:object_detection.protos.EvalConfig.export_path)
}
inline void EvalConfig::set_export_path(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000004u;
  export_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.EvalConfig.export_path)
}
inline std::string* EvalConfig::mutable_export_path() {
  _has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_mutable:object_detection.protos.EvalConfig.export_path)
  return export_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* EvalConfig::release_export_path() {
  // @@protoc_insertion_point(field_release:object_detection.protos.EvalConfig.export_path)
  if (!has_export_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return export_path_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void EvalConfig::set_allocated_export_path(std::string* export_path) {
  if (export_path != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  export_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), export_path);
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.EvalConfig.export_path)
}

// optional bool ignore_groundtruth = 10 [default = false];
inline bool EvalConfig::has_ignore_groundtruth() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EvalConfig::clear_ignore_groundtruth() {
  ignore_groundtruth_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool EvalConfig::ignore_groundtruth() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.ignore_groundtruth)
  return ignore_groundtruth_;
}
inline void EvalConfig::set_ignore_groundtruth(bool value) {
  _has_bits_[0] |= 0x00000040u;
  ignore_groundtruth_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.ignore_groundtruth)
}

// optional bool use_moving_averages = 11 [default = false];
inline bool EvalConfig::has_use_moving_averages() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void EvalConfig::clear_use_moving_averages() {
  use_moving_averages_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool EvalConfig::use_moving_averages() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.use_moving_averages)
  return use_moving_averages_;
}
inline void EvalConfig::set_use_moving_averages(bool value) {
  _has_bits_[0] |= 0x00000080u;
  use_moving_averages_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.use_moving_averages)
}

// optional bool eval_instance_masks = 12 [default = false];
inline bool EvalConfig::has_eval_instance_masks() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EvalConfig::clear_eval_instance_masks() {
  eval_instance_masks_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool EvalConfig::eval_instance_masks() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.eval_instance_masks)
  return eval_instance_masks_;
}
inline void EvalConfig::set_eval_instance_masks(bool value) {
  _has_bits_[0] |= 0x00000100u;
  eval_instance_masks_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.eval_instance_masks)
}

// optional float min_score_threshold = 13 [default = 0.5];
inline bool EvalConfig::has_min_score_threshold() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void EvalConfig::clear_min_score_threshold() {
  min_score_threshold_ = 0.5f;
  _has_bits_[0] &= ~0x00040000u;
}
inline float EvalConfig::min_score_threshold() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.min_score_threshold)
  return min_score_threshold_;
}
inline void EvalConfig::set_min_score_threshold(float value) {
  _has_bits_[0] |= 0x00040000u;
  min_score_threshold_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.min_score_threshold)
}

// optional int32 max_num_boxes_to_visualize = 14 [default = 20];
inline bool EvalConfig::has_max_num_boxes_to_visualize() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void EvalConfig::clear_max_num_boxes_to_visualize() {
  max_num_boxes_to_visualize_ = 20;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EvalConfig::max_num_boxes_to_visualize() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.max_num_boxes_to_visualize)
  return max_num_boxes_to_visualize_;
}
inline void EvalConfig::set_max_num_boxes_to_visualize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00080000u;
  max_num_boxes_to_visualize_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.max_num_boxes_to_visualize)
}

// optional bool skip_scores = 15 [default = false];
inline bool EvalConfig::has_skip_scores() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void EvalConfig::clear_skip_scores() {
  skip_scores_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool EvalConfig::skip_scores() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.skip_scores)
  return skip_scores_;
}
inline void EvalConfig::set_skip_scores(bool value) {
  _has_bits_[0] |= 0x00000200u;
  skip_scores_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.skip_scores)
}

// optional bool skip_labels = 16 [default = false];
inline bool EvalConfig::has_skip_labels() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EvalConfig::clear_skip_labels() {
  skip_labels_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool EvalConfig::skip_labels() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.skip_labels)
  return skip_labels_;
}
inline void EvalConfig::set_skip_labels(bool value) {
  _has_bits_[0] |= 0x00000400u;
  skip_labels_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.skip_labels)
}

// optional bool visualize_groundtruth_boxes = 17 [default = false];
inline bool EvalConfig::has_visualize_groundtruth_boxes() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void EvalConfig::clear_visualize_groundtruth_boxes() {
  visualize_groundtruth_boxes_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool EvalConfig::visualize_groundtruth_boxes() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.visualize_groundtruth_boxes)
  return visualize_groundtruth_boxes_;
}
inline void EvalConfig::set_visualize_groundtruth_boxes(bool value) {
  _has_bits_[0] |= 0x00000800u;
  visualize_groundtruth_boxes_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.visualize_groundtruth_boxes)
}

// optional string groundtruth_box_visualization_color = 18 [default = "black"];
inline bool EvalConfig::has_groundtruth_box_visualization_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EvalConfig::clear_groundtruth_box_visualization_color() {
  groundtruth_box_visualization_color_.ClearToDefaultNoArena(&::object_detection::protos::EvalConfig::_i_give_permission_to_break_this_code_default_groundtruth_box_visualization_color_.get());
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& EvalConfig::groundtruth_box_visualization_color() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
  return groundtruth_box_visualization_color_.GetNoArena();
}
inline void EvalConfig::set_groundtruth_box_visualization_color(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  groundtruth_box_visualization_color_.SetNoArena(&::object_detection::protos::EvalConfig::_i_give_permission_to_break_this_code_default_groundtruth_box_visualization_color_.get(), value);
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
}
inline void EvalConfig::set_groundtruth_box_visualization_color(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  groundtruth_box_visualization_color_.SetNoArena(
    &::object_detection::protos::EvalConfig::_i_give_permission_to_break_this_code_default_groundtruth_box_visualization_color_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
}
inline void EvalConfig::set_groundtruth_box_visualization_color(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  groundtruth_box_visualization_color_.SetNoArena(&::object_detection::protos::EvalConfig::_i_give_permission_to_break_this_code_default_groundtruth_box_visualization_color_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
}
inline void EvalConfig::set_groundtruth_box_visualization_color(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000008u;
  groundtruth_box_visualization_color_.SetNoArena(&::object_detection::protos::EvalConfig::_i_give_permission_to_break_this_code_default_groundtruth_box_visualization_color_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
}
inline std::string* EvalConfig::mutable_groundtruth_box_visualization_color() {
  _has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_mutable:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
  return groundtruth_box_visualization_color_.MutableNoArena(&::object_detection::protos::EvalConfig::_i_give_permission_to_break_this_code_default_groundtruth_box_visualization_color_.get());
}
inline std::string* EvalConfig::release_groundtruth_box_visualization_color() {
  // @@protoc_insertion_point(field_release:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
  if (!has_groundtruth_box_visualization_color()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return groundtruth_box_visualization_color_.ReleaseNonDefaultNoArena(&::object_detection::protos::EvalConfig::_i_give_permission_to_break_this_code_default_groundtruth_box_visualization_color_.get());
}
inline void EvalConfig::set_allocated_groundtruth_box_visualization_color(std::string* groundtruth_box_visualization_color) {
  if (groundtruth_box_visualization_color != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  groundtruth_box_visualization_color_.SetAllocatedNoArena(&::object_detection::protos::EvalConfig::_i_give_permission_to_break_this_code_default_groundtruth_box_visualization_color_.get(), groundtruth_box_visualization_color);
  // @@protoc_insertion_point(field_set_allocated:object_detection.protos.EvalConfig.groundtruth_box_visualization_color)
}

// optional bool keep_image_id_for_visualization_export = 19 [default = false];
inline bool EvalConfig::has_keep_image_id_for_visualization_export() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void EvalConfig::clear_keep_image_id_for_visualization_export() {
  keep_image_id_for_visualization_export_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool EvalConfig::keep_image_id_for_visualization_export() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.keep_image_id_for_visualization_export)
  return keep_image_id_for_visualization_export_;
}
inline void EvalConfig::set_keep_image_id_for_visualization_export(bool value) {
  _has_bits_[0] |= 0x00001000u;
  keep_image_id_for_visualization_export_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.keep_image_id_for_visualization_export)
}

// optional bool retain_original_images = 23 [default = true];
inline bool EvalConfig::has_retain_original_images() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void EvalConfig::clear_retain_original_images() {
  retain_original_images_ = true;
  _has_bits_[0] &= ~0x00100000u;
}
inline bool EvalConfig::retain_original_images() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.retain_original_images)
  return retain_original_images_;
}
inline void EvalConfig::set_retain_original_images(bool value) {
  _has_bits_[0] |= 0x00100000u;
  retain_original_images_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.retain_original_images)
}

// optional bool include_metrics_per_category = 24 [default = false];
inline bool EvalConfig::has_include_metrics_per_category() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void EvalConfig::clear_include_metrics_per_category() {
  include_metrics_per_category_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool EvalConfig::include_metrics_per_category() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.include_metrics_per_category)
  return include_metrics_per_category_;
}
inline void EvalConfig::set_include_metrics_per_category(bool value) {
  _has_bits_[0] |= 0x00002000u;
  include_metrics_per_category_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.include_metrics_per_category)
}

// optional float recall_lower_bound = 26 [default = 0];
inline bool EvalConfig::has_recall_lower_bound() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void EvalConfig::clear_recall_lower_bound() {
  recall_lower_bound_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline float EvalConfig::recall_lower_bound() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.recall_lower_bound)
  return recall_lower_bound_;
}
inline void EvalConfig::set_recall_lower_bound(float value) {
  _has_bits_[0] |= 0x00004000u;
  recall_lower_bound_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.recall_lower_bound)
}

// optional float recall_upper_bound = 27 [default = 1];
inline bool EvalConfig::has_recall_upper_bound() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void EvalConfig::clear_recall_upper_bound() {
  recall_upper_bound_ = 1;
  _has_bits_[0] &= ~0x00400000u;
}
inline float EvalConfig::recall_upper_bound() const {
  // @@protoc_insertion_point(field_get:object_detection.protos.EvalConfig.recall_upper_bound)
  return recall_upper_bound_;
}
inline void EvalConfig::set_recall_upper_bound(float value) {
  _has_bits_[0] |= 0x00400000u;
  recall_upper_bound_ = value;
  // @@protoc_insertion_point(field_set:object_detection.protos.EvalConfig.recall_upper_bound)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace object_detection

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_object_5fdetection_2fprotos_2feval_2eproto
