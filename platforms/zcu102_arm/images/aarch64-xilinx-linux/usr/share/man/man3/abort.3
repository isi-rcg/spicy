.\" Copyright 2007 (C) Michael Kerrisk <mtk.manpages@gmail.com>
.\" some parts Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 21:46:21 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Aug  4 10:51:53 2000 - patch from Joseph S. Myers
.\" 2007-12-15, mtk, Mostly rewritten
.\"
.TH ABORT 3  2017-11-26 "GNU" "Linux Programmer's Manual"
.SH NAME
abort \- cause abnormal process termination
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.PP
.B void abort(void);
.fi
.SH DESCRIPTION
The
.BR abort ()
first unblocks the
.B SIGABRT
signal, and then raises that signal for the calling process
(as though
.BR raise (3)
was called).
This results in the abnormal termination of the process unless the
.B SIGABRT
signal is caught and the signal handler does not return
(see
.BR longjmp (3)).
.PP
If the
.B SIGABRT
signal is ignored, or caught by a handler that returns, the
.BR abort ()
function will still terminate the process.
It does this by restoring the default disposition for
.B SIGABRT
and then raising the signal for a second time.
.SH RETURN VALUE
The
.BR abort ()
function never returns.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lb lb lb
l l l.
Interface	Attribute	Value
T{
.BR abort ()
T}	Thread safety	MT-Safe
.TE
.SH NOTES
Up until glibc 2.26,
if the
.BR abort ()
function caused process termination,
all open streams were closed and flushed (as with
.BR fclose (3)).
However, in some cases this could result in deadlocks and data corruption.
Therefore, starting with glibc 2.27,
.\" glibc commit 91e7cf982d0104f0e71770f5ae8e3faf352dea9f
.BR abort ()
terminates the process without flushing streams.
POSIX.1 permits either possible behavior, saying that
.BR abort ()
"may include an attempt to effect fclose() on all open streams".
.SH CONFORMING TO
SVr4, POSIX.1-2001, POSIX.1-2008, 4.3BSD, C89, C99.
.SH SEE ALSO
.BR gdb (1),
.BR sigaction (2),
.BR assert (3),
.BR exit (3),
.BR longjmp (3),
.BR raise (3)
.SH COLOPHON
This page is part of release 5.01 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
