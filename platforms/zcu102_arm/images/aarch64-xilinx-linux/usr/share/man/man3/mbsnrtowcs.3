.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_ONEPARA)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\" %%%LICENSE_END
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"
.TH MBSNRTOWCS 3  2019-03-06 "GNU" "Linux Programmer's Manual"
.SH NAME
mbsnrtowcs \- convert a multibyte string to a wide-character string
.SH SYNOPSIS
.nf
.B #include <wchar.h>
.PP
.BI "size_t mbsnrtowcs(wchar_t *" dest ", const char **" src ,
.BI "                  size_t " nms ", size_t " len ", mbstate_t *" ps );
.fi
.PP
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.PP
.BR mbsnrtowcs ():
.PD 0
.ad l
.RS 4
.TP 4
Since glibc 2.10:
_POSIX_C_SOURCE\ >=\ 200809L
.TP
Before glibc 2.10:
_GNU_SOURCE
.RE
.ad
.PD
.SH DESCRIPTION
The
.BR mbsnrtowcs ()
function is like the
.BR mbsrtowcs (3)
function, except that
the number of bytes to be converted, starting at
.IR *src ,
is limited to at most
.IR nms
bytes.
.PP
If
.I dest
is not NULL, the
.BR mbsnrtowcs ()
function converts at
most
.I nms
bytes from the
multibyte string
.I *src
to a wide-character string starting at
.IR dest .
At most
.I len
wide characters are written to
.IR dest .
The shift state
.I *ps
is updated.
The conversion is effectively performed by repeatedly
calling
.I "mbrtowc(dest, *src, n, ps)"
where
.I n
is some
positive number, as long as this call succeeds, and then incrementing
.I dest
by one and
.I *src
by the number of bytes consumed.
The
conversion can stop for three reasons:
.IP 1. 3
An invalid multibyte sequence has been encountered.
In this case,
.I *src
is left pointing to the invalid multibyte sequence,
.I (size_t)\ \-1
is returned,
and
.I errno
is set to
.BR EILSEQ .
.IP 2.
The
.I nms
limit forces a stop,
or
.I len
non-L\(aq\e0\(aq wide characters
have been stored at
.IR dest .
In this case,
.I *src
is left pointing to the
next multibyte sequence to be converted, and the number of wide characters
written to
.I dest
is returned.
.IP 3.
The multibyte string has been completely converted, including the
terminating null wide character (\(aq\e0\(aq)
(which has the side effect of bringing back
.I *ps
to the
initial state).
In this case,
.I *src
is set to NULL, and the number of wide
characters written to
.IR dest ,
excluding the terminating null wide character,
is returned.
.PP
According to POSIX.1,
if the input buffer ends with an incomplete character,
it is unspecified whether conversion stops at the end of
the previous character (if any), or at the end of the input buffer.
The glibc implementation adopts the former behavior.
.PP
If
.IR dest
is NULL,
.I len
is ignored, and the conversion proceeds as
above, except that the converted wide characters
are not written out to memory,
and that no destination length limit exists.
.PP
In both of the above cases, if
.I ps
is NULL, a static anonymous
state known only to the
.BR mbsnrtowcs ()
function is used instead.
.PP
The programmer must ensure that there is room for at least
.I len
wide
characters at
.IR dest .
.SH RETURN VALUE
The
.BR mbsnrtowcs ()
function returns the number of wide characters
that make up the converted part of the wide-character string,
not including the terminating null wide character.
If an invalid multibyte sequence was
encountered,
.I (size_t)\ \-1
is returned, and
.I errno
set to
.BR EILSEQ .
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lb lb lbw29
l l l.
Interface	Attribute	Value
T{
.BR mbsnrtowcs ()
T}	Thread safety	MT-Unsafe race:mbsnrtowcs/!ps
.TE
.sp 1
.SH CONFORMING TO
POSIX.1-2008.
.SH NOTES
The behavior of
.BR mbsnrtowcs ()
depends on the
.B LC_CTYPE
category of the
current locale.
.PP
Passing NULL as
.I ps
is not multithread safe.
.SH SEE ALSO
.BR iconv (3),
.BR mbrtowc (3)
.BR mbsinit (3),
.BR mbsrtowcs (3)
.SH COLOPHON
This page is part of release 5.01 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
