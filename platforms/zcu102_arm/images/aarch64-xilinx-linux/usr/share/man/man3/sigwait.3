.\" Copyright (c) 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.TH SIGWAIT 3 2017-07-13 "Linux" "Linux Programmer's Manual"
.SH NAME
sigwait \- wait for a signal
.SH SYNOPSIS
.nf
.B #include <signal.h>
.PP
.BI " int sigwait(const sigset_t *" set ", int *" sig );
.fi
.PP
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.PP
.ad l
.BR sigwait ():
.RS 4
Since glibc 2.26:
    _POSIX_C_SOURCE >= 199506L
.br
Glibc 2.25 and earlier:
    _POSIX_C_SOURCE
.RE
.ad b
.SH DESCRIPTION
The
.BR sigwait ()
function suspends execution of the calling thread until
one of the signals specified in the signal set
.IR set
becomes pending.
The function accepts the signal
(removes it from the pending list of signals),
and returns the signal number in
.IR sig .
.PP
The operation of
.BR sigwait ()
is the same as
.BR sigwaitinfo (2),
except that:
.IP * 2
.BR sigwait ()
returns only the signal number, rather than a
.I siginfo_t
structure describing the signal.
.IP *
The return values of the two functions are different.
.SH RETURN VALUE
On success,
.BR sigwait ()
returns 0.
On error, it returns a positive error number (listed in ERRORS).
.SH ERRORS
.TP
.B EINVAL
.\" Does not occur for glibc.
.I set
contains an invalid signal number.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lb lb lb
l l l.
Interface	Attribute	Value
T{
.BR sigwait ()
T}	Thread safety	MT-Safe
.TE
.SH CONFORMING TO
POSIX.1-2001, POSIX.1-2008.
.SH NOTES
.BR sigwait ()
is implemented using
.BR sigtimedwait (2).
.PP
The glibc implementation of
.BR sigwait ()
silently ignores attempts to wait for the two real-time signals that
are used internally by the NPTL threading implementation.
See
.BR nptl (7)
for details.
.SH EXAMPLE
See
.BR pthread_sigmask (3).
.SH SEE ALSO
.BR sigaction (2),
.BR signalfd (2),
.BR sigpending (2),
.BR sigsuspend (2),
.BR sigwaitinfo (2),
.BR sigsetops (3),
.BR signal (7)
.SH COLOPHON
This page is part of release 5.01 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
