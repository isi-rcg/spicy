.\" Copyright (c) OpenBSD Group
.\" All rights reserved.
.\"
.\" %%%LICENSE_START(BSD_3_CLAUSE_UCB)
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" %%%LICENSE_END
.\"
.\" Converted into a manpage again by Martin Schulze <joey@infodrom.org>
.\"
.\" Added -lutil remark, 030718
.\"
.TH OPENPTY 3  2017-09-15 "GNU" "Linux Programmer's Manual"
.SH NAME
openpty, login_tty, forkpty \- terminal utility functions
.SH SYNOPSIS
.nf
.B #include <pty.h>
.PP
.BI "int openpty(int *" amaster ", int *" aslave ", char *" name ,
.BI "            const struct termios *" termp ,
.BI "            const struct winsize *" winp );
.PP
.BI "pid_t forkpty(int *" amaster ", char *" name ,
.BI "              const struct termios *" termp ,
.BI "              const struct winsize *" winp );

.B #include <utmp.h>
.PP
.BI "int login_tty(int " fd );
.PP
Link with \fI\-lutil\fP.
.fi
.SH DESCRIPTION
The
.BR openpty ()
function finds an available pseudoterminal and returns file descriptors
for the master and slave in
.I amaster
and
.IR aslave .
If
.I name
is not NULL, the filename of the slave is returned in
.IR name .
If
.I termp
is not NULL, the terminal parameters of the slave will be set to the
values in
.IR termp .
If
.I winp
is not NULL, the window size of the slave will be set to the values in
.IR winp .
.PP
The
.BR login_tty ()
function prepares for a login on the terminal
.I fd
(which may be a real terminal device, or the slave of a pseudoterminal as
returned by
.BR openpty ())
by creating a new session, making
.I fd
the controlling terminal for the calling process, setting
.I fd
to be the standard input, output, and error streams of the current
process, and closing
.IR fd .
.PP
The
.BR forkpty ()
function combines
.BR openpty (),
.BR fork (2),
and
.BR login_tty ()
to create a new process operating in a pseudoterminal.
The file
descriptor of the master side of the pseudoterminal is returned in
.IR amaster .
If
.I name
is not NULL, the buffer it points to is used to return the
filename of the slave.
The
.I termp
and
.I winp
arguments, if not NULL,
will determine the terminal attributes and window size of the slave
side of the pseudoterminal.
.SH RETURN VALUE
If a call to
.BR openpty (),
.BR login_tty (),
or
.BR forkpty ()
is not successful, \-1 is returned and
.I errno
is set to indicate the error.
Otherwise,
.BR openpty (),
.BR login_tty (),
and the child process of
.BR forkpty ()
return 0, and the parent process of
.BR forkpty ()
returns the process ID of the child process.
.SH ERRORS
.BR openpty ()
fails if:
.TP
.B ENOENT
There are no available terminals.
.PP
.BR login_tty ()
fails if
.BR ioctl (2)
fails to set
.I fd
to the controlling terminal of the calling process.
.PP
.BR forkpty ()
fails if either
.BR openpty ()
or
.BR fork (2)
fails.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbw20 lb lb
l l l.
Interface	Attribute	Value
T{
.BR forkpty (),
.BR openpty ()
T}	Thread safety	MT-Safe locale
T{
.BR login_tty ()
T}	Thread safety	MT-Unsafe race:ttyname
.TE
.sp 1
.SH CONFORMING TO
These are BSD functions, present in glibc.
They are not standardized in POSIX.
.SH NOTES
The
.B const
modifiers were added to the structure pointer arguments of
.BR openpty ()
and
.BR forkpty ()
in glibc 2.8.
.PP
In versions of glibc before 2.0.92,
.BR openpty ()
returns file descriptors for a BSD pseudoterminal pair;
since glibc 2.0.92,
it first attempts to open a UNIX 98 pseudoterminal pair,
and falls back to opening a BSD pseudoterminal pair if that fails.
.SH BUGS
Nobody knows how much space should be reserved for
.IR name .
So, calling
.BR openpty ()
or
.BR forkpty ()
with non-NULL
.I name
may not be secure.
.SH SEE ALSO
.BR fork (2),
.BR ttyname (3),
.BR pty (7)
.SH COLOPHON
This page is part of release 5.01 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
