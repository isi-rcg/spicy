.\" Copyright (c) 2015 William Woodruff (william@tuffbizz.com)
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.TH GET_PHYS_PAGES 3  2019-03-06 "GNU" "Linux Programmer's Manual"
.SH NAME
get_phys_pages, get_avphys_pages \- get total and available physical
page counts
.SH SYNOPSIS
.nf
.B "#include <sys/sysinfo.h>"
.PP
.B long int get_phys_pages(void);
.B long int get_avphys_pages(void);
.fi
.SH DESCRIPTION
The function
.BR get_phys_pages ()
returns the total number of physical pages of memory available on the system.
.PP
The function
.BR get_avphys_pages ()
returns the number of currently available physical pages of memory on the
system.
.SH RETURN VALUE
On success,
these functions return a nonnegative value as given in DESCRIPTION.
On failure, they return \-1 and set
.I errno
to indicate the cause of the error.
.SH ERRORS
.TP
.B ENOSYS
The system could not provide the required information
(possibly because the
.I /proc
filesystem was not mounted).
.SH CONFORMING TO
These functions are GNU extensions.
.SH NOTES
These functions obtain the required information by scanning the
.I MemTotal
and
.I MemFree
fields of
.IR /proc/meminfo .
.PP
The following
.BR sysconf (3)
calls provide a portable means of obtaining the same information as the
functions described on this page.
.PP
.in +4n
.EX
total_pages = sysconf(_SC_PHYS_PAGES);    /* total pages */
avl_pages = sysconf(_SC_AVPHYS_PAGES);    /* available pages */
.EE
.in
.SH EXAMPLE
The following example shows how
.BR get_phys_pages ()
and
.BR get_avphys_pages ()
can be used.
.PP
.EX
#include <stdio.h>
#include <stdlib.h>
#include <sys/sysinfo.h>

int
main(int argc, char *argv[])
{
    printf("This system has %ld pages of physical memory and "
            "%ld pages of physical memory available.\en",
            get_phys_pages(), get_avphys_pages());
    exit(EXIT_SUCCESS);
}
.EE
.SH SEE ALSO
.BR sysconf (3)
.SH COLOPHON
This page is part of release 5.01 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
