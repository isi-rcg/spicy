.\" Copyright (c) 2005 Michael Kerrisk
.\" based on earlier work by faith@cs.unc.edu and
.\" Mike Battersby <mib@deakin.edu.au>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" 2005-09-15, mtk, Created new page by splitting off from sigaction.2
.\"
.TH SIGSUSPEND 2 2019-03-06 "Linux" "Linux Programmer's Manual"
.SH NAME
sigsuspend, rt_sigsuspend \- wait for a signal
.SH SYNOPSIS
.B #include <signal.h>
.PP
.BI "int sigsuspend(const sigset_t *" mask );
.PP
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.PP
.ad l
.BR sigsuspend ():
_POSIX_C_SOURCE
.ad b
.SH DESCRIPTION
.BR sigsuspend ()
temporarily replaces the signal mask of the calling thread with the
mask given by
.I mask
and then suspends the thread until delivery of a signal whose
action is to invoke a signal handler or to terminate a process.
.PP
If the signal terminates the process, then
.BR sigsuspend ()
does not return.
If the signal is caught, then
.BR sigsuspend ()
returns after the signal handler returns,
and the signal mask is restored to the state before the call to
.BR sigsuspend ().
.PP
It is not possible to block
.B SIGKILL
or
.BR SIGSTOP ;
specifying these signals in
.IR mask ,
has no effect on the thread's signal mask.
.SH RETURN VALUE
.BR sigsuspend ()
always returns \-1, with
.I errno
set to indicate the error (normally,
.BR EINTR ).
.SH ERRORS
.TP
.B EFAULT
.I mask
points to memory which is not a valid part of the process address space.
.TP
.B EINTR
The call was interrupted by a signal;
.BR signal (7).
.SH CONFORMING TO
POSIX.1-2001, POSIX.1-2008.
.SH NOTES
.PP
Normally,
.BR sigsuspend ()
is used in conjunction with
.BR sigprocmask (2)
in order to prevent delivery of a signal during the execution of a
critical code section.
The caller first blocks the signals with
.BR sigprocmask (2).
When the critical code has completed, the caller then waits for the
signals by calling
.BR sigsuspend ()
with the signal mask that was returned by
.BR sigprocmask (2)
(in the
.I oldset
argument).
.PP
See
.BR sigsetops (3)
for details on manipulating signal sets.
.\"
.SS C library/kernel differences
The original Linux system call was named
.BR sigsuspend ().
However, with the addition of real-time signals in Linux 2.2,
the fixed-size, 32-bit
.IR sigset_t
type supported by that system call was no longer fit for purpose.
Consequently, a new system call,
.BR rt_sigsuspend (),
was added to support an enlarged
.IR sigset_t
type.
The new system call takes a second argument,
.IR "size_t sigsetsize" ,
which specifies the size in bytes of the signal set in
.IR mask .
This argument is currently required to have the value
.IR sizeof(sigset_t)
(or the error
.B EINVAL
results).
The glibc
.BR sigsuspend ()
wrapper function hides these details from us, transparently calling
.BR rt_sigsuspend ()
when the kernel provides it.
.\"
.SH SEE ALSO
.BR kill (2),
.BR pause (2),
.BR sigaction (2),
.BR signal (2),
.BR sigprocmask (2),
.BR sigwaitinfo (2),
.BR sigsetops (3),
.BR sigwait (3),
.BR signal (7)
.SH COLOPHON
This page is part of release 5.01 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
