.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.TH GETPAGESIZE 2 2017-09-15 "Linux" "Linux Programmer's Manual"
.SH NAME
getpagesize \- get memory page size
.SH SYNOPSIS
.B #include <unistd.h>
.PP
.B int getpagesize(void);
.PP
.in -4n
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.in
.PP
.BR getpagesize ():
.ad l
.RS 4
.PD 0
.TP 4
Since glibc 2.19:
.nf
_DEFAULT_SOURCE || ! (_POSIX_C_SOURCE\ >=\ 200112L)
.TP 4
.fi
From glibc 2.12 to 2.19:
.nf
_BSD_SOURCE || ! (_POSIX_C_SOURCE\ >=\ 200112L)
.TP 4
.fi
Before glibc 2.12:
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500
.\"    || _XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.PD
.RE
.ad b
.SH DESCRIPTION
The function
.BR getpagesize ()
returns the number of bytes in a memory page,
where "page" is a fixed-length block,
the unit for memory allocation and file mapping performed by
.BR mmap (2).
.\" .SH HISTORY
.\" This call first appeared in 4.2BSD.
.SH CONFORMING TO
SVr4, 4.4BSD, SUSv2.
In SUSv2 the
.BR getpagesize ()
call is labeled LEGACY, and in POSIX.1-2001
it has been dropped;
HP-UX does not have this call.
.SH NOTES
Portable applications should employ
.I sysconf(_SC_PAGESIZE)
instead of
.BR getpagesize ():
.PP
.in +4n
.EX
#include <unistd.h>
long sz = sysconf(_SC_PAGESIZE);
.EE
.in
.PP
(Most systems allow the synonym
.B _SC_PAGE_SIZE
for
.BR _SC_PAGESIZE .)
.PP
Whether
.BR getpagesize ()
is present as a Linux system call depends on the architecture.
If it is, it returns the kernel symbol
.BR PAGE_SIZE ,
whose value depends on the architecture and machine model.
Generally, one uses binaries that are dependent on the architecture but not
on the machine model, in order to have a single binary
distribution per architecture.
This means that a user program
should not find
.B PAGE_SIZE
at compile time from a header file,
but use an actual system call, at least for those architectures
(like sun4) where this dependency exists.
Here glibc 2.0 fails because its
.BR getpagesize ()
returns a statically derived value, and does not use a system call.
Things are OK in glibc 2.1.
.SH SEE ALSO
.BR mmap (2),
.BR sysconf (3)
.SH COLOPHON
This page is part of release 5.01 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
