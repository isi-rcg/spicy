.\" Copyright (c) 1998 Andries Brouwer (aeb@cwi.nl), 24 September 1998
.\"
.\" %%%LICENSE_START(VERBATIM)
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" %%%LICENSE_END
.\"
.\" Modified, 27 May 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on capability requirements
.\"
.TH REBOOT 2 2019-03-06 "Linux" "Linux Programmer's Manual"
.SH NAME
reboot \- reboot or enable/disable Ctrl-Alt-Del
.SH SYNOPSIS
/* Since kernel version 2.1.30 there are symbolic names LINUX_REBOOT_*
   for the constants and a fourth argument to the call: */
.PP
.B #include <unistd.h>
.br
.B #include <linux/reboot.h>
.PP
.BI "int reboot(int " magic ", int " magic2 ", int " cmd ", void *" arg );

/* Under glibc and most alternative libc's (including uclibc, dietlibc,
   musl and a few others), some of the constants involved have gotten
   symbolic names RB_*, and the library call is a 1-argument
   wrapper around the system call: */
.PP
.B #include <unistd.h>
.br
.B #include <sys/reboot.h>
.PP
.BI "int reboot(int " cmd );
.SH DESCRIPTION
The
.BR reboot ()
call reboots the system, or enables/disables the reboot keystroke
(abbreviated CAD, since the default is Ctrl-Alt-Delete;
it can be changed using
.BR loadkeys (1)).
.PP
This system call fails (with the error
.BR EINVAL )
unless
.I magic
equals
.B LINUX_REBOOT_MAGIC1
(that is, 0xfee1dead) and
.I magic2
equals
.B LINUX_REBOOT_MAGIC2
(that is, 672274793).
However, since 2.1.17 also
.B LINUX_REBOOT_MAGIC2A
(that is, 85072278)
and since 2.1.97 also
.B LINUX_REBOOT_MAGIC2B
(that is, 369367448)
and since 2.5.71 also
.B LINUX_REBOOT_MAGIC2C
(that is, 537993216)
are permitted as values for
.IR magic2 .
(The hexadecimal values of these constants are meaningful.)
.PP
The
.I cmd
argument can have the following values:
.TP
.B LINUX_REBOOT_CMD_CAD_OFF
.RB ( RB_DISABLE_CAD ,
0).
CAD is disabled.
This means that the CAD keystroke will cause a
.B SIGINT
signal to be
sent to init (process 1), whereupon this process may decide upon a
proper action (maybe: kill all processes, sync, reboot).
.TP
.B LINUX_REBOOT_CMD_CAD_ON
.RB ( RB_ENABLE_CAD ,
0x89abcdef).
CAD is enabled.
This means that the CAD keystroke will immediately cause
the action associated with
.BR LINUX_REBOOT_CMD_RESTART .
.TP
.B LINUX_REBOOT_CMD_HALT
.RB ( RB_HALT_SYSTEM ,
0xcdef0123; since Linux 1.1.76).
The message "System halted." is printed, and the system is halted.
Control is given to the ROM monitor, if there is one.
If not preceded by a
.BR sync (2),
data will be lost.
.TP
.BR LINUX_REBOOT_CMD_KEXEC
.RB ( RB_KEXEC ,
0x45584543, since Linux 2.6.13).
Execute a kernel that has been loaded earlier with
.BR kexec_load (2).
This option is available only if the kernel was configured with
.BR CONFIG_KEXEC .
.TP
.B LINUX_REBOOT_CMD_POWER_OFF
.RB ( RB_POWER_OFF ,
0x4321fedc; since Linux 2.1.30).
The message "Power down." is printed, the system is stopped,
and all power is removed from the system, if possible.
If not preceded by a
.BR sync (2),
data will be lost.
.TP
.B LINUX_REBOOT_CMD_RESTART
.RB ( RB_AUTOBOOT ,
0x1234567).
The message "Restarting system." is printed, and a default
restart is performed immediately.
If not preceded by a
.BR sync (2),
data will be lost.
.TP
.B LINUX_REBOOT_CMD_RESTART2
(0xa1b2c3d4; since Linux 2.1.30).
The message "Restarting system with command \(aq%s\(aq" is printed,
and a restart (using the command string given in
.IR arg )
is performed immediately.
If not preceded by a
.BR sync (2),
data will be lost.
.TP
.BR LINUX_REBOOT_CMD_SW_SUSPEND
.RB ( RB_SW_SUSPEND ,
0xd000fce1; since Linux 2.5.18).
The system is suspended (hibernated) to disk.
This option is available only if the kernel was configured with
.BR CONFIG_HIBERNATION .
.PP
Only the superuser may call
.BR reboot ().
.PP
The precise effect of the above actions depends on the architecture.
For the i386 architecture, the additional argument does not do
anything at present (2.1.122), but the type of reboot can be
determined by kernel command-line arguments ("reboot=...") to be
either warm or cold, and either hard or through the BIOS.
.\"
.SS Behavior inside PID namespaces
.\" commit cf3f89214ef6a33fad60856bc5ffd7bb2fc4709b
.\" see also commit 923c7538236564c46ee80c253a416705321f13e3
Since Linux 3.4,
if
.BR reboot ()
is called
from a PID namespace other than the initial PID namespace
with one of the
.I cmd
values listed below,
it performs a "reboot" of that namespace:
the "init" process of the PID namespace is immediately terminated,
with the effects described in
.BR pid_namespaces (7).
.PP
The values that can be supplied in
.I cmd
when calling
.BR reboot ()
in this case are as follows:
.TP
.BR LINUX_REBOOT_CMD_RESTART ", " LINUX_REBOOT_CMD_RESTART2
The "init" process is terminated,
and
.BR wait (2)
in the parent process reports that the child was killed with a
.B SIGHUP
signal.
.TP
.BR LINUX_REBOOT_CMD_POWER_OFF ", " LINUX_REBOOT_CMD_HALT
The "init" process is terminated,
and
.BR wait (2)
in the parent process reports that the child was killed with a
.B SIGINT
signal.
.PP
For the other
.I cmd
values,
.BR reboot ()
returns \-1 and
.I errno
is set to
.BR EINVAL .
.SH RETURN VALUE
For the values of
.I cmd
that stop or restart the system,
a successful call to
.BR reboot ()
does not return.
For the other
.I cmd
values, zero is returned on success.
In all cases, \-1 is returned on failure, and
.I errno
is set appropriately.
.SH ERRORS
.TP
.B EFAULT
Problem with getting user-space data under
.BR LINUX_REBOOT_CMD_RESTART2 .
.TP
.B EINVAL
Bad magic numbers or \fIcmd\fP.
.TP
.B EPERM
The calling process has insufficient privilege to call
.BR reboot ();
the caller must have the
.B CAP_SYS_BOOT
inside its user namespace.
.SH CONFORMING TO
.BR reboot ()
is Linux-specific,
and should not be used in programs intended to be portable.
.SH SEE ALSO
.BR systemctl (1),
.BR systemd (1),
.BR kexec_load (2),
.BR sync (2),
.BR bootparam (7),
.BR capabilities (7),
.BR ctrlaltdel (8),
.BR halt (8),
.BR shutdown (8)
.SH COLOPHON
This page is part of release 5.01 of the Linux
.I man-pages
project.
A description of the project,
information about reporting bugs,
and the latest version of this page,
can be found at
\%https://www.kernel.org/doc/man\-pages/.
