set(_supported_components model_config;math;dpu_task;xnnpp;classification;tfssd;facedetect;facefeature;lanedetect;yolov2;yolov3;facelandmark;ssd;segmentation;refinedet;openpose;posedetect;reid;multitask;platedetect;platenum;platerecog;general1;medicalsegmentation)
set(vitis_ai_library_FOUND True)
set(_components ${_supported_components})
if(${vitis_ai_library_FIND_COMPONENTS})
  set(_components ${vitis_ai_library_FIND_COMPONENTS})
endif()
message("_components is ${_components}")
foreach(_comp ${_components})
  if (NOT ";${_supported_components};" MATCHES ${_comp})
    set(vitis_ai_library_FOUND False)
    set(vitis_ai_library_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
  endif()
  include("${CMAKE_CURRENT_LIST_DIR}/${_comp}-targets.cmake")
  get_target_property(TARGET_LOCATION vitis_ai_library::${_comp} LOCATION)
  message(STATUS "Found importable target vitis_ai_library::${_comp}: ${TARGET_LOCATION}")
endforeach()

get_filename_component(vitis_ai_library_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
set(vitis_ai_library_INCLUDE_DIRS "${vitis_ai_library_CMAKE_DIR}/../../../include")
find_package(vart COMPONENTS util xrt-device-handle buffer-object dpu-controller runner dpu-runner elf-util REQUIRED)
find_package(OpenCV REQUIRED opencv_core opencv_video opencv_videoio opencv_imgproc opencv_imgcodecs opencv_highgui)
find_package(Protobuf 3.4.0 REQUIRED)
find_package(glog REQUIRED)
