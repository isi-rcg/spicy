<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gst" version="1.0"/>
  <include name="GstBase" version="1.0"/>
  <include name="GstVideo" version="1.0"/>
  <package name="gstreamer-gl-1.0"/>
  <c:include name="gst/gl/gl.h"/>
  <namespace name="GstGL"
             version="1.0"
             shared-library="libgstgl-1.0.so.0"
             c:identifier-prefixes="Gst"
             c:symbol-prefixes="gst">
    <constant name="BUFFER_POOL_OPTION_GL_SYNC_META"
              value="GstBufferPoolOptionGLSyncMeta"
              c:type="GST_BUFFER_POOL_OPTION_GL_SYNC_META">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
           line="32">An option that can be activated on bufferpools to request OpenGL
synchronization metadata on buffers from the pool.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                       line="38"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="BUFFER_POOL_OPTION_GL_TEXTURE_TARGET_2D"
              value="GstBufferPoolOptionGLTextureTarget2D"
              c:type="GST_BUFFER_POOL_OPTION_GL_TEXTURE_TARGET_2D">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglformat.h"
           line="50">String used for %GST_GL_TEXTURE_TARGET_2D as a #GstBufferPool pool option</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h" line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="BUFFER_POOL_OPTION_GL_TEXTURE_TARGET_EXTERNAL_OES"
              value="GstBufferPoolOptionGLTextureTargetExternalOES"
              c:type="GST_BUFFER_POOL_OPTION_GL_TEXTURE_TARGET_EXTERNAL_OES">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglformat.h"
           line="64">String used for %GST_GL_TEXTURE_TARGET_EXTERNAL_OES as a #GstBufferPool pool option</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h" line="69"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="BUFFER_POOL_OPTION_GL_TEXTURE_TARGET_RECTANGLE"
              value="GstBufferPoolOptionGLTextureTargetRectangle"
              c:type="GST_BUFFER_POOL_OPTION_GL_TEXTURE_TARGET_RECTANGLE">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglformat.h"
           line="57">String used for %GST_GL_TEXTURE_TARGET_RECTANGLE as a #GstBufferPool pool option</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h" line="62"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="CAPS_FEATURE_MEMORY_GL_BUFFER"
              value="memory:GLBuffer"
              c:type="GST_CAPS_FEATURE_MEMORY_GL_BUFFER">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbuffer.h"
           line="120">Name of the caps feature indicating the use of GL buffers</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h"
                       line="125"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="CAPS_FEATURE_MEMORY_GL_MEMORY"
              value="memory:GLMemory"
              c:type="GST_CAPS_FEATURE_MEMORY_GL_MEMORY">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemory.h"
           line="42">Name of the caps feature for indicating the use of #GstGLMemory</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h" line="47"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <bitfield name="GLAPI"
              glib:type-name="GstGLAPI"
              glib:get-type="gst_gl_api_get_type"
              c:type="GstGLAPI">
      <member name="none"
              value="0"
              c:identifier="GST_GL_API_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="33">no API</doc>
      </member>
      <member name="opengl"
              value="1"
              c:identifier="GST_GL_API_OPENGL"
              glib:nick="opengl">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="34">Desktop OpenGL up to and including 3.1.  The
                   compatibility profile when the OpenGL version is &gt;= 3.2</doc>
      </member>
      <member name="opengl3"
              value="2"
              c:identifier="GST_GL_API_OPENGL3"
              glib:nick="opengl3">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="36">Desktop OpenGL &gt;= 3.2 core profile</doc>
      </member>
      <member name="gles1"
              value="32768"
              c:identifier="GST_GL_API_GLES1"
              glib:nick="gles1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="37">OpenGL ES 1.x</doc>
      </member>
      <member name="gles2"
              value="65536"
              c:identifier="GST_GL_API_GLES2"
              glib:nick="gles2">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="38">OpenGL ES 2.x and 3.x</doc>
      </member>
      <member name="any"
              value="4294967295"
              c:identifier="GST_GL_API_ANY"
              glib:nick="any">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="39">Any OpenGL API</doc>
      </member>
      <function name="from_string" c:identifier="gst_gl_api_from_string">
        <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglapi.c"
               line="93">The #GstGLAPI represented by @api_s</doc>
          <type name="GLAPI" c:type="GstGLAPI"/>
        </return-value>
        <parameters>
          <parameter name="api_s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglapi.c"
                 line="91">a space seperated string of OpenGL apis</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="gst_gl_api_to_string">
        <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="103"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglapi.c"
               line="40">A space seperated string of the OpenGL api's enabled in @api</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglapi.c"
                 line="38">a #GstGLAPI to stringify</doc>
            <type name="GLAPI" c:type="GstGLAPI"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <record name="GLAllocationParams"
            c:type="GstGLAllocationParams"
            glib:type-name="GstGLAllocationParams"
            glib:get-type="gst_gl_allocation_params_get_type"
            c:symbol-prefix="gl_allocation_params">
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="220"/>
      <field name="struct_size" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="186">the size of the struct (including and subclass data)</doc>
        <type name="gsize" c:type="gsize"/>
      </field>
      <field name="copy" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="187">a #GstGLAllocationParamsCopyFunc</doc>
        <type name="GLAllocationParamsCopyFunc"
              c:type="GstGLAllocationParamsCopyFunc"/>
      </field>
      <field name="free" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="188">a #GstGLAllocationParamsFreeFunc</doc>
        <type name="GLAllocationParamsFreeFunc"
              c:type="GstGLAllocationParamsFreeFunc"/>
      </field>
      <field name="alloc_flags" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="189">allocation flags</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="alloc_size" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="190">the allocation size</doc>
        <type name="gsize" c:type="gsize"/>
      </field>
      <field name="alloc_params" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="191">the #GstAllocationParams</doc>
        <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
      </field>
      <field name="context" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="192">a #GstGLContext</doc>
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="notify" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="193">a #GDestroyNotify</doc>
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="user_data" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="194">argument to call @notify with</doc>
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="wrapped_data" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="195">the wrapped data pointer</doc>
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="gl_handle" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="196">the wrapped OpenGL handle</doc>
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <method name="copy"
              c:identifier="gst_gl_allocation_params_copy"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="238"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.c"
               line="660">a copy of the #GstGLAllocationParams specified by
         @src or %NULL on failure</doc>
          <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
        </return-value>
        <parameters>
          <instance-parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="658">the #GstGLAllocationParams to initialize</doc>
            <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="copy_data"
              c:identifier="gst_gl_allocation_params_copy_data"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.c"
             line="715">Copies the dynamically allocated data from @src to @dest.  Direct subclasses
should call this function in their own overriden copy function.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="249"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="717">the source #GstGLAllocationParams</doc>
            <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
          </instance-parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="718">the destination #GstGLAllocationParams</doc>
            <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="gst_gl_allocation_params_free"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.c"
             line="680">Frees the #GstGLAllocationParams and all associated data.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="241"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="682">the #GstGLAllocationParams to initialize</doc>
            <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free_data"
              c:identifier="gst_gl_allocation_params_free_data"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.c"
             line="697">Frees the dynamically allocated data in @params.  Direct subclasses
should call this function in their own overriden free function.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="245"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="699">the source #GstGLAllocationParams</doc>
            <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init"
              c:identifier="gst_gl_allocation_params_init"
              version="1.8"
              introspectable="0">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.c"
             line="603">@notify will be called once for each allocated memory using these @params
when freeing the memory.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="223"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.c"
               line="621">whether the paramaters could be initialized</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="605">the #GstGLAllocationParams to initialize</doc>
            <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
          </instance-parameter>
          <parameter name="struct_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="606">the struct size of the implementation</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="alloc_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="607">some alloc flags</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="copy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="608">a copy function</doc>
            <type name="GLAllocationParamsCopyFunc"
                  c:type="GstGLAllocationParamsCopyFunc"/>
          </parameter>
          <parameter name="free"
                     transfer-ownership="none"
                     scope="notified"
                     closure="9"
                     destroy="10">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="609">a free function</doc>
            <type name="GLAllocationParamsFreeFunc"
                  c:type="GstGLAllocationParamsFreeFunc"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="610">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="alloc_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="611">the number of bytes to allocate.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="alloc_params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="612">a #GstAllocationParams to apply</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="wrapped_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="613">a sysmem data pointer to initialize the allocation with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="gl_handle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="614">a GL handle to initialize the allocation with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="615">user data to call @notify with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="616">a #GDestroyNotify</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <callback name="GLAllocationParamsCopyFunc"
              c:type="GstGLAllocationParamsCopyFunc">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="132">Copies the parameters from @src into @dest.  The subclass must compose copy
functions from the superclass.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="140"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="src" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="134">the source #GstGLAllocationParams to copy from</doc>
          <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
        </parameter>
        <parameter name="dest" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="135">the source #GstGLAllocationParams to copy</doc>
          <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GLAllocationParamsFreeFunc"
              c:type="GstGLAllocationParamsFreeFunc">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="141">Free any dynamically allocated data.  The subclass must call the superclass'
free.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="148"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="params"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="143">a #GstGLAllocationParams</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="GLAsyncDebug" c:type="GstGLAsyncDebug">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstgldebug.h"
           line="30">#GstGLAsyncDebug an opaque structure and should only be accessed through the
provided API.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstgldebug.h" line="54"/>
      <field name="state_flags" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="cat" readable="0" private="1">
        <type name="Gst.DebugCategory" c:type="GstDebugCategory*"/>
      </field>
      <field name="level" readable="0" private="1">
        <type name="Gst.DebugLevel" c:type="GstDebugLevel"/>
      </field>
      <field name="file" readable="0" private="1">
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="function" readable="0" private="1">
        <type name="utf8" c:type="const gchar*"/>
      </field>
      <field name="line" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="object" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject*"/>
      </field>
      <field name="debug_msg" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="callback" readable="0" private="1">
        <type name="GLAsyncDebugLogGetMessage"
              c:type="GstGLAsyncDebugLogGetMessage"/>
      </field>
      <field name="user_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="notify" readable="0" private="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <method name="free" c:identifier="gst_gl_async_debug_free" version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldebug.c"
             line="183">Frees @ad</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldebug.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="185">a #GstGLAsyncDebug</doc>
            <type name="GLAsyncDebug" c:type="GstGLAsyncDebug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="freeze"
              c:identifier="gst_gl_async_debug_freeze"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldebug.c"
             line="198">freeze the debug output.  While frozen, any call to
gst_gl_async_debug_output_log_msg() will not output any messages but
subsequent calls to gst_gl_async_debug_store_log_msg() will overwrite previous
messages.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldebug.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="200">a #GstGLAsyncDebug</doc>
            <type name="GLAsyncDebug" c:type="GstGLAsyncDebug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="gst_gl_async_debug_init" version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldebug.c"
             line="133">Initialize @ad.  Intended for use with #GstGLAsyncDebug's that are embedded
in other structs.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldebug.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="135">a #GstGLAsyncDebug</doc>
            <type name="GLAsyncDebug" c:type="GstGLAsyncDebug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="output_log_msg"
              c:identifier="gst_gl_async_debug_output_log_msg">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldebug.c"
             line="463">Outputs a previously stored debug message.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldebug.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="465">the #GstGLAsyncDebug to store the message in</doc>
            <type name="GLAsyncDebug" c:type="GstGLAsyncDebug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="store_log_msg"
              c:identifier="gst_gl_async_debug_store_log_msg"
              version="1.8"
              introspectable="0">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldebug.c"
             line="486">Stores a debug message for later output by gst_gl_async_debug_output_log_msg()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldebug.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="488">the #GstGLAsyncDebug to store the message in</doc>
            <type name="GLAsyncDebug" c:type="GstGLAsyncDebug*"/>
          </instance-parameter>
          <parameter name="cat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="489">the #GstDebugCategory to output the message in</doc>
            <type name="Gst.DebugCategory" c:type="GstDebugCategory*"/>
          </parameter>
          <parameter name="level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="490">the #GstLevel</doc>
            <type name="Gst.DebugLevel" c:type="GstDebugLevel"/>
          </parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="491">the file where the debug message originates from</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="492">the function where the debug message originates from</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="line" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="493">the line in @file where the debug message originates from</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="494">a #GObject to associate with the debug message</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="495">a printf style format string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="496">the list of arguments for @format</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="store_log_msg_valist"
              c:identifier="gst_gl_async_debug_store_log_msg_valist"
              version="1.8"
              introspectable="0">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldebug.c"
             line="419">Stores a debug message for later output by gst_gl_async_debug_output_log_msg()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldebug.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="421">the #GstGLAsyncDebug to store the message in</doc>
            <type name="GLAsyncDebug" c:type="GstGLAsyncDebug*"/>
          </instance-parameter>
          <parameter name="cat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="422">the #GstDebugCategory to output the message in</doc>
            <type name="Gst.DebugCategory" c:type="GstDebugCategory*"/>
          </parameter>
          <parameter name="level" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="423">the #GstLevel</doc>
            <type name="Gst.DebugLevel" c:type="GstDebugLevel"/>
          </parameter>
          <parameter name="file" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="424">the file where the debug message originates from</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="function" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="425">the function where the debug message originates from</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="line" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="426">the line in @file where the debug message originates from</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="427">a #GObject to associate with the debug message</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="428">a printf style format string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="varargs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="429">the list of arguments for @format</doc>
            <type name="va_list" c:type="va_list"/>
          </parameter>
        </parameters>
      </method>
      <method name="thaw" c:identifier="gst_gl_async_debug_thaw" version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldebug.c"
             line="215">unfreeze the debug output.  See gst_gl_async_debug_freeze() for what freezing means</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldebug.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="217">a #GstGLAsyncDebug</doc>
            <type name="GLAsyncDebug" c:type="GstGLAsyncDebug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unset" c:identifier="gst_gl_async_debug_unset">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldebug.c"
             line="150">Unset any dynamically allocated data.  Intended for use with
#GstGLAsyncDebug's that are embedded in other structs.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldebug.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="ad" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldebug.c"
                 line="152">a #GstGLAsyncDebug</doc>
            <type name="GLAsyncDebug" c:type="GstGLAsyncDebug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="new"
                c:identifier="gst_gl_async_debug_new"
                version="1.8"
                introspectable="0">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldebug.c"
             line="168">Free with gst_gl_async_debug_free()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldebug.h"
                         line="57"/>
        <return-value>
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldebug.c"
               line="173">a new #GstGLAsyncDebug</doc>
          <type name="GLAsyncDebug" c:type="GstGLAsyncDebug*"/>
        </return-value>
      </function>
    </record>
    <callback name="GLAsyncDebugLogGetMessage"
              c:type="GstGLAsyncDebugLogGetMessage">
      <source-position filename="git/gst-libs/gst/gl/gstgldebug.h" line="28"/>
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="0">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="GLBaseFilter"
           c:symbol-prefix="gl_base_filter"
           c:type="GstGLBaseFilter"
           parent="GstBase.BaseTransform"
           glib:type-name="GstGLBaseFilter"
           glib:get-type="gst_gl_base_filter_get_type"
           glib:type-struct="GLBaseFilterClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasefilter.c"
           line="30">#GstGLBaseFilter handles the nitty gritty details of retrieving an OpenGL
context.  It also provided some wrappers around #GstBaseTransform's
start(), stop() and set_caps() virtual methods that ensure an OpenGL context
is available and current in the calling thread.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasefilter.h"
                       line="89"/>
      <virtual-method name="gl_set_caps">
        <source-position filename="git/gst-libs/gst/gl/gstglbasefilter.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <type name="GLBaseFilter" c:type="GstGLBaseFilter*"/>
          </instance-parameter>
          <parameter name="incaps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="outcaps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="gl_start">
        <source-position filename="git/gst-libs/gst/gl/gstglbasefilter.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <type name="GLBaseFilter" c:type="GstGLBaseFilter*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="gl_stop">
        <source-position filename="git/gst-libs/gst/gl/gstglbasefilter.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <type name="GLBaseFilter" c:type="GstGLBaseFilter*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="find_gl_context"
              c:identifier="gst_gl_base_filter_find_gl_context"
              version="1.16">
        <source-position filename="git/gst-libs/gst/gl/gstglbasefilter.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasefilter.c"
               line="418">Whether an OpenGL context could be retrieved or created successfully</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasefilter.c"
                 line="416">a #GstGLBaseFilter</doc>
            <type name="GLBaseFilter" c:type="GstGLBaseFilter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="context" transfer-ownership="none">
        <type name="GLContext"/>
      </property>
      <field name="parent">
        <type name="GstBase.BaseTransform" c:type="GstBaseTransform"/>
      </field>
      <field name="display">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasefilter.h"
             line="43">the currently configured #GstGLDisplay</doc>
        <type name="GLDisplay" c:type="GstGLDisplay*"/>
      </field>
      <field name="context">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasefilter.h"
             line="44">the currently configured #GstGLContext</doc>
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="in_caps">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasefilter.h"
             line="45">the currently configured input #GstCaps</doc>
        <type name="Gst.Caps" c:type="GstCaps*"/>
      </field>
      <field name="out_caps">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasefilter.h"
             line="46">the currently configured output #GstCaps</doc>
        <type name="Gst.Caps" c:type="GstCaps*"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLBaseFilterPrivate" c:type="GstGLBaseFilterPrivate*"/>
      </field>
    </class>
    <record name="GLBaseFilterClass"
            c:type="GstGLBaseFilterClass"
            glib:is-gtype-struct-for="GLBaseFilter">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasefilter.h"
           line="67">The base class for GStreamer GL Filter.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasefilter.h"
                       line="89"/>
      <field name="parent_class">
        <type name="GstBase.BaseTransformClass"
              c:type="GstBaseTransformClass"/>
      </field>
      <field name="supported_gl_api">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasefilter.h"
             line="69">the logical-OR of #GstGLAPI's supported by this element</doc>
        <type name="GLAPI" c:type="GstGLAPI"/>
      </field>
      <field name="gl_start">
        <callback name="gl_start">
          <source-position filename="git/gst-libs/gst/gl/gstglbasefilter.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="filter" transfer-ownership="none">
              <type name="GLBaseFilter" c:type="GstGLBaseFilter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gl_stop">
        <callback name="gl_stop">
          <source-position filename="git/gst-libs/gst/gl/gstglbasefilter.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="filter" transfer-ownership="none">
              <type name="GLBaseFilter" c:type="GstGLBaseFilter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gl_set_caps">
        <callback name="gl_set_caps">
          <source-position filename="git/gst-libs/gst/gl/gstglbasefilter.h"
                           line="85"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="filter" transfer-ownership="none">
              <type name="GLBaseFilter" c:type="GstGLBaseFilter*"/>
            </parameter>
            <parameter name="incaps" transfer-ownership="none">
              <type name="Gst.Caps" c:type="GstCaps*"/>
            </parameter>
            <parameter name="outcaps" transfer-ownership="none">
              <type name="Gst.Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="GLBaseFilterPrivate"
            c:type="GstGLBaseFilterPrivate"
            disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="91"/>
    </record>
    <record name="GLBaseMemory"
            c:type="GstGLBaseMemory"
            glib:type-name="GstGLBaseMemory"
            glib:get-type="gst_gl_base_memory_get_type"
            c:symbol-prefix="gl_base_memory">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.c"
           line="33">GstGLBaseMemory is a #GstMemory subclass providing the basis of support
for the mapping of GL buffers.

Data is uploaded or downloaded from the GPU as is necessary.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="129"/>
      <field name="mem" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="99">the parent object</doc>
        <type name="Gst.Memory" c:type="GstMemory"/>
      </field>
      <field name="context" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="100">the #GstGLContext to use for GL operations</doc>
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="lock" writable="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <field name="map_flags" writable="1">
        <type name="Gst.MapFlags" c:type="GstMapFlags"/>
      </field>
      <field name="map_count" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="gl_map_count" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="data" writable="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="query" writable="1">
        <type name="GLQuery" c:type="GstGLQuery*"/>
      </field>
      <field name="alloc_size" readable="0" private="1">
        <type name="gsize" c:type="gsize"/>
      </field>
      <field name="alloc_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="notify" readable="0" private="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="user_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <method name="alloc_data" c:identifier="gst_gl_base_memory_alloc_data">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.c"
             line="203">Note: only intended for subclass usage to allocate the sytem memory buffer
on demand.  If there is already a non-NULL data pointer in @gl_mem-&gt;data,
then this function imply returns TRUE.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="407"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.c"
               line="211">whether the system memory could be allocated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="205">a #GstGLBaseMemory</doc>
            <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="gst_gl_base_memory_init" version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.c"
             line="109">Initializes @mem with the required parameters</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="397"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="111">the #GstGLBaseMemory to initialize</doc>
            <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
          </instance-parameter>
          <parameter name="allocator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="112">the #GstAllocator to initialize with</doc>
            <type name="Gst.Allocator" c:type="GstAllocator*"/>
          </parameter>
          <parameter name="parent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="113">the parent #GstMemory to initialize with</doc>
            <type name="Gst.Memory" c:type="GstMemory*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="114">the #GstGLContext to initialize with</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="115">the @GstAllocationParams to initialize with</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="116">the number of bytes to be allocated</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="117">user data to call @notify with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="118">a #GDestroyNotify</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="memcpy"
              c:identifier="gst_gl_base_memory_memcpy"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="410"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.c"
               line="565">whether the copy suceeded.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="560">the source #GstGLBaseMemory</doc>
            <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
          </instance-parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="561">the destination #GstGLBaseMemory</doc>
            <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="562">the offset to start at</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="563">the number of bytes to copy</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
        </parameters>
      </method>
      <function name="alloc"
                c:identifier="gst_gl_base_memory_alloc"
                version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="416"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.c"
               line="746">a new #GstGLBaseMemory from @allocator with the requested @params.</doc>
          <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
        </return-value>
        <parameters>
          <parameter name="allocator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="743">a #GstGLBaseMemoryAllocator</doc>
            <type name="GLBaseMemoryAllocator"
                  c:type="GstGLBaseMemoryAllocator*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.c"
                 line="744">the #GstGLAllocationParams to allocate the memory with</doc>
            <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
          </parameter>
        </parameters>
      </function>
      <function name="init_once"
                c:identifier="gst_gl_base_memory_init_once"
                version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.c"
             line="489">Initializes the GL Base Memory allocator. It is safe to call this function
multiple times.  This must be called before any other GstGLBaseMemory operation.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="391"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
    </record>
    <class name="GLBaseMemoryAllocator"
           c:symbol-prefix="gl_base_memory_allocator"
           c:type="GstGLBaseMemoryAllocator"
           version="1.8"
           parent="Gst.Allocator"
           abstract="1"
           glib:type-name="GstGLBaseMemoryAllocator"
           glib:get-type="gst_gl_base_memory_allocator_get_type"
           glib:type-struct="GLBaseMemoryAllocatorClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="334">Opaque #GstGLBaseMemoryAllocator struct</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="376"/>
      <virtual-method name="alloc">
        <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                         line="263"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="259">a newly allocated #GstGLBaseMemory from @allocator and @params</doc>
          <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
        </return-value>
        <parameters>
          <instance-parameter name="allocator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.h"
                 line="254">a #GstGLBaseMemoryAllocator</doc>
            <type name="GLBaseMemoryAllocator"
                  c:type="GstGLBaseMemoryAllocator*"/>
          </instance-parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbasememory.h"
                 line="255">the #GstGLAllocationParams to allocate the memory with</doc>
            <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <field name="parent" readable="0" private="1">
        <type name="Gst.Allocator" c:type="GstAllocator"/>
      </field>
      <field name="fallback_mem_copy" readable="0" private="1">
        <type name="Gst.MemoryCopyFunction" c:type="GstMemoryCopyFunction"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <callback name="GLBaseMemoryAllocatorAllocFunction"
              c:type="GstGLBaseMemoryAllocatorAllocFunction"
              version="1.8">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="252">Note: not called with a GL context current</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="263"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="259">a newly allocated #GstGLBaseMemory from @allocator and @params</doc>
        <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
      </return-value>
      <parameters>
        <parameter name="allocator" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="254">a #GstGLBaseMemoryAllocator</doc>
          <type name="GLBaseMemoryAllocator"
                c:type="GstGLBaseMemoryAllocator*"/>
        </parameter>
        <parameter name="params" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="255">the #GstGLAllocationParams to allocate the memory with</doc>
          <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
        </parameter>
      </parameters>
    </callback>
    <record name="GLBaseMemoryAllocatorClass"
            c:type="GstGLBaseMemoryAllocatorClass"
            glib:is-gtype-struct-for="GLBaseMemoryAllocator"
            version="1.8">
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="376"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="352">the parent class</doc>
        <type name="Gst.AllocatorClass" c:type="GstAllocatorClass"/>
      </field>
      <field name="alloc">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="353">a #GstGLBaseMemoryAllocatorAllocFunction</doc>
        <type name="GLBaseMemoryAllocatorAllocFunction"
              c:type="GstGLBaseMemoryAllocatorAllocFunction"/>
      </field>
      <field name="create">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="354">a #GstGLBaseMemoryAllocatorCreateFunction</doc>
        <type name="GLBaseMemoryAllocatorCreateFunction"
              c:type="GstGLBaseMemoryAllocatorCreateFunction"/>
      </field>
      <field name="map">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="355">a #GstGLBaseMemoryAllocatorMapFunction</doc>
        <type name="GLBaseMemoryAllocatorMapFunction"
              c:type="GstGLBaseMemoryAllocatorMapFunction"/>
      </field>
      <field name="unmap">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="356">a #GstGLBaseMemoryAllocatorUnmapFunction</doc>
        <type name="GLBaseMemoryAllocatorUnmapFunction"
              c:type="GstGLBaseMemoryAllocatorUnmapFunction"/>
      </field>
      <field name="copy">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="357">a #GstGLBaseMemoryAllocatorCopyFunction</doc>
        <type name="GLBaseMemoryAllocatorCopyFunction"
              c:type="GstGLBaseMemoryAllocatorCopyFunction"/>
      </field>
      <field name="destroy">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="358">a #GstGLBaseMemoryAllocatorDestroyFunction</doc>
        <type name="GLBaseMemoryAllocatorDestroyFunction"
              c:type="GstGLBaseMemoryAllocatorDestroyFunction"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <callback name="GLBaseMemoryAllocatorCopyFunction"
              c:type="GstGLBaseMemoryAllocatorCopyFunction"
              version="1.8">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="308">Also see gst_memory_copy();</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="320"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="316">the newly copied #GstGLMemory or %NULL</doc>
        <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="310">a #GstGLBaseMemory</doc>
          <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
        </parameter>
        <parameter name="offset" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="311">the offset to copy from</doc>
          <type name="gssize" c:type="gssize"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="312">the number of bytes to copy</doc>
          <type name="gssize" c:type="gssize"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GLBaseMemoryAllocatorCreateFunction"
              c:type="GstGLBaseMemoryAllocatorCreateFunction"
              version="1.8"
              throws="1">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="266">As this virtual method is called with an OpenGL context current, use this
function to allocate and OpenGL resources needed for your application</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="278"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="274">whether the creation succeeded</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="268">a #GstGLBaseMemory</doc>
          <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GLBaseMemoryAllocatorDestroyFunction"
              c:type="GstGLBaseMemoryAllocatorDestroyFunction"
              version="1.8">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="324">Destroy any resources allocated throughout the lifetime of @mem</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="332"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="326">a #GstGLBaseMemory</doc>
          <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GLBaseMemoryAllocatorMapFunction"
              c:type="GstGLBaseMemoryAllocatorMapFunction"
              version="1.8">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="281">Also see gst_memory_map();</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="293"/>
      <return-value transfer-ownership="none" nullable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="289">the mapped pointer</doc>
        <type name="gpointer" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="283">a #GstGLBaseMemory</doc>
          <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
        </parameter>
        <parameter name="info" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="284">a #GstMapInfo to map with</doc>
          <type name="Gst.MapInfo" c:type="GstMapInfo*"/>
        </parameter>
        <parameter name="maxsize" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="285">the size to map</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GLBaseMemoryAllocatorUnmapFunction"
              c:type="GstGLBaseMemoryAllocatorUnmapFunction"
              version="1.8">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="296">Also see gst_memory_unmap();</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="305"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="298">a #GstGLBaseMemory</doc>
          <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
        </parameter>
        <parameter name="info" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.h"
               line="299">a #GstMapInfo to map with</doc>
          <type name="Gst.MapInfo" c:type="GstMapInfo*"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="GLBaseMemoryError"
                 glib:type-name="GstGLBaseMemoryError"
                 glib:get-type="gst_gl_base_memory_error_get_type"
                 c:type="GstGLBaseMemoryError"
                 glib:error-domain="gst-gl-base-memory-error-quark">
      <member name="failed"
              value="0"
              c:identifier="GST_GL_BASE_MEMORY_ERROR_FAILED"
              glib:nick="failed">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="61">generic faliure</doc>
      </member>
      <member name="old_libs"
              value="1"
              c:identifier="GST_GL_BASE_MEMORY_ERROR_OLD_LIBS"
              glib:nick="old-libs">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="62">the implementation is too old and doesn't
                                    implement enough features</doc>
      </member>
      <member name="resource_unavailable"
              value="2"
              c:identifier="GST_GL_BASE_MEMORY_ERROR_RESOURCE_UNAVAILABLE"
              glib:nick="resource-unavailable">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="64">a resource could not be found</doc>
      </member>
      <function name="quark" c:identifier="gst_gl_base_memory_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <bitfield name="GLBaseMemoryTransfer"
              glib:type-name="GstGLBaseMemoryTransfer"
              glib:get-type="gst_gl_base_memory_transfer_get_type"
              c:type="GstGLBaseMemoryTransfer">
      <member name="download"
              value="1048576"
              c:identifier="GST_GL_BASE_MEMORY_TRANSFER_NEED_DOWNLOAD"
              glib:nick="download">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="75">the texture needs downloading
                                            to the data pointer</doc>
      </member>
      <member name="upload"
              value="2097152"
              c:identifier="GST_GL_BASE_MEMORY_TRANSFER_NEED_UPLOAD"
              glib:nick="upload">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.h"
             line="77">the data pointer needs uploading
                                            to the texture</doc>
      </member>
    </bitfield>
    <record name="GLBuffer" c:type="GstGLBuffer">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbuffer.c"
           line="33">GstGLBuffer is a #GstMemory subclass providing support for the mapping of
GL buffers.

Data is uploaded or downloaded from the GPU as is necessary.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h" line="55"/>
      <field name="mem" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbuffer.h"
             line="41">the parent object</doc>
        <type name="GLBaseMemory" c:type="GstGLBaseMemory"/>
      </field>
      <field name="id" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbuffer.h"
             line="42">the buffer id for this memory</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="target" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbuffer.h"
             line="43">the OpenGL target of this texture for binding purposes</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="usage_hints" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbuffer.h"
             line="44">the OpenGL usage hints this buffer was created with</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <function name="init_once"
                c:identifier="gst_gl_buffer_init_once"
                version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbuffer.c"
             line="447">Initializes the GL Buffer allocator. It is safe to call this function
multiple times.  This must be called before any other #GstGLBuffer operation.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
    </record>
    <record name="GLBufferAllocationParams"
            c:type="GstGLBufferAllocationParams"
            glib:type-name="GstGLBufferAllocationParams"
            glib:get-type="gst_gl_buffer_allocation_params_get_type"
            c:symbol-prefix="gl_buffer_allocation_params">
      <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h" line="85"/>
      <field name="parent" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbuffer.h"
             line="72">parent object</doc>
        <type name="GLAllocationParams" c:type="GstGLAllocationParams"/>
      </field>
      <field name="gl_target" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbuffer.h"
             line="73">the OpenGL target to bind the buffer to</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="gl_usage" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbuffer.h"
             line="74">the OpenGL usage hint to create the buffer with</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <constructor name="new"
                   c:identifier="gst_gl_buffer_allocation_params_new"
                   version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h"
                         line="88"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbuffer.c"
               line="365">a new #GstGLBufferAllocationParams for allocating OpenGL buffer
         objects</doc>
          <type name="GLBufferAllocationParams"
                c:type="GstGLBufferAllocationParams*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbuffer.c"
                 line="359">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="alloc_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbuffer.c"
                 line="360">the size in bytes to allocate</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="alloc_params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbuffer.c"
                 line="361">the #GstAllocationParams for @tex_id</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="gl_target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbuffer.c"
                 line="362">the OpenGL target to allocate</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="gl_usage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbuffer.c"
                 line="363">the OpenGL usage hint to allocate with</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
    </record>
    <class name="GLBufferAllocator"
           c:symbol-prefix="gl_buffer_allocator"
           c:type="GstGLBufferAllocator"
           parent="GLBaseMemoryAllocator"
           glib:type-name="GstGLBufferAllocator"
           glib:get-type="gst_gl_buffer_allocator_get_type"
           glib:type-struct="GLBufferAllocatorClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbuffer.h"
           line="94">Opaque #GstGLBufferAllocator struct</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h"
                       line="118"/>
      <field name="parent">
        <type name="GLBaseMemoryAllocator" c:type="GstGLBaseMemoryAllocator"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLBufferAllocatorClass"
            c:type="GstGLBufferAllocatorClass"
            glib:is-gtype-struct-for="GLBufferAllocator">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbuffer.h"
           line="107">The #GstGLBufferAllocatorClass only contains private data</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h"
                       line="118"/>
      <field name="parent_class">
        <type name="GLBaseMemoryAllocatorClass"
              c:type="GstGLBaseMemoryAllocatorClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="GLBufferPool"
           c:symbol-prefix="gl_buffer_pool"
           c:type="GstGLBufferPool"
           parent="Gst.BufferPool"
           glib:type-name="GstGLBufferPool"
           glib:get-type="gst_gl_buffer_pool_get_type"
           glib:type-struct="GLBufferPoolClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbufferpool.c"
           line="31">a #GstGLBufferPool is an object that allocates buffers with #GstGLBaseMemory

A #GstGLBufferPool is created with gst_gl_buffer_pool_new()

#GstGLBufferPool implements the VideoMeta buffer pool option
%GST_BUFFER_POOL_OPTION_VIDEO_META, the VideoAligment buffer pool option
%GST_BUFFER_POOL_OPTION_VIDEO_ALIGNMENT as well as the OpenGL specific
%GST_BUFFER_POOL_OPTION_GL_SYNC_META buffer pool option.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbufferpool.h"
                       line="67"/>
      <constructor name="new" c:identifier="gst_gl_buffer_pool_new">
        <source-position filename="git/gst-libs/gst/gl/gstglbufferpool.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbufferpool.c"
               line="308">a #GstBufferPool that allocates buffers with #GstGLMemory</doc>
          <type name="Gst.BufferPool" c:type="GstBufferPool*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglbufferpool.c"
                 line="306">the #GstGLContext to use</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="bufferpool">
        <type name="Gst.BufferPool" c:type="GstBufferPool"/>
      </field>
      <field name="context">
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLBufferPoolPrivate" c:type="GstGLBufferPoolPrivate*"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLBufferPoolClass"
            c:type="GstGLBufferPoolClass"
            glib:is-gtype-struct-for="GLBufferPool">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbufferpool.h"
           line="56">The #GstGLBufferPoolClass structure contains only private data</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbufferpool.h"
                       line="67"/>
      <field name="parent_class">
        <type name="Gst.BufferPoolClass" c:type="GstBufferPoolClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="GLBufferPoolPrivate"
            c:type="GstGLBufferPoolPrivate"
            disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="83"/>
    </record>
    <class name="GLColorConvert"
           c:symbol-prefix="gl_color_convert"
           c:type="GstGLColorConvert"
           parent="Gst.Object"
           glib:type-name="GstGLColorConvert"
           glib:get-type="gst_gl_color_convert_get_type"
           glib:type-struct="GLColorConvertClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
           line="34">#GstGLColorConvert is an object that converts between color spaces and/or
formats using OpenGL Shaders.

A #GstGLColorConvert can be created with gst_gl_color_convert_new(), the
configuration negotiated with gst_gl_color_convert_transform_caps() and the
conversion performed with gst_gl_color_convert_perform().

The glcolorconvertelement provides a GStreamer element that uses
#GstGLColorConvert to convert between video formats and color spaces.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
                       line="83"/>
      <constructor name="new"
                   c:identifier="gst_gl_color_convert_new"
                   version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
                         line="117"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
               line="516">a new #GstGLColorConvert object</doc>
          <type name="GLColorConvert" c:type="GstGLColorConvert*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="514">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="fixate_caps"
                c:identifier="gst_gl_color_convert_fixate_caps"
                version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
             line="1296">Provides an implementation of #GstBaseTransformClass.fixate_caps()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
                         line="125"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
               line="1305">the fixated #GstCaps</doc>
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="1298">a #GstGLContext to use for transforming @caps</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="1299">a #GstPadDirection</doc>
            <type name="Gst.PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="1300">the #GstCaps of @direction</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="other" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="1301">the #GstCaps to fixate</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </function>
      <function name="transform_caps"
                c:identifier="gst_gl_color_convert_transform_caps"
                version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
             line="1057">Provides an implementation of #GstBaseTransformClass.transform_caps()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
                         line="120"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
               line="1066">the converted #GstCaps</doc>
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="1059">a #GstGLContext to use for transforming @caps</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="1060">a #GstPadDirection</doc>
            <type name="Gst.PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="1061">the #GstCaps to transform</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="1062">a set of filter #GstCaps</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </function>
      <method name="decide_allocation"
              c:identifier="gst_gl_color_convert_decide_allocation"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
             line="803">Provides an implementation of #GstBaseTransformClass.decide_allocation()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
               line="810">whether the allocation parameters were successfully chosen</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="convert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="805">a #GstGLColorConvert</doc>
            <type name="GLColorConvert" c:type="GstGLColorConvert*"/>
          </instance-parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="806">a completed ALLOCATION #GstQuery</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
        </parameters>
      </method>
      <method name="perform"
              c:identifier="gst_gl_color_convert_perform"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
             line="1337">Converts the data contained by @inbuf using the formats specified by the
#GstCaps passed to gst_gl_color_convert_set_caps()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
                         line="138"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
               line="1345">a converted #GstBuffer or %NULL</doc>
          <type name="Gst.Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="convert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="1339">a #GstGLColorConvert</doc>
            <type name="GLColorConvert" c:type="GstGLColorConvert*"/>
          </instance-parameter>
          <parameter name="inbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="1340">the #GstGLMemory filled #GstBuffer to convert</doc>
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_caps"
              c:identifier="gst_gl_color_convert_set_caps"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
             line="780">Initializes @convert with the information required for conversion.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="convert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="782">a #GstGLColorConvert</doc>
            <type name="GLColorConvert" c:type="GstGLColorConvert*"/>
          </instance-parameter>
          <parameter name="in_caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="783">input #GstCaps</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="out_caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcolorconvert.c"
                 line="784">output #GstCaps</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="context" readable="0" private="1">
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="in_info" readable="0" private="1">
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
      <field name="out_info" readable="0" private="1">
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
      <field name="initted" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="passthrough" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="inbuf" readable="0" private="1">
        <type name="Gst.Buffer" c:type="GstBuffer*"/>
      </field>
      <field name="outbuf" readable="0" private="1">
        <type name="Gst.Buffer" c:type="GstBuffer*"/>
      </field>
      <field name="fbo" readable="0" private="1">
        <type name="GLFramebuffer" c:type="GstGLFramebuffer*"/>
      </field>
      <field name="shader" readable="0" private="1">
        <type name="GLShader" c:type="GstGLShader*"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLColorConvertPrivate" c:type="GstGLColorConvertPrivate*"/>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLColorConvertClass"
            c:type="GstGLColorConvertClass"
            glib:is-gtype-struct-for="GLColorConvert">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
           line="72">The #GstGLColorConvertClass struct only contains private data</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
                       line="83"/>
      <field name="object_class" readable="0" private="1">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="GLColorConvertPrivate"
            c:type="GstGLColorConvertPrivate"
            disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="87"/>
    </record>
    <class name="GLContext"
           c:symbol-prefix="gl_context"
           c:type="GstGLContext"
           parent="Gst.Object"
           abstract="1"
           glib:type-name="GstGLContext"
           glib:get-type="gst_gl_context_get_type"
           glib:type-struct="GLContextClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglcontext.c"
           line="21">#GstGLContext wraps an OpenGL context object in a uniform API.  As a result
of the limitation on OpenGL context, this object is not thread safe unless
specified and must only be activated in a single thread.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                       line="139"/>
      <constructor name="new" c:identifier="gst_gl_context_new" version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="313">Create a new #GstGLContext with the specified @display</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="319">a new #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="315">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_wrapped"
                   c:identifier="gst_gl_context_new_wrapped"
                   version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="372">Wraps an existing OpenGL context into a #GstGLContext.

Note: The caller is responsible for ensuring that the OpenGL context
represented by @handle stays alive while the returned #GstGLContext is
active.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="146"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="385">a #GstGLContext wrapping @handle</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="374">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </parameter>
          <parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="375">the OpenGL context to wrap</doc>
            <type name="guintptr" c:type="guintptr"/>
          </parameter>
          <parameter name="context_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="376">a #GstGLPlatform specifying the type of context in @handle</doc>
            <type name="GLPlatform" c:type="GstGLPlatform"/>
          </parameter>
          <parameter name="available_apis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="377">a #GstGLAPI containing the available OpenGL apis in @handle</doc>
            <type name="GLAPI" c:type="GstGLAPI"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="default_get_proc_address"
                c:identifier="gst_gl_context_default_get_proc_address"
                version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="868">A default implementation of the various GetProcAddress functions that looks
for @name in the OpenGL shared libraries or in the current process.

See also: gst_gl_context_get_proc_address()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="179"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="878">an address pointing to @name or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="gl_api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="870">a #GstGLAPI</doc>
            <type name="GLAPI" c:type="GstGLAPI"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="871">then function to get the address of</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_current"
                c:identifier="gst_gl_context_get_current"
                version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1677">See also gst_gl_context_activate().</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="156"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1682">the #GstGLContext active in the current thread or %NULL</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </return-value>
      </function>
      <function name="get_current_gl_api"
                c:identifier="gst_gl_context_get_current_gl_api"
                version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="549">If an error occurs, @major and @minor are not modified and %GST_GL_API_NONE is
returned.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="200"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="558">The version supported by the OpenGL context current in the calling
         thread or %GST_GL_API_NONE</doc>
          <type name="GLAPI" c:type="GstGLAPI"/>
        </return-value>
        <parameters>
          <parameter name="platform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="551">the #GstGLPlatform to retrieve the API for</doc>
            <type name="GLPlatform" c:type="GstGLPlatform"/>
          </parameter>
          <parameter name="major"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="552">the major version</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="minor"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="553">the minor version</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_current_gl_context"
                c:identifier="gst_gl_context_get_current_gl_context"
                version="1.6">
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="198"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="470">The OpenGL context handle current in the calling thread or %NULL</doc>
          <type name="guintptr" c:type="guintptr"/>
        </return-value>
        <parameters>
          <parameter name="context_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="468">a #GstGLPlatform specifying the type of context to retrieve</doc>
            <type name="GLPlatform" c:type="GstGLPlatform"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_proc_address_with_platform"
                c:identifier="gst_gl_context_get_proc_address_with_platform"
                version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="508">Attempts to use the @context_type specific GetProcAddress implementations
to retreive @name.

See also gst_gl_context_get_proc_address().</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="181"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="519">a function pointer for @name, or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="context_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="510">a #GstGLPlatform</doc>
            <type name="GLPlatform" c:type="GstGLPlatform"/>
          </parameter>
          <parameter name="gl_api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="511">a #GstGLAPI</doc>
            <type name="GLAPI" c:type="GstGLAPI"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="512">the name of the function to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="activate" invoker="activate" version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="726">(De)activate the OpenGL context represented by this @context.

In OpenGL terms, calls eglMakeCurrent or similar with this context and the
currently set window.  See gst_gl_context_set_window() for details.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="736">Whether the activation succeeded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="728">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="activate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="729">%TRUE to activate, %FALSE to deactivate</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="check_feature"
                      invoker="check_feature"
                      version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1643">Check for an OpenGL @feature being supported.

Note: Most features require that the context be created before it is
possible to determine their existence and so will fail if that is not the
case.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1654">Whether @feature is supported by @context</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1645">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1646">a platform specific feature</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="choose_format" throws="1">
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_context" throws="1">
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="gl_api" transfer-ownership="none">
            <type name="GLAPI" c:type="GstGLAPI"/>
          </parameter>
          <parameter name="other_context" transfer-ownership="none">
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="destroy_context">
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="132"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_gl_api" invoker="get_gl_api" version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="797">Get the currently enabled OpenGL api.

The currently available API may be limited by the #GstGLDisplay in use and/or
the #GstGLWindow chosen.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="806">the available OpenGL api</doc>
          <type name="GLAPI" c:type="GstGLAPI"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="799">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_gl_context"
                      invoker="get_gl_context"
                      version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1464">Gets the backing OpenGL context used by @context.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1470">The platform specific backing OpenGL context</doc>
          <type name="guintptr" c:type="guintptr"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1466">a #GstGLContext:</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_gl_platform"
                      invoker="get_gl_platform"
                      version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1489">Gets the OpenGL platform that used by @context.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1495">The platform specific backing OpenGL context</doc>
          <type name="GLPlatform" c:type="GstGLPlatform"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1491">a #GstGLContext:</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_gl_platform_version"
                      invoker="get_gl_platform_version">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1750">Get the version of the OpenGL platform (GLX, EGL, etc) used.  Only valid
after a call to gst_gl_context_create().</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1752">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="major"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1753">return for the major version</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="minor"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1754">return for the minor version</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="swap_buffers" invoker="swap_buffers">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1774">Swap the front and back buffers on the window attached to @context.
This will display the frame on the next refresh cycle.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1776">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="activate"
              c:identifier="gst_gl_context_activate"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="726">(De)activate the OpenGL context represented by this @context.

In OpenGL terms, calls eglMakeCurrent or similar with this context and the
currently set window.  See gst_gl_context_set_window() for details.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="736">Whether the activation succeeded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="728">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="activate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="729">%TRUE to activate, %FALSE to deactivate</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_share"
              c:identifier="gst_gl_context_can_share"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="970">Note: This will always fail for two wrapped #GstGLContext's</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="977">whether @context and @other_context are able to share OpenGL
     resources.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="972">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="other_context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="973">another #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_feature"
              c:identifier="gst_gl_context_check_feature"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1643">Check for an OpenGL @feature being supported.

Note: Most features require that the context be created before it is
possible to determine their existence and so will fail if that is not the
case.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="193"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1654">Whether @feature is supported by @context</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1645">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1646">a platform specific feature</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_framebuffer_status"
              c:identifier="gst_gl_context_check_framebuffer_status"
              version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglframebuffer.c"
               line="511">whether whether the current framebuffer is complete</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="507">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="fbo_target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="508">the GL value of the framebuffer target, GL_FRAMEBUFFER,
             GL_READ_FRAMEBUFFER, GL_DRAW_FRAMEBUFFER</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_gl_version"
              c:identifier="gst_gl_context_check_gl_version"
              version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="191"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1617">whether OpenGL context implements the required api and specified
version.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1612">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1613">api type required</doc>
            <type name="GLAPI" c:type="GstGLAPI"/>
          </parameter>
          <parameter name="maj" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1614">major version required</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="min" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1615">minor version required</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_framebuffer"
              c:identifier="gst_gl_context_clear_framebuffer"
              version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglframebuffer.c"
             line="325">Unbind the current framebuffer</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="327">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="clear_shader" c:identifier="gst_gl_context_clear_shader">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="805">Clear's the currently set shader from the GL state machine.

Note: must be called in the GL thread.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="807">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create"
              c:identifier="gst_gl_context_create"
              version="1.4"
              throws="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="993">Creates an OpenGL context with the specified @other_context as a context
to share shareable OpenGL objects with.  See the OpenGL specification for
what is shared between OpenGL contexts.

If an error occurs, and @error is not %NULL, then error will contain details
of the error and %FALSE will be returned.

Should only be called once.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="174"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1008">whether the context could successfully be created</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="995">a #GstGLContext:</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="other_context"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="996">a #GstGLContext to share OpenGL objects with</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="destroy"
              c:identifier="gst_gl_context_destroy"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1345">Destroys an OpenGL context.

Should only be called after gst_gl_context_create() has been successfully
called for this context.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="176"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1347">a #GstGLContext:</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="fill_info"
              c:identifier="gst_gl_context_fill_info"
              version="1.6"
              throws="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1368">Fills @context's info (version, extensions, vtable, etc) from the GL
context in the current thread.  Typically used with wrapped contexts to
allow wrapped contexts to be used as regular #GstGLContext's.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="208"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1370">a #GstGLContext:</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display"
              c:identifier="gst_gl_context_get_display"
              version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="159"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1515">the #GstGLDisplay associated with this @context</doc>
          <type name="GLDisplay" c:type="GstGLDisplay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1513">a #GstGLContext:</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gl_api"
              c:identifier="gst_gl_context_get_gl_api"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="797">Get the currently enabled OpenGL api.

The currently available API may be limited by the #GstGLDisplay in use and/or
the #GstGLWindow chosen.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="165"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="806">the available OpenGL api</doc>
          <type name="GLAPI" c:type="GstGLAPI"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="799">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gl_context"
              c:identifier="gst_gl_context_get_gl_context"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1464">Gets the backing OpenGL context used by @context.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="167"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1470">The platform specific backing OpenGL context</doc>
          <type name="guintptr" c:type="guintptr"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1466">a #GstGLContext:</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gl_platform"
              c:identifier="gst_gl_context_get_gl_platform"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1489">Gets the OpenGL platform that used by @context.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1495">The platform specific backing OpenGL context</doc>
          <type name="GLPlatform" c:type="GstGLPlatform"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1491">a #GstGLContext:</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gl_platform_version"
              c:identifier="gst_gl_context_get_gl_platform_version">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1750">Get the version of the OpenGL platform (GLX, EGL, etc) used.  Only valid
after a call to gst_gl_context_create().</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="195"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1752">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="major"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1753">return for the major version</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="minor"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1754">return for the minor version</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_gl_version"
              c:identifier="gst_gl_context_get_gl_version"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1585">Returns the OpenGL version implemented by @context.  See
gst_gl_context_get_gl_api() for retreiving the OpenGL api implemented by
@context.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="189"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1587">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="maj"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1588">resulting major version</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1589">resulting minor version</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_proc_address"
              c:identifier="gst_gl_context_get_proc_address"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="822">Get a function pointer to a specified opengl function, @name.  If the the
specific function does not exist, NULL is returned instead.

Platform specfic functions (names starting 'egl', 'glX', 'wgl', etc) can also
be retrieved using this method.

Note: This function may return valid function pointers that may not be valid
to call in @context.  The caller is responsible for ensuring that the
returned function is a valid function to call in @context by either checking
the OpenGL API and version or for an appropriate OpenGL extension.

Note: On success, you need to cast the returned function pointer to the
correct type to be able to call it correctly.  On 32-bit Windows, this will
include the %GSTGLAPI identifier to use the correct calling convention.
e.g.

|[&lt;!-- language="C" --&gt;
void (GSTGLAPI *PFN_glGetIntegerv) (GLenum name, GLint * ret)
]|</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="161"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="847">a function pointer or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="824">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="825">an opengl function name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_thread"
              c:identifier="gst_gl_context_get_thread"
              version="1.6">
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="154"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="779">The #GThread, @context is current in or NULL</doc>
          <type name="GLib.Thread" c:type="GThread*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="777">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_window"
              c:identifier="gst_gl_context_get_window"
              version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="186"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="951">the currently set window</doc>
          <type name="GLWindow" c:type="GstGLWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="949">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_shared"
              c:identifier="gst_gl_context_is_shared"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="203"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="1696">Whether the #GstGLContext has been shared with another #GstGLContext</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1694">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_shared_with"
              c:identifier="gst_gl_context_set_shared_with"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1716">Will internally set @context as shared with @share</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="205"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1718">a wrapped #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="share" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1719">another #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_window"
              c:identifier="gst_gl_context_set_window"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="912">Set's the current window on @context to @window.  The window can only be
changed before gst_gl_context_create() has been called and the @window is not
already running.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="184"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.c"
               line="921">Whether the window was successfully updated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="914">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="window" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="915">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_glsl_profile_version"
              c:identifier="gst_gl_context_supports_glsl_profile_version">
        <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="555">Whether @context supports the combination of @version with @profile</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="551">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="552">a #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="553">a #GstGLSLProfile</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_precision"
              c:identifier="gst_gl_context_supports_precision"
              version="1.16">
        <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="939">whether @context supports the 'precision' specifier in GLSL shaders</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="935">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="936">a #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="937">a #GstGLSLProfile</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_precision_highp"
              c:identifier="gst_gl_context_supports_precision_highp"
              version="1.16">
        <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="966">whether @context supports the 'precision highp' specifier in GLSL shaders</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="962">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="963">a #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="964">a #GstGLSLProfile</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
        </parameters>
      </method>
      <method name="swap_buffers" c:identifier="gst_gl_context_swap_buffers">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1774">Swap the front and back buffers on the window attached to @context.
This will display the frame on the next refresh cycle.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1776">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="thread_add"
              c:identifier="gst_gl_context_thread_add"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.c"
             line="1543">Execute @func in the OpenGL thread of @context with @data

MT-safe</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                         line="212"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1545">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1546">a #GstGLContextThreadFunc</doc>
            <type name="GLContextThreadFunc" c:type="GstGLContextThreadFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1547">user data to call @func with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="display" readable="0" private="1">
        <type name="GLDisplay" c:type="GstGLDisplay*"/>
      </field>
      <field name="window" readable="0" private="1">
        <type name="GLWindow" c:type="GstGLWindow*"/>
      </field>
      <field name="gl_vtable">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.h"
             line="89">a list of OpenGL function pointers</doc>
        <type name="GLFuncs" c:type="GstGLFuncs*"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLContextPrivate" c:type="GstGLContextPrivate*"/>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLContextClass"
            c:type="GstGLContextClass"
            glib:is-gtype-struct-for="GLContext">
      <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                       line="139"/>
      <field name="parent_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="get_current_context">
        <callback name="get_current_context">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="123"/>
          <return-value transfer-ownership="none">
            <type name="guintptr" c:type="guintptr"/>
          </return-value>
        </callback>
      </field>
      <field name="get_gl_context">
        <callback name="get_gl_context">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="124"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1470">The platform specific backing OpenGL context</doc>
            <type name="guintptr" c:type="guintptr"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="1466">a #GstGLContext:</doc>
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_gl_api">
        <callback name="get_gl_api">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="125"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="806">the available OpenGL api</doc>
            <type name="GLAPI" c:type="GstGLAPI"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="799">a #GstGLContext</doc>
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_gl_platform">
        <callback name="get_gl_platform">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="126"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1495">The platform specific backing OpenGL context</doc>
            <type name="GLPlatform" c:type="GstGLPlatform"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="1491">a #GstGLContext:</doc>
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_proc_address">
        <callback name="get_proc_address">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="127"/>
          <return-value transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </return-value>
          <parameters>
            <parameter name="gl_api" transfer-ownership="none">
              <type name="GLAPI" c:type="GstGLAPI"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="128"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="736">Whether the activation succeeded</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="728">a #GstGLContext</doc>
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
            <parameter name="activate" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="729">%TRUE to activate, %FALSE to deactivate</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="choose_format">
        <callback name="choose_format" throws="1">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="129"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_context">
        <callback name="create_context" throws="1">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="130"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
            <parameter name="gl_api" transfer-ownership="none">
              <type name="GLAPI" c:type="GstGLAPI"/>
            </parameter>
            <parameter name="other_context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="destroy_context">
        <callback name="destroy_context">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="132"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="swap_buffers">
        <callback name="swap_buffers">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="133"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="1776">a #GstGLContext</doc>
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="check_feature">
        <callback name="check_feature">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="134"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglcontext.c"
                 line="1654">Whether @feature is supported by @context</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="1645">a #GstGLContext</doc>
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
            <parameter name="feature" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="1646">a platform specific feature</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_gl_platform_version">
        <callback name="get_gl_platform_version">
          <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                           line="135"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="1752">a #GstGLContext</doc>
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
            <parameter name="major"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="1753">return for the major version</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="minor"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglcontext.c"
                   line="1754">return for the minor version</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="GLContextError"
                 glib:type-name="GstGLContextError"
                 glib:get-type="gst_gl_context_error_get_type"
                 c:type="GstGLContextError"
                 glib:error-domain="gst-gl-context-error-quark">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglcontext.h"
           line="66">OpenGL context errors.</doc>
      <member name="failed"
              value="0"
              c:identifier="GST_GL_CONTEXT_ERROR_FAILED"
              glib:nick="failed">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.h"
             line="68">Failed for an unspecified reason</doc>
      </member>
      <member name="wrong_config"
              value="1"
              c:identifier="GST_GL_CONTEXT_ERROR_WRONG_CONFIG"
              glib:nick="wrong-config">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.h"
             line="69">The configuration requested is not correct</doc>
      </member>
      <member name="wrong_api"
              value="2"
              c:identifier="GST_GL_CONTEXT_ERROR_WRONG_API"
              glib:nick="wrong-api">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.h"
             line="70">The OpenGL API requested is not correct</doc>
      </member>
      <member name="old_libs"
              value="3"
              c:identifier="GST_GL_CONTEXT_ERROR_OLD_LIBS"
              glib:nick="old-libs">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.h"
             line="71">The OpenGL libraries are too old</doc>
      </member>
      <member name="create_context"
              value="4"
              c:identifier="GST_GL_CONTEXT_ERROR_CREATE_CONTEXT"
              glib:nick="create-context">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.h"
             line="72">glXCreateContext (or similar) failed</doc>
      </member>
      <member name="resource_unavailable"
              value="5"
              c:identifier="GST_GL_CONTEXT_ERROR_RESOURCE_UNAVAILABLE"
              glib:nick="resource-unavailable">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglcontext.h"
             line="73">A resource is not available</doc>
      </member>
      <function name="quark" c:identifier="gst_gl_context_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="GLContextPrivate" c:type="GstGLContextPrivate" disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="36"/>
    </record>
    <callback name="GLContextThreadFunc" c:type="GstGLContextThreadFunc">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglcontext.h"
           line="51">Represents a function to run in the GL thread with @context and @data</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                       line="58"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.h"
               line="53">a #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglcontext.h"
               line="54">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="GLDisplay"
           c:symbol-prefix="gl_display"
           c:type="GstGLDisplay"
           parent="Gst.Object"
           glib:type-name="GstGLDisplay"
           glib:get-type="gst_gl_display_get_type"
           glib:type-struct="GLDisplayClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstgldisplay.c"
           line="24">#GstGLDisplay represents a connection to the underlying windowing system.
Elements are required to make use of #GstContext to share and propogate
a #GstGLDisplay.

There are a number of environment variables that influence the choice of
platform and window system specific functionality.
- GST_GL_WINDOW influences the window system to use.  Common values are
  'x11', 'wayland', 'win32' or 'cocoa'.
- GST_GL_PLATFORM influences the OpenGL platform to use.  Common values are
  'egl', 'glx', 'wgl' or 'cgl'.
- GST_GL_API influences the OpenGL API requested by the OpenGL platform.
  Common values are 'opengl', 'opengl3' and 'gles2'.

&gt; Certain window systems require a special function to be called to
&gt; initialize threading support.  As this GStreamer GL library does not preclude
&gt; concurrent access to the windowing system, it is strongly advised that
&gt; applications ensure that threading support has been initialized before any
&gt; other toolkit/library functionality is accessed.  Failure to do so could
&gt; result in sudden application abortion during execution.  The most notably
&gt; example of such a function is X11's XInitThreads\().</doc>
      <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                       line="101"/>
      <constructor name="new" c:identifier="gst_gl_display_new" version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="104"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="265">a new #GstGLDisplay</doc>
          <type name="GLDisplay" c:type="GstGLDisplay*"/>
        </return-value>
      </constructor>
      <virtual-method name="create_window" invoker="create_window">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.c"
             line="540">It requires the display's object lock to be held.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="97"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="546">a new #GstGLWindow for @display or %NULL.</doc>
          <type name="GLWindow" c:type="GstGLWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="542">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_handle" invoker="get_handle" version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="341">the native handle for the display</doc>
          <type name="guintptr" c:type="guintptr"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="339">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_context"
              c:identifier="gst_gl_display_add_context"
              version="1.6">
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="738">whether @context was successfully added. %FALSE may be returned
if there already exists another context for @context's active thread.

Must be called with the object lock held.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="735">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="736">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_context"
              c:identifier="gst_gl_display_create_context"
              version="1.6"
              throws="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.c"
             line="489">It requires the display's object lock to be held.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="498">whether a new context could be created.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="491">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
          <parameter name="other_context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="492">other #GstGLContext to share resources with.</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="p_context"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="493">resulting #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext**"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_window" c:identifier="gst_gl_display_create_window">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.c"
             line="540">It requires the display's object lock to be held.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="143"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="546">a new #GstGLWindow for @display or %NULL.</doc>
          <type name="GLWindow" c:type="GstGLWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="542">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="egl_from_gl_display"
              c:identifier="gst_gl_display_egl_from_gl_display"
              version="1.12">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.c"
             line="237">Creates a EGL display connection from a native Display.

This function will return the same value for multiple calls with the same
@display.</doc>
        <source-position filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.h"
                         line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.c"
               line="246">a new #GstGLDisplayEGL</doc>
          <type name="GLDisplayEGL" c:type="GstGLDisplayEGL*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.c"
                 line="239">an existing #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="filter_gl_api" c:identifier="gst_gl_display_filter_gl_api">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.c"
             line="363">limit the use of OpenGL to the requested @gl_api.  This is intended to allow
application and elements to request a specific set of OpenGL API's based on
what they support.  See gst_gl_context_get_gl_api() for the retreiving the
API supported by a #GstGLContext.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="365">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
          <parameter name="gl_api" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="366">a #GstGLAPI to filter with</doc>
            <type name="GLAPI" c:type="GstGLAPI"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_window"
              c:identifier="gst_gl_display_find_window"
              version="1.12">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.c"
             line="598">Execute @compare_func over the list of windows stored by @display.  The
first argment to @compare_func is the #GstGLWindow being checked and the
second argument is @data.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="608">The first #GstGLWindow that causes a match
         from @compare_func</doc>
          <type name="GLWindow" c:type="GstGLWindow*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="600">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="601">some data to pass to @compare_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="compare_func"
                     transfer-ownership="none"
                     scope="call">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="602">a comparison function to run</doc>
            <type name="GLib.CompareFunc" c:type="GCompareFunc"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_gl_api" c:identifier="gst_gl_display_get_gl_api">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.c"
             line="397">see gst_gl_display_filter_gl_api() for what the returned value represents</doc>
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="403">the #GstGLAPI configured for @display</doc>
          <type name="GLAPI" c:type="GstGLAPI"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="399">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gl_api_unlocked"
              c:identifier="gst_gl_display_get_gl_api_unlocked">
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="GLAPI" c:type="GstGLAPI"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gl_context_for_thread"
              c:identifier="gst_gl_display_get_gl_context_for_thread"
              version="1.6">
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="136"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="681">the #GstGLContext current on @thread or %NULL

Must be called with the object lock held.</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="678">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
          <parameter name="thread" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="679">a #GThread</doc>
            <type name="GLib.Thread" c:type="GThread*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_handle"
              c:identifier="gst_gl_display_get_handle"
              version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="341">the native handle for the display</doc>
          <type name="guintptr" c:type="guintptr"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="339">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_handle_type"
              c:identifier="gst_gl_display_get_handle_type"
              version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="423">the #GstGLDisplayType of @display</doc>
          <type name="GLDisplayType" c:type="GstGLDisplayType"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="421">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_window"
              c:identifier="gst_gl_display_remove_window"
              version="1.12">
        <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="577">if @window could be removed from @display</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="574">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </instance-parameter>
          <parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="575">a #GstGLWindow to remove</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="type" readable="0" private="1">
        <type name="GLDisplayType" c:type="GstGLDisplayType"/>
      </field>
      <field name="windows" readable="0" private="1">
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="main_context" readable="0" private="1">
        <type name="GLib.MainContext" c:type="GMainContext*"/>
      </field>
      <field name="main_loop" readable="0" private="1">
        <type name="GLib.MainLoop" c:type="GMainLoop*"/>
      </field>
      <field name="event_source" readable="0" private="1">
        <type name="GLib.Source" c:type="GSource*"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLDisplayPrivate" c:type="GstGLDisplayPrivate*"/>
      </field>
      <glib:signal name="create-context" when="last">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.c"
             line="159">Overrides the @GstGLContext creation mechanism.
It can be called in any thread and it is emitted with
display's object lock held.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="168">the new context.</doc>
          <type name="GLContext"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="162">other context to share resources with.</doc>
            <type name="GLContext"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="GLDisplayClass"
            c:type="GstGLDisplayClass"
            glib:is-gtype-struct-for="GLDisplay">
      <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                       line="101"/>
      <field name="object_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="get_handle">
        <callback name="get_handle">
          <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="341">the native handle for the display</doc>
            <type name="guintptr" c:type="guintptr"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstgldisplay.c"
                   line="339">a #GstGLDisplay</doc>
              <type name="GLDisplay" c:type="GstGLDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_window">
        <callback name="create_window">
          <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                           line="97"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstgldisplay.c"
                 line="546">a new #GstGLWindow for @display or %NULL.</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </return-value>
          <parameters>
            <parameter name="display" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstgldisplay.c"
                   line="542">a #GstGLDisplay</doc>
              <type name="GLDisplay" c:type="GstGLDisplay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="GLDisplayEGL"
           c:symbol-prefix="gl_display_egl"
           c:type="GstGLDisplayEGL"
           parent="GLDisplay"
           glib:type-name="GstGLDisplayEGL"
           glib:get-type="gst_gl_display_egl_get_type"
           glib:type-struct="GLDisplayEGLClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.h"
           line="41">the contents of a #GstGLDisplayEGL are private and should only be accessed
through the provided API</doc>
      <source-position filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.h"
                       line="64"/>
      <constructor name="new" c:identifier="gst_gl_display_egl_new">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.c"
             line="175">Create a new #GstGLDisplayEGL using the default EGL_DEFAULT_DISPLAY.</doc>
        <source-position filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.h"
                         line="67"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.c"
               line="180">a new #GstGLDisplayEGL or %NULL</doc>
          <type name="GLDisplayEGL" c:type="GstGLDisplayEGL*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_egl_display"
                   c:identifier="gst_gl_display_egl_new_with_egl_display">
        <source-position filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="GLDisplayEGL" c:type="GstGLDisplayEGL*"/>
        </return-value>
        <parameters>
          <parameter name="display"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_from_native"
                c:identifier="gst_gl_display_egl_get_from_native"
                version="1.12">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.c"
             line="90">Attempts to create a new #EGLDisplay from @display.  If @type is
%GST_GL_DISPLAY_TYPE_ANY, then @display must be 0. @type must not be
%GST_GL_DISPLAY_TYPE_NONE.</doc>
        <source-position filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.h"
                         line="76"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.c"
               line="99">A #EGLDisplay or %EGL_NO_DISPLAY</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.c"
                 line="92">a #GstGLDisplayType</doc>
            <type name="GLDisplayType" c:type="GstGLDisplayType"/>
          </parameter>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.c"
                 line="93">pointer to a display (or 0)</doc>
            <type name="guintptr" c:type="guintptr"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent">
        <type name="GLDisplay" c:type="GstGLDisplay"/>
      </field>
      <field name="display" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="foreign_display" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLDisplayEGLClass"
            c:type="GstGLDisplayEGLClass"
            glib:is-gtype-struct-for="GLDisplayEGL">
      <source-position filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.h"
                       line="64"/>
      <field name="object_class">
        <type name="GLDisplayClass" c:type="GstGLDisplayClass"/>
      </field>
      <field name="_padding">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="GLDisplayPrivate" c:type="GstGLDisplayPrivate" disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="32"/>
    </record>
    <bitfield name="GLDisplayType"
              glib:type-name="GstGLDisplayType"
              glib:get-type="gst_gl_display_type_get_type"
              c:type="GstGLDisplayType">
      <member name="none"
              value="0"
              c:identifier="GST_GL_DISPLAY_TYPE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.h"
             line="44">no display type</doc>
      </member>
      <member name="x11"
              value="1"
              c:identifier="GST_GL_DISPLAY_TYPE_X11"
              glib:nick="x11">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.h"
             line="45">X11 display</doc>
      </member>
      <member name="wayland"
              value="2"
              c:identifier="GST_GL_DISPLAY_TYPE_WAYLAND"
              glib:nick="wayland">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.h"
             line="46">Wayland display</doc>
      </member>
      <member name="cocoa"
              value="4"
              c:identifier="GST_GL_DISPLAY_TYPE_COCOA"
              glib:nick="cocoa">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.h"
             line="47">Cocoa display</doc>
      </member>
      <member name="win32"
              value="8"
              c:identifier="GST_GL_DISPLAY_TYPE_WIN32"
              glib:nick="win32">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.h"
             line="48">Win32 display</doc>
      </member>
      <member name="dispmanx"
              value="16"
              c:identifier="GST_GL_DISPLAY_TYPE_DISPMANX"
              glib:nick="dispmanx">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.h"
             line="49">Dispmanx display</doc>
      </member>
      <member name="egl"
              value="32"
              c:identifier="GST_GL_DISPLAY_TYPE_EGL"
              glib:nick="egl">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.h"
             line="50">EGL display</doc>
      </member>
      <member name="viv_fb"
              value="64"
              c:identifier="GST_GL_DISPLAY_TYPE_VIV_FB"
              glib:nick="viv-fb">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.h"
             line="51">Vivante Framebuffer display</doc>
      </member>
      <member name="gbm"
              value="128"
              c:identifier="GST_GL_DISPLAY_TYPE_GBM"
              glib:nick="gbm">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.h"
             line="52">Mesa3D GBM display</doc>
      </member>
      <member name="any"
              value="4294967295"
              c:identifier="GST_GL_DISPLAY_TYPE_ANY"
              glib:nick="any">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.h"
             line="53">any display type</doc>
      </member>
    </bitfield>
    <class name="GLDisplayWayland"
           c:symbol-prefix="gl_display_wayland"
           c:type="GstGLDisplayWayland"
           parent="GLDisplay"
           glib:type-name="GstGLDisplayWayland"
           glib:get-type="gst_gl_display_wayland_get_type"
           glib:type-struct="GLDisplayWaylandClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
           line="45">the contents of a #GstGLDisplayWayland are private and should only be accessed
through the provided API</doc>
      <source-position filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                       line="74"/>
      <constructor name="new" c:identifier="gst_gl_display_wayland_new">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
             line="136">Create a new #GstGLDisplayWayland from the wayland display name.  See wl_display_connect()
for details on what is a valid name.</doc>
        <source-position filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                         line="77"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
               line="143">a new #GstGLDisplayWayland or %NULL</doc>
          <type name="GLDisplayWayland" c:type="GstGLDisplayWayland*"/>
        </return-value>
        <parameters>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
                 line="138">a display name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_display"
                   c:identifier="gst_gl_display_wayland_new_with_display">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
             line="172">Creates a new display connection from a wl_display Display.</doc>
        <source-position filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                         line="80"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
               line="178">a new #GstGLDisplayWayland</doc>
          <type name="GLDisplayWayland" c:type="GstGLDisplayWayland*"/>
        </return-value>
        <parameters>
          <parameter name="display"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.c"
                 line="174">an existing, wayland display</doc>
            <type name="gpointer" c:type="wl_display*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent">
        <type name="GLDisplay" c:type="GstGLDisplay"/>
      </field>
      <field name="display">
        <type name="gpointer" c:type="wl_display*"/>
      </field>
      <field name="registry">
        <type name="gpointer" c:type="wl_registry*"/>
      </field>
      <field name="compositor">
        <type name="gpointer" c:type="wl_compositor*"/>
      </field>
      <field name="subcompositor">
        <type name="gpointer" c:type="wl_subcompositor*"/>
      </field>
      <field name="shell">
        <type name="gpointer" c:type="wl_shell*"/>
      </field>
      <field name="foreign_display" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLDisplayWaylandClass"
            c:type="GstGLDisplayWaylandClass"
            glib:is-gtype-struct-for="GLDisplayWayland">
      <source-position filename="git/gst-libs/gst/gl/wayland/gstgldisplay_wayland.h"
                       line="74"/>
      <field name="object_class">
        <type name="GLDisplayClass" c:type="GstGLDisplayClass"/>
      </field>
      <field name="_padding">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="GLDisplayX11"
           c:symbol-prefix="gl_display_x11"
           c:type="GstGLDisplayX11"
           parent="GLDisplay"
           glib:type-name="GstGLDisplayX11"
           glib:get-type="gst_gl_display_x11_get_type"
           glib:type-struct="GLDisplayX11Class">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.h"
           line="45">the contents of a #GstGLDisplayX11 are private and should only be accessed
through the provided API</doc>
      <source-position filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.h"
                       line="69"/>
      <constructor name="new" c:identifier="gst_gl_display_x11_new">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.c"
             line="76">Create a new #GstGLDisplayX11 from the x11 display name.  See XOpenDisplay()
for details on what is a valid name.</doc>
        <source-position filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.h"
                         line="72"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.c"
               line="83">a new #GstGLDisplayX11 or %NULL</doc>
          <type name="GLDisplayX11" c:type="GstGLDisplayX11*"/>
        </return-value>
        <parameters>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.c"
                 line="78">a display name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_display"
                   c:identifier="gst_gl_display_x11_new_with_display"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.c"
             line="119">Creates a new display connection from a X11 Display.</doc>
        <source-position filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.h"
                         line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.c"
               line="125">a new #GstGLDisplayX11</doc>
          <type name="GLDisplayX11" c:type="GstGLDisplayX11*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.c"
                 line="121">an existing, x11 display</doc>
            <type c:type="Display*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="parent" readable="0" private="1">
        <type name="GLDisplay" c:type="GstGLDisplay"/>
      </field>
      <field name="name" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="display" introspectable="0" readable="0" private="1">
        <type c:type="Display*"/>
      </field>
      <field name="xcb_connection" introspectable="0" readable="0" private="1">
        <type c:type="xcb_connection_t*"/>
      </field>
      <field name="foreign_display" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLDisplayX11Class"
            c:type="GstGLDisplayX11Class"
            glib:is-gtype-struct-for="GLDisplayX11">
      <source-position filename="git/gst-libs/gst/gl/x11/gstgldisplay_x11.h"
                       line="69"/>
      <field name="object_class">
        <type name="GLDisplayClass" c:type="GstGLDisplayClass"/>
      </field>
      <field name="_padding">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="GLFilter"
           c:symbol-prefix="gl_filter"
           c:type="GstGLFilter"
           parent="GLBaseFilter"
           glib:type-name="GstGLFilter"
           glib:get-type="gst_gl_filter_get_type"
           glib:type-struct="GLFilterClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglfilter.c"
           line="23">#GstGLFilter helps to implement simple OpenGL filter elements taking a
single input and producing a single output with a #GstGLFramebuffer</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                       line="123"/>
      <function name="add_rgba_pad_templates"
                c:identifier="gst_gl_filter_add_rgba_pad_templates">
        <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="klass" transfer-ownership="none">
            <type name="GLFilterClass" c:type="GstGLFilterClass*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="filter">
        <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <type name="GLFilter" c:type="GstGLFilter*"/>
          </instance-parameter>
          <parameter name="inbuf" transfer-ownership="none">
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="outbuf" transfer-ownership="none">
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="filter_texture"
                      invoker="filter_texture"
                      version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.c"
             line="927">Calls filter_texture vfunc with correctly mapped #GstGLMemorys</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglfilter.c"
               line="935">whether the transformation succeeded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="929">a #GstGLFilter</doc>
            <type name="GLFilter" c:type="GstGLFilter*"/>
          </instance-parameter>
          <parameter name="in_tex" transfer-ownership="none">
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </parameter>
          <parameter name="out_tex" transfer-ownership="none">
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="init_fbo">
        <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <type name="GLFilter" c:type="GstGLFilter*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_caps">
        <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <type name="GLFilter" c:type="GstGLFilter*"/>
          </instance-parameter>
          <parameter name="incaps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="outcaps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="transform_internal_caps">
        <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                         line="118"/>
        <return-value transfer-ownership="full">
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <type name="GLFilter" c:type="GstGLFilter*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="Gst.PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="filter_caps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="draw_fullscreen_quad"
              c:identifier="gst_gl_filter_draw_fullscreen_quad"
              version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.c"
             line="1211">Render a fullscreen quad using the current GL state.  The only GL state this
modifies is the necessary vertex/index buffers and, if necessary, a
Vertex Array Object for drawing a fullscreen quad.  Framebuffer state,
any shaders, viewport state, etc must be setup by the caller.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                         line="140"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="1213">a #GstGLFilter</doc>
            <type name="GLFilter" c:type="GstGLFilter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="filter_texture"
              c:identifier="gst_gl_filter_filter_texture"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.c"
             line="927">Calls filter_texture vfunc with correctly mapped #GstGLMemorys</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglfilter.c"
               line="935">whether the transformation succeeded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="929">a #GstGLFilter</doc>
            <type name="GLFilter" c:type="GstGLFilter*"/>
          </instance-parameter>
          <parameter name="inbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="930">an input buffer</doc>
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="outbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="931">an output buffer</doc>
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="render_to_target"
              c:identifier="gst_gl_filter_render_to_target"
              version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.c"
             line="1054">Transforms @input into @output using @func on through FBO.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglfilter.c"
               line="1064">the return value of @func</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="1056">a #GstGLFilter</doc>
            <type name="GLFilter" c:type="GstGLFilter*"/>
          </instance-parameter>
          <parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="1057">the input texture</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </parameter>
          <parameter name="output" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="1058">the output texture</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="1059">the function to transform @input into @output. called with @data</doc>
            <type name="GLFilterRenderFunc" c:type="GstGLFilterRenderFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="1060">the data associated with @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="render_to_target_with_shader"
              c:identifier="gst_gl_filter_render_to_target_with_shader"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.c"
             line="1137">Transforms @input into @output using @shader with a FBO.

See also: gst_gl_filter_render_to_target()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="1139">a #GstGLFilter</doc>
            <type name="GLFilter" c:type="GstGLFilter*"/>
          </instance-parameter>
          <parameter name="input" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="1140">the input texture</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </parameter>
          <parameter name="output" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="1141">the output texture</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </parameter>
          <parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="1142">the shader to use.</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GLBaseFilter" c:type="GstGLBaseFilter"/>
      </field>
      <field name="in_info">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.h"
             line="56">the video info for input buffers</doc>
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
      <field name="out_info">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.h"
             line="57">the video info for output buffers</doc>
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
      <field name="in_texture_target">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.h"
             line="58">The texture target of the input buffers (usually 2D)</doc>
        <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
      </field>
      <field name="out_texture_target">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.h"
             line="59">The texture target of the output buffers (usually 2D)</doc>
        <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
      </field>
      <field name="out_caps">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.h"
             line="60">the output #GstCaps</doc>
        <type name="Gst.Caps" c:type="GstCaps*"/>
      </field>
      <field name="fbo">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.h"
             line="61">#GstGLFramebuffer object used for transformations (only for subclass usage)</doc>
        <type name="GLFramebuffer" c:type="GstGLFramebuffer*"/>
      </field>
      <field name="gl_result" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="inbuf" readable="0" private="1">
        <type name="Gst.Buffer" c:type="GstBuffer*"/>
      </field>
      <field name="outbuf" readable="0" private="1">
        <type name="Gst.Buffer" c:type="GstBuffer*"/>
      </field>
      <field name="default_shader" readable="0" private="1">
        <type name="GLShader" c:type="GstGLShader*"/>
      </field>
      <field name="valid_attributes" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="vao" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="vbo_indices" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="vertex_buffer" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="draw_attr_position_loc" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="draw_attr_texture_loc" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLFilterClass"
            c:type="GstGLFilterClass"
            glib:is-gtype-struct-for="GLFilter">
      <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                       line="123"/>
      <field name="parent_class">
        <type name="GLBaseFilterClass" c:type="GstGLBaseFilterClass"/>
      </field>
      <field name="set_caps">
        <callback name="set_caps">
          <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                           line="113"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="filter" transfer-ownership="none">
              <type name="GLFilter" c:type="GstGLFilter*"/>
            </parameter>
            <parameter name="incaps" transfer-ownership="none">
              <type name="Gst.Caps" c:type="GstCaps*"/>
            </parameter>
            <parameter name="outcaps" transfer-ownership="none">
              <type name="Gst.Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="filter">
        <callback name="filter">
          <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                           line="114"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="filter" transfer-ownership="none">
              <type name="GLFilter" c:type="GstGLFilter*"/>
            </parameter>
            <parameter name="inbuf" transfer-ownership="none">
              <type name="Gst.Buffer" c:type="GstBuffer*"/>
            </parameter>
            <parameter name="outbuf" transfer-ownership="none">
              <type name="Gst.Buffer" c:type="GstBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="filter_texture">
        <callback name="filter_texture">
          <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                           line="115"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglfilter.c"
                 line="935">whether the transformation succeeded</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="filter" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglfilter.c"
                   line="929">a #GstGLFilter</doc>
              <type name="GLFilter" c:type="GstGLFilter*"/>
            </parameter>
            <parameter name="in_tex" transfer-ownership="none">
              <type name="GLMemory" c:type="GstGLMemory*"/>
            </parameter>
            <parameter name="out_tex" transfer-ownership="none">
              <type name="GLMemory" c:type="GstGLMemory*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="init_fbo">
        <callback name="init_fbo">
          <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                           line="116"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="filter" transfer-ownership="none">
              <type name="GLFilter" c:type="GstGLFilter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="transform_internal_caps">
        <callback name="transform_internal_caps">
          <source-position filename="git/gst-libs/gst/gl/gstglfilter.h"
                           line="118"/>
          <return-value transfer-ownership="full">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </return-value>
          <parameters>
            <parameter name="filter" transfer-ownership="none">
              <type name="GLFilter" c:type="GstGLFilter*"/>
            </parameter>
            <parameter name="direction" transfer-ownership="none">
              <type name="Gst.PadDirection" c:type="GstPadDirection"/>
            </parameter>
            <parameter name="caps" transfer-ownership="none">
              <type name="Gst.Caps" c:type="GstCaps*"/>
            </parameter>
            <parameter name="filter_caps" transfer-ownership="none">
              <type name="Gst.Caps" c:type="GstCaps*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <callback name="GLFilterRenderFunc"
              c:type="GstGLFilterRenderFunc"
              version="1.10">
      <source-position filename="git/gst-libs/gst/gl/gstglfilter.h" line="52"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfilter.h"
             line="48">whether the render succeeded</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="filter" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglfilter.h"
               line="44">the #GstGLFilter</doc>
          <type name="GLFilter" c:type="GstGLFilter*"/>
        </parameter>
        <parameter name="in_tex" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglfilter.h"
               line="45">the input #GstGLMemory to render</doc>
          <type name="GLMemory" c:type="GstGLMemory*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglfilter.h"
               line="46">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="GLFormat"
                 glib:type-name="GstGLFormat"
                 glib:get-type="gst_gl_format_get_type"
                 c:type="GstGLFormat">
      <member name="luminance"
              value="6409"
              c:identifier="GST_GL_LUMINANCE"
              glib:nick="luminance">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="75">Single component replicated across R, G, and B textures
                   components</doc>
      </member>
      <member name="alpha"
              value="6406"
              c:identifier="GST_GL_ALPHA"
              glib:nick="alpha">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="77">Single component stored in the A texture component</doc>
      </member>
      <member name="luminance_alpha"
              value="6410"
              c:identifier="GST_GL_LUMINANCE_ALPHA"
              glib:nick="luminance-alpha">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="78">Combination of #GST_GL_LUMINANCE and #GST_GL_ALPHA</doc>
      </member>
      <member name="red"
              value="6403"
              c:identifier="GST_GL_RED"
              glib:nick="red">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="79">Single component stored in the R texture component</doc>
      </member>
      <member name="r8" value="33321" c:identifier="GST_GL_R8" glib:nick="r8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="80">Single 8-bit component stored in the R texture component</doc>
      </member>
      <member name="rg" value="33319" c:identifier="GST_GL_RG" glib:nick="rg">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="81">Two components stored in the R and G texture components</doc>
      </member>
      <member name="rg8"
              value="33323"
              c:identifier="GST_GL_RG8"
              glib:nick="rg8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="82">Two 8-bit components stored in the R and G texture components</doc>
      </member>
      <member name="rgb"
              value="6407"
              c:identifier="GST_GL_RGB"
              glib:nick="rgb">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="83">Three components stored in the R, G, and B texture components</doc>
      </member>
      <member name="rgb8"
              value="32849"
              c:identifier="GST_GL_RGB8"
              glib:nick="rgb8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="84">Three 8-bit components stored in the R, G, and B
              texture components</doc>
      </member>
      <member name="rgb565"
              value="36194"
              c:identifier="GST_GL_RGB565"
              glib:nick="rgb565">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="86">Three components of bit depth 5, 6 and 5 stored in the R, G,
                and B texture components respectively.</doc>
      </member>
      <member name="rgb16"
              value="32852"
              c:identifier="GST_GL_RGB16"
              glib:nick="rgb16">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="88">Three 16-bit components stored in the R, G, and B
              texture components</doc>
      </member>
      <member name="rgba"
              value="6408"
              c:identifier="GST_GL_RGBA"
              glib:nick="rgba">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="90">Four components stored in the R, G, B, and A texture
              components respectively.</doc>
      </member>
      <member name="rgba8"
              value="32856"
              c:identifier="GST_GL_RGBA8"
              glib:nick="rgba8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="92">Four 8-bit components stored in the R, G, B, and A texture
               components respectively.</doc>
      </member>
      <member name="rgba16"
              value="32859"
              c:identifier="GST_GL_RGBA16"
              glib:nick="rgba16">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="94">Four 16-bit components stored in the R, G, B, and A texture
               components respectively.</doc>
      </member>
      <member name="depth_component16"
              value="33189"
              c:identifier="GST_GL_DEPTH_COMPONENT16"
              glib:nick="depth-component16">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="96">A single 16-bit component for depth information.</doc>
      </member>
      <member name="depth24_stencil8"
              value="35056"
              c:identifier="GST_GL_DEPTH24_STENCIL8"
              glib:nick="depth24-stencil8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.h"
             line="97">A 24-bit component for depth information and
                          a 8-bit component for stencil informat.</doc>
      </member>
      <function name="from_video_info"
                c:identifier="gst_gl_format_from_video_info">
        <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="138">the #GstGLFormat necessary for holding the data in @plane of @vinfo</doc>
          <type name="GLFormat" c:type="GstGLFormat"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="134">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="vinfo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="135">a #GstVideoInfo</doc>
            <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
          </parameter>
          <parameter name="plane" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="136">the plane number in @vinfo</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="is_supported"
                c:identifier="gst_gl_format_is_supported"
                version="1.16">
        <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="365">Whether @format is supported by @context based on the OpenGL API,
         version, or available OpenGL extension/s.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="362">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="363">the #GstGLFormat to check is supported by @context</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_from_sized_gl_format"
                c:identifier="gst_gl_format_type_from_sized_gl_format"
                version="1.16">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.c"
             line="295">Get the unsized format and type from @format for usage in glReadPixels,
glTex{Sub}Image*, glTexImage* and similar functions.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="297">the sized internal #GstGLFormat</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="unsized_format"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="298">location for the resulting unsized #GstGLFormat</doc>
            <type name="GLFormat" c:type="GstGLFormat*"/>
          </parameter>
          <parameter name="gl_type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="299">location for the resulting GL type</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </function>
      <function name="type_n_bytes" c:identifier="gst_gl_format_type_n_bytes">
        <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="122">the number of bytes the specified @format, @type combination takes
per pixel</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="119">the OpenGL format, %GL_RGBA, %GL_LUMINANCE, etc</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="120">the OpenGL type, %GL_UNSIGNED_BYTE, %GL_FLOAT, etc</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="GLFramebuffer"
           c:symbol-prefix="gl_framebuffer"
           c:type="GstGLFramebuffer"
           version="1.10"
           parent="Gst.Object"
           glib:type-name="GstGLFramebuffer"
           glib:get-type="gst_gl_framebuffer_get_type"
           glib:type-struct="GLFramebufferClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglframebuffer.c"
           line="21">A #GstGLFramebuffer represents and holds an OpenGL framebuffer object with
it's associated attachments.

A #GstGLFramebuffer can be created with gst_gl_framebuffer_new() or
gst_gl_framebuffer_new_with_default_depth() and bound with
gst_gl_framebuffer_bind().  Other resources can be bound with
gst_gl_framebuffer_attach()

Note: OpenGL framebuffers are not shareable resources so cannot be used
between multiple OpenGL contexts.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                       line="79"/>
      <constructor name="new"
                   c:identifier="gst_gl_framebuffer_new"
                   version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                         line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglframebuffer.c"
               line="174">a new #GstGLFramebuffer</doc>
          <type name="GLFramebuffer" c:type="GstGLFramebuffer*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="172">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_default_depth"
                   c:identifier="gst_gl_framebuffer_new_with_default_depth"
                   version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglframebuffer.c"
               line="208">a new #GstGLFramebuffer with a depth buffer of @width and @height</doc>
          <type name="GLFramebuffer" c:type="GstGLFramebuffer*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="204">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="205">width for the depth buffer</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="206">for the depth buffer</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="attach"
              c:identifier="gst_gl_framebuffer_attach"
              version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglframebuffer.c"
             line="438">attach @mem to @attachment_point</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="fb" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="440">a #GstGLFramebuffer</doc>
            <type name="GLFramebuffer" c:type="GstGLFramebuffer*"/>
          </instance-parameter>
          <parameter name="attachment_point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="441">the OpenGL attachment point to bind @mem to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="442">the memory object to bind to @attachment_point</doc>
            <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
          </parameter>
        </parameters>
      </method>
      <method name="bind"
              c:identifier="gst_gl_framebuffer_bind"
              version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglframebuffer.c"
             line="303">Bind @fb into the current thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="fb" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="305">a #GstGLFramebuffer</doc>
            <type name="GLFramebuffer" c:type="GstGLFramebuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="draw_to_texture"
              c:identifier="gst_gl_framebuffer_draw_to_texture"
              version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglframebuffer.c"
             line="255">Perform the steps necessary to have the output of a glDraw* command in
@func update the contents of @mem.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglframebuffer.c"
               line="265">the result of executing @func</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="fb" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="257">a #GstGLFramebuffer</doc>
            <type name="GLFramebuffer" c:type="GstGLFramebuffer*"/>
          </instance-parameter>
          <parameter name="mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="258">the #GstGLMemory to draw to</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="259">the function to run</doc>
            <type name="GLFramebufferFunc" c:type="GstGLFramebufferFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="260">data to pass to @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_effective_dimensions"
              c:identifier="gst_gl_framebuffer_get_effective_dimensions"
              version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglframebuffer.c"
             line="482">Retreive the effective dimensions from the current attachments attached to
@fb.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="fb" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="484">a #GstGLFramebuffer</doc>
            <type name="GLFramebuffer" c:type="GstGLFramebuffer*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="485">output width</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="486">output height</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gst_gl_framebuffer_get_id"
              version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglframebuffer.c"
               line="565">the OpenGL id for @fb</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="fb" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglframebuffer.c"
                 line="563">a #GstGLFramebuffer</doc>
            <type name="GLFramebuffer" c:type="GstGLFramebuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="object" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="context" readable="0" private="1">
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="fbo_id" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="attachments" readable="0" private="1">
        <array name="GLib.Array" c:type="GArray*">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLFramebufferPrivate" c:type="GstGLFramebufferPrivate*"/>
      </field>
    </class>
    <record name="GLFramebufferClass"
            c:type="GstGLFramebufferClass"
            glib:is-gtype-struct-for="GLFramebuffer">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglframebuffer.h"
           line="68">Opaque #GstGLFramebufferClass struct</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                       line="79"/>
      <field name="object_class" readable="0" private="1">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <callback name="GLFramebufferFunc" c:type="GstGLFramebufferFunc">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglframebuffer.h"
           line="40">callback definition for operating through a #GstGLFramebuffer object</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                       line="46"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="stuff"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglframebuffer.h"
               line="42">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="GLFramebufferPrivate"
            c:type="GstGLFramebufferPrivate"
            disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstglframebuffer.h"
                       line="38"/>
    </record>
    <record name="GLFuncs" c:type="GstGLFuncs" disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="105"/>
    </record>
    <record name="GLMemory" c:type="GstGLMemory">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemory.c"
           line="33">GstGLMemory is a #GstGLBaseMemory subclass providing support for the mapping of
OpenGL textures.

#GstGLMemory is created or wrapped through gst_gl_base_memory_alloc()
with #GstGLVideoAllocationParams.

Data is uploaded or downloaded from the GPU as is necessary.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h" line="90"/>
      <field name="mem" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="60">the parent #GstGLBaseMemory object</doc>
        <type name="GLBaseMemory" c:type="GstGLBaseMemory"/>
      </field>
      <field name="tex_id" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="61">the GL texture id for this memory</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="tex_target" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="62">the GL texture target for this memory</doc>
        <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
      </field>
      <field name="tex_format" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="63">the texture type</doc>
        <type name="GLFormat" c:type="GstGLFormat"/>
      </field>
      <field name="info" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="64">the texture's #GstVideoInfo</doc>
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
      <field name="valign" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="65">data alignment for system memory mapping</doc>
        <type name="GstVideo.VideoAlignment" c:type="GstVideoAlignment"/>
      </field>
      <field name="plane" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="66">data plane in @info</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="tex_scaling" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="67">GL shader scaling parameters for @valign and/or width/height</doc>
        <array zero-terminated="0" fixed-size="2">
          <type name="gfloat" c:type="gfloat"/>
        </array>
      </field>
      <field name="texture_wrapped" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="unpack_length" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="tex_width" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <method name="copy_into"
              c:identifier="gst_gl_memory_copy_into"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="976">Copies @gl_mem into the texture specfified by @tex_id.  The format of @tex_id
is specified by @tex_format, @width and @height.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="260"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="988">Whether the copy suceeded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="978">a #GstGLMemory</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </instance-parameter>
          <parameter name="tex_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="979">OpenGL texture id</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="980">the #GstGLTextureTarget</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
          <parameter name="tex_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="981">the #GstGLFormat</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="982">width of @tex_id</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="983">height of @tex_id</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_teximage"
              c:identifier="gst_gl_memory_copy_teximage"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="630">Copies the texture in #GstGLMemory into the texture specified by @tex_id,
@out_target, @out_tex_format, @out_width and @out_height.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="267"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="642">whether the copy succeeded.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="632">the source #GstGLMemory</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </instance-parameter>
          <parameter name="tex_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="633">the destination texture id</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="out_target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="634">the destination #GstGLTextureTarget</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
          <parameter name="out_tex_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="635">the destination #GstGLFormat</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="out_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="636">the destination width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="out_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="637">the destination height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_texture_format"
              c:identifier="gst_gl_memory_get_texture_format"
              version="1.12">
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="287"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1047">the #GstGLFormat of @gl_mem</doc>
          <type name="GLFormat" c:type="GstGLFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1045">a #GstGLMemory</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_texture_height"
              c:identifier="gst_gl_memory_get_texture_height"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="285"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1031">the texture height of @gl_mem</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1029">a #GstGLMemory</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_texture_id"
              c:identifier="gst_gl_memory_get_texture_id"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="291"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1079">the OpenGL texture handle of @gl_mem</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1077">a #GstGLMemory</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_texture_target"
              c:identifier="gst_gl_memory_get_texture_target"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="289"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1063">the #GstGLTextureTarget of @gl_mem</doc>
          <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1061">a #GstGLMemory</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_texture_width"
              c:identifier="gst_gl_memory_get_texture_width"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="283"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1015">the texture width of @gl_mem</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1013">a #GstGLMemory</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="gst_gl_memory_init" version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="288">Initializes @mem with the required parameters.  @info is assumed to have
already have been modified with gst_video_info_align().</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="246"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="290">the #GstGLBaseMemory to initialize</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </instance-parameter>
          <parameter name="allocator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="291">the #GstAllocator to initialize with</doc>
            <type name="Gst.Allocator" c:type="GstAllocator*"/>
          </parameter>
          <parameter name="parent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="292">the parent #GstMemory to initialize with</doc>
            <type name="Gst.Memory" c:type="GstMemory*"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="293">the #GstGLContext to initialize with</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="294">the #GstGLTextureTarget for this #GstGLMemory</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
          <parameter name="tex_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="295">the #GstGLFormat for this #GstGLMemory</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="296">the @GstAllocationParams to initialize with</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="297">the #GstVideoInfo for this #GstGLMemory</doc>
            <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
          </parameter>
          <parameter name="plane" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="298">the plane number (starting from 0) for this #GstGLMemory</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="valign"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="299">optional #GstVideoAlignment parameters</doc>
            <type name="GstVideo.VideoAlignment" c:type="GstVideoAlignment*"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="301">user data to call @notify with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="300">a #GDestroyNotify</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_pixels"
              c:identifier="gst_gl_memory_read_pixels"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="360">Reads the texture in #GstGLMemory into @read_pointer if no buffer is bound
to %GL_PIXEL_PACK_BUFFER.  Otherwise @read_pointer is the byte offset into
the currently bound %GL_PIXEL_PACK_BUFFER buffer to store the result of
glReadPixels.  See the OpenGL specification for glReadPixels for more
details.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="275"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="371">whether theread operation succeeded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="362">a #GstGLMemory</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </instance-parameter>
          <parameter name="read_pointer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="363">the data pointer to pass to glReadPixels</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="texsubimage"
              c:identifier="gst_gl_memory_texsubimage"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="516">See gst_gl_memory_read_pixels() for what @read_pointer signifies.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="278"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="518">a #GstGLMemory</doc>
            <type name="GLMemory" c:type="GstGLMemory*"/>
          </instance-parameter>
          <parameter name="read_pointer"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="519">the data pointer to pass to glTexSubImage</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <function name="init_once"
                c:identifier="gst_gl_memory_init_once"
                version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="1091">Initializes the GL Base Texture allocator. It is safe to call this function
multiple times.  This must be called before any other GstGLMemory operation.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="241"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="setup_buffer"
                c:identifier="gst_gl_memory_setup_buffer"
                version="1.8"
                introspectable="0">
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="294"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1437">whether the buffer was correctly setup</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="allocator" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1428">the @GstGLMemoryAllocator to allocate from</doc>
            <type name="GLMemoryAllocator" c:type="GstGLMemoryAllocator*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1429">a #GstBuffer to setup</doc>
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1430">the #GstGLVideoAllocationParams to allocate with</doc>
            <type name="GLVideoAllocationParams"
                  c:type="GstGLVideoAllocationParams*"/>
          </parameter>
          <parameter name="tex_formats"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1431">
    a list of #GstGLFormat's to allocate with.</doc>
            <array length="5" zero-terminated="0" c:type="GstGLFormat*">
              <type name="GLFormat" c:type="GstGLFormat"/>
            </array>
          </parameter>
          <parameter name="wrapped_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1433">
    a list of wrapped data pointers</doc>
            <array length="5" zero-terminated="0" c:type="gpointer*">
              <type name="gpointer"/>
            </array>
          </parameter>
          <parameter name="n_wrapped_pointers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1435">the number of elements in @tex_formats and @wrapped_data</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="GLMemoryAllocator"
           c:symbol-prefix="gl_memory_allocator"
           c:type="GstGLMemoryAllocator"
           parent="GLBaseMemoryAllocator"
           glib:type-name="GstGLMemoryAllocator"
           glib:get-type="gst_gl_memory_allocator_get_type"
           glib:type-struct="GLMemoryAllocatorClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemory.h"
           line="198">Opaque #GstGLMemoryAllocator struct</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                       line="229"/>
      <function name="get_default"
                c:identifier="gst_gl_memory_allocator_get_default"
                version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="302"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1520">the default #GstGLMemoryAllocator supported by
         @context</doc>
          <type name="GLMemoryAllocator" c:type="GstGLMemoryAllocator*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1518">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent" readable="0" private="1">
        <type name="GLBaseMemoryAllocator" c:type="GstGLBaseMemoryAllocator"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLMemoryAllocatorClass"
            c:type="GstGLMemoryAllocatorClass"
            glib:is-gtype-struct-for="GLMemoryAllocator">
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                       line="229"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GLBaseMemoryAllocatorClass"
              c:type="GstGLBaseMemoryAllocatorClass"/>
      </field>
      <field name="map">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="213">provide a custom map implementation</doc>
        <type name="GLBaseMemoryAllocatorMapFunction"
              c:type="GstGLBaseMemoryAllocatorMapFunction"/>
      </field>
      <field name="copy">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="214">provide a custom copy implementation</doc>
        <type name="GLBaseMemoryAllocatorCopyFunction"
              c:type="GstGLBaseMemoryAllocatorCopyFunction"/>
      </field>
      <field name="unmap">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="215">provide a custom unmap implementation</doc>
        <type name="GLBaseMemoryAllocatorUnmapFunction"
              c:type="GstGLBaseMemoryAllocatorUnmapFunction"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="GLMemoryEGL" c:type="GstGLMemoryEGL" disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="58"/>
    </record>
    <record name="GLMemoryEGLAllocator"
            c:type="GstGLMemoryEGLAllocator"
            disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="59"/>
    </record>
    <record name="GLMemoryEGLAllocatorClass"
            c:type="GstGLMemoryEGLAllocatorClass"
            disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="60"/>
    </record>
    <record name="GLMemoryPBO" c:type="GstGLMemoryPBO">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
           line="35">#GstGLMemoryPBO is created or wrapped through gst_gl_base_memory_alloc()
with #GstGLVideoAllocationParams.

Data is uploaded or downloaded from the GPU as is necessary.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
                       line="53"/>
      <field name="mem" readable="0" private="1">
        <type name="GLMemory" c:type="GstGLMemory"/>
      </field>
      <field name="pbo" readable="0" private="1">
        <type name="GLBuffer" c:type="GstGLBuffer*"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <method name="copy_into_texture"
              c:identifier="gst_gl_memory_pbo_copy_into_texture"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
             line="693">Copies @gl_mem into the texture specfified by @tex_id.  The format of @tex_id
is specified by @tex_format, @width and @height.

If @respecify is %TRUE, then the copy is performed in terms of the texture
data.  This is useful for splitting RGBA textures into RG or R textures or
vice versa. The requirement for this to succeed is that the backing texture
data must be the same size, i.e. say a RGBA8 texture is converted into a RG8
texture, then the RG texture must have twice as many pixels available for
output as the RGBA texture.

Otherwise, if @respecify is %FALSE, then the copy is performed per texel
using glCopyTexImage.  See the OpenGL specification for details on the
mappings between texture formats.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
               line="718">Whether the copy suceeded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
                 line="695">a #GstGLMemoryPBO</doc>
            <type name="GLMemoryPBO" c:type="GstGLMemoryPBO*"/>
          </instance-parameter>
          <parameter name="tex_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
                 line="696">the destination texture id</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
                 line="697">the destination #GstGLTextureTarget</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
          <parameter name="tex_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
                 line="698">the destination #GstGLFormat</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
                 line="699">width of @tex_id</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
                 line="700">height of @tex_id</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="stride" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
                 line="701">stride of the backing texture data</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="respecify" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
                 line="702">whether to copy the data or copy per texel</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_transfer"
              c:identifier="gst_gl_memory_pbo_download_transfer"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
             line="758">Transfer the texture data from the texture into the PBO if necessary.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
                 line="760">a #GstGLMemoryPBO</doc>
            <type name="GLMemoryPBO" c:type="GstGLMemoryPBO*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="upload_transfer"
              c:identifier="gst_gl_memory_pbo_upload_transfer"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
             line="792">Transfer the texture data from the PBO into the texture if necessary.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
                 line="794">a #GstGLMemoryPBO</doc>
            <type name="GLMemoryPBO" c:type="GstGLMemoryPBO*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="init_once" c:identifier="gst_gl_memory_pbo_init_once">
        <source-position filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
    </record>
    <class name="GLMemoryPBOAllocator"
           c:symbol-prefix="gl_memory_pbo_allocator"
           c:type="GstGLMemoryPBOAllocator"
           parent="GLMemoryAllocator"
           glib:type-name="GstGLMemoryPBOAllocator"
           glib:get-type="gst_gl_memory_pbo_allocator_get_type"
           glib:type-struct="GLMemoryPBOAllocatorClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
           line="82">Opaque #GstGLMemoryPBOAllocator struct</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
                       line="106"/>
      <field name="parent">
        <type name="GLMemoryAllocator" c:type="GstGLMemoryAllocator"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLMemoryPBOAllocatorClass"
            c:type="GstGLMemoryPBOAllocatorClass"
            glib:is-gtype-struct-for="GLMemoryPBOAllocator">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
           line="95">Only contains private data</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
                       line="106"/>
      <field name="parent_class">
        <type name="GLMemoryAllocatorClass"
              c:type="GstGLMemoryAllocatorClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="GLOverlayCompositor"
           c:symbol-prefix="gl_overlay_compositor"
           c:type="GstGLOverlayCompositor"
           parent="Gst.Object"
           glib:type-name="GstGLOverlayCompositor"
           glib:get-type="gst_gl_overlay_compositor_get_type"
           glib:type-struct="GLOverlayCompositorClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstgloverlaycompositor.h"
           line="39">Opaque #GstGLOverlayCompositor object</doc>
      <source-position filename="git/gst-libs/gst/gl/gstgloverlaycompositor.h"
                       line="73"/>
      <constructor name="new" c:identifier="gst_gl_overlay_compositor_new">
        <source-position filename="git/gst-libs/gst/gl/gstgloverlaycompositor.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="GLOverlayCompositor" c:type="GstGLOverlayCompositor*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="add_caps"
                c:identifier="gst_gl_overlay_compositor_add_caps">
        <source-position filename="git/gst-libs/gst/gl/gstgloverlaycompositor.h"
                         line="89"/>
        <return-value transfer-ownership="full">
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <parameter name="caps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </function>
      <method name="draw_overlays"
              c:identifier="gst_gl_overlay_compositor_draw_overlays">
        <source-position filename="git/gst-libs/gst/gl/gstgloverlaycompositor.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <type name="GLOverlayCompositor" c:type="GstGLOverlayCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free_overlays"
              c:identifier="gst_gl_overlay_compositor_free_overlays">
        <source-position filename="git/gst-libs/gst/gl/gstgloverlaycompositor.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <type name="GLOverlayCompositor" c:type="GstGLOverlayCompositor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="upload_overlays"
              c:identifier="gst_gl_overlay_compositor_upload_overlays">
        <source-position filename="git/gst-libs/gst/gl/gstgloverlaycompositor.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="compositor" transfer-ownership="none">
            <type name="GLOverlayCompositor" c:type="GstGLOverlayCompositor*"/>
          </instance-parameter>
          <parameter name="buf" transfer-ownership="none">
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <property name="yinvert" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="context" readable="0" private="1">
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="last_window_width" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="last_window_height" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="overlays" readable="0" private="1">
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="shader" readable="0" private="1">
        <type name="GLShader" c:type="GstGLShader*"/>
      </field>
      <field name="position_attrib" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="texcoord_attrib" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLOverlayCompositorClass"
            c:type="GstGLOverlayCompositorClass"
            glib:is-gtype-struct-for="GLOverlayCompositor">
      <source-position filename="git/gst-libs/gst/gl/gstgloverlaycompositor.h"
                       line="73"/>
      <field name="object_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <bitfield name="GLPlatform"
              glib:type-name="GstGLPlatform"
              glib:get-type="gst_gl_platform_get_type"
              c:type="GstGLPlatform">
      <member name="none"
              value="0"
              c:identifier="GST_GL_PLATFORM_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="81">no platform</doc>
      </member>
      <member name="egl"
              value="1"
              c:identifier="GST_GL_PLATFORM_EGL"
              glib:nick="egl">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="82">the EGL platform used primarily with the X11, wayland
                     and android window systems as well as on embedded Linux</doc>
      </member>
      <member name="glx"
              value="2"
              c:identifier="GST_GL_PLATFORM_GLX"
              glib:nick="glx">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="84">the GLX platform used primarily with the X11 window system</doc>
      </member>
      <member name="wgl"
              value="4"
              c:identifier="GST_GL_PLATFORM_WGL"
              glib:nick="wgl">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="85">the WGL platform used primarily on Windows</doc>
      </member>
      <member name="cgl"
              value="8"
              c:identifier="GST_GL_PLATFORM_CGL"
              glib:nick="cgl">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="86">the CGL platform used primarily on OS X</doc>
      </member>
      <member name="eagl"
              value="16"
              c:identifier="GST_GL_PLATFORM_EAGL"
              glib:nick="eagl">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="87">the EAGL platform used primarily on iOS</doc>
      </member>
      <member name="any"
              value="4294967295"
              c:identifier="GST_GL_PLATFORM_ANY"
              glib:nick="any">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.h"
             line="88">any OpenGL platform</doc>
      </member>
      <function name="from_string" c:identifier="gst_gl_platform_from_string">
        <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglapi.c"
               line="178">The #GstGLPlatform represented by @platform_s</doc>
          <type name="GLPlatform" c:type="GstGLPlatform"/>
        </return-value>
        <parameters>
          <parameter name="platform_s" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglapi.c"
                 line="176">a space seperated string of OpenGL platformss</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="gst_gl_platform_to_string">
        <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglapi.c"
               line="135">A space seperated string of the OpenGL platforms enabled in @platform</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="platform" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglapi.c"
                 line="133">a #GstGLPlatform to stringify</doc>
            <type name="GLPlatform" c:type="GstGLPlatform"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <record name="GLQuery" c:type="GstGLQuery" version="1.10">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglquery.c"
           line="21">A #GstGLQuery represents and holds an OpenGL query object.  Various types of
queries can be run or counters retrieved.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglquery.h" line="60"/>
      <field name="context" readable="0" private="1">
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="query_type" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="query_id" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="supported" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="start_called" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="debug" readable="0" private="1">
        <type name="GLAsyncDebug" c:type="GstGLAsyncDebug"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <method name="counter"
              c:identifier="gst_gl_query_counter"
              version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglquery.c"
             line="292">Record the result of a counter</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglquery.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="294">a #GstGLQuery</doc>
            <type name="GLQuery" c:type="GstGLQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="end" c:identifier="gst_gl_query_end" version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglquery.c"
             line="262">End counting the query</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglquery.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="264">a #GstGLQuery</doc>
            <type name="GLQuery" c:type="GstGLQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="gst_gl_query_free" version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglquery.c"
             line="214">Frees a #GstGLQuery</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglquery.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="216">a #GstGLQuery</doc>
            <type name="GLQuery" c:type="GstGLQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="gst_gl_query_init" version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglquery.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="127">a #GstGLQuery</doc>
            <type name="GLQuery" c:type="GstGLQuery*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="128">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="query_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="129">the #GstGLQueryType</doc>
            <type name="GLQueryType" c:type="GstGLQueryType"/>
          </parameter>
        </parameters>
      </method>
      <method name="result" c:identifier="gst_gl_query_result" version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglquery.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglquery.c"
               line="324">the result of the query</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="322">a #GstGLQuery</doc>
            <type name="GLQuery" c:type="GstGLQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="start" c:identifier="gst_gl_query_start" version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglquery.c"
             line="231">Start counting the query</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglquery.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="233">a #GstGLQuery</doc>
            <type name="GLQuery" c:type="GstGLQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unset" c:identifier="gst_gl_query_unset" version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglquery.c"
             line="162">Free any dynamically allocated resources</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglquery.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="164">a #GstGLQuery</doc>
            <type name="GLQuery" c:type="GstGLQuery*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="local_gl_context"
                c:identifier="gst_gl_query_local_gl_context">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglutils.c"
             line="563">Performs a GST_QUERY_CONTEXT query of type "gst.gl.local_context" on all
#GstPads in @element of @direction for the local OpenGL context used by
GStreamer elements.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglutils.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="574">whether @context_ptr contains a #GstGLContext</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglutils.c"
                 line="565">a #GstElement to query from</doc>
            <type name="Gst.Element" c:type="GstElement*"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglutils.c"
                 line="566">the #GstPadDirection to query</doc>
            <type name="Gst.PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="context_ptr"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglutils.c"
                 line="567">location containing the current and/or resulting
                     #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext**"/>
          </parameter>
        </parameters>
      </function>
      <function name="new"
                c:identifier="gst_gl_query_new"
                version="1.10"
                introspectable="0">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglquery.c"
             line="193">Free with gst_gl_query_free()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglquery.h"
                         line="69"/>
        <return-value>
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglquery.c"
               line="200">a new #GstGLQuery</doc>
          <type name="GLQuery" c:type="GstGLQuery*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="195">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="query_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglquery.c"
                 line="196">the #GstGLQueryType to create</doc>
            <type name="GLQueryType" c:type="GstGLQueryType"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <enumeration name="GLQueryType"
                 glib:type-name="GstGLQueryType"
                 glib:get-type="gst_gl_query_type_get_type"
                 c:type="GstGLQueryType">
      <member name="none"
              value="0"
              c:identifier="GST_GL_QUERY_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglquery.h"
             line="31">no query</doc>
      </member>
      <member name="time_elapsed"
              value="1"
              c:identifier="GST_GL_QUERY_TIME_ELAPSED"
              glib:nick="time-elapsed">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglquery.h"
             line="32">query the time elapsed</doc>
      </member>
      <member name="timestamp"
              value="2"
              c:identifier="GST_GL_QUERY_TIMESTAMP"
              glib:nick="timestamp">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglquery.h"
             line="33">query the current time</doc>
      </member>
    </enumeration>
    <record name="GLRenderbuffer" c:type="GstGLRenderbuffer" version="1.10">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
           line="33">GstGLRenderbuffer is a #GstGLBaseMemory subclass providing support for
OpenGL renderbuffers.

#GstGLRenderbuffer is created or wrapped through gst_gl_base_memory_alloc()
with #GstGLRenderbufferAllocationParams.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                       line="72"/>
      <field name="mem" readable="0" private="1">
        <type name="GLBaseMemory" c:type="GstGLBaseMemory"/>
      </field>
      <field name="renderbuffer_id" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
             line="49">the GL texture id for this memory</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="renderbuffer_format" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
             line="50">the texture type</doc>
        <type name="GLFormat" c:type="GstGLFormat"/>
      </field>
      <field name="width" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
             line="51">the width</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="height" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
             line="52">the height</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="renderbuffer_wrapped" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <method name="get_format"
              c:identifier="gst_gl_renderbuffer_get_format"
              version="1.12">
        <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
               line="274">the #GstGLFormat of @gl_mem</doc>
          <type name="GLFormat" c:type="GstGLFormat"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="272">a #GstGLRenderbuffer</doc>
            <type name="GLRenderbuffer" c:type="GstGLRenderbuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="gst_gl_renderbuffer_get_height"
              version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
               line="258">the configured height of @gl_mem</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="256">a #GstGLRenderbuffer</doc>
            <type name="GLRenderbuffer" c:type="GstGLRenderbuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="gst_gl_renderbuffer_get_id"
              version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
               line="290">the OpenGL renderbuffer handle of @gl_mem</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="288">a #GstGLRenderbuffer</doc>
            <type name="GLRenderbuffer" c:type="GstGLRenderbuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="gst_gl_renderbuffer_get_width"
              version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
               line="242">the configured width of @gl_mem</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="gl_mem" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="240">a #GstGLRenderbuffer</doc>
            <type name="GLRenderbuffer" c:type="GstGLRenderbuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="init_once"
                c:identifier="gst_gl_renderbuffer_init_once"
                version="1.10">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
             line="302">Initializes the GL Base Texture allocator. It is safe to call this function
multiple times.  This must be called before any other GstGLRenderbuffer operation.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
    </record>
    <record name="GLRenderbufferAllocationParams"
            c:type="GstGLRenderbufferAllocationParams"
            glib:type-name="GstGLRenderbufferAllocationParams"
            glib:get-type="gst_gl_renderbuffer_allocation_params_get_type"
            c:symbol-prefix="gl_renderbuffer_allocation_params">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
           line="107">Allocation parameters</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                       line="127"/>
      <field name="parent" readable="0" private="1">
        <type name="GLAllocationParams" c:type="GstGLAllocationParams"/>
      </field>
      <field name="renderbuffer_format" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
             line="109">the #GstGLFormat</doc>
        <type name="GLFormat" c:type="GstGLFormat"/>
      </field>
      <field name="width" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
             line="110">the width</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="height" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
             line="111">the height</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <constructor name="new"
                   c:identifier="gst_gl_renderbuffer_allocation_params_new"
                   version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                         line="130"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
               line="411">a new #GstGLRenderbufferAllocationParams for allocating #GstGLRenderbuffer's</doc>
          <type name="GLRenderbufferAllocationParams"
                c:type="GstGLRenderbufferAllocationParams*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="405">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="alloc_params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="406">the #GstAllocationParams for sysmem mappings of the texture</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="renderbuffer_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="409">the #GstGLFormat for the created textures</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="407">the width of the renderbuffer</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="408">the height of the renderbuffer</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_wrapped"
                   c:identifier="gst_gl_renderbuffer_allocation_params_new_wrapped"
                   version="1.10">
        <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                         line="137"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
               line="449">a new #GstGLRenderbufferAllocationParams for wrapping @gl_handle as a
         renderbuffer</doc>
          <type name="GLRenderbufferAllocationParams"
                c:type="GstGLRenderbufferAllocationParams*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="440">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="alloc_params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="441">the #GstAllocationParams for @tex_id</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="renderbuffer_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="444">the #GstGLFormat for @tex_id</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="442">the width of the renderbuffer</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="443">the height of the renderbuffer</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="gl_handle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="445">the GL handle to wrap</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="446">user data to call @notify with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
                 line="447">a #GDestroyNotify</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
    </record>
    <class name="GLRenderbufferAllocator"
           c:symbol-prefix="gl_renderbuffer_allocator"
           c:type="GstGLRenderbufferAllocator"
           parent="GLBaseMemoryAllocator"
           glib:type-name="GstGLRenderbufferAllocator"
           glib:get-type="gst_gl_renderbuffer_allocator_get_type"
           glib:type-struct="GLRenderbufferAllocatorClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
           line="74">Opaque #GstGLRenderbufferAllocator struct</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                       line="98"/>
      <field name="parent">
        <type name="GLBaseMemoryAllocator" c:type="GstGLBaseMemoryAllocator"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLRenderbufferAllocatorClass"
            c:type="GstGLRenderbufferAllocatorClass"
            glib:is-gtype-struct-for="GLRenderbufferAllocator">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
           line="87">The #GstGLRenderbufferAllocatorClass only contains private data</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                       line="98"/>
      <field name="parent_class">
        <type name="GLBaseMemoryAllocatorClass"
              c:type="GstGLBaseMemoryAllocatorClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="GLSLError"
                 version="1.8"
                 glib:type-name="GstGLSLError"
                 glib:get-type="gst_glsl_error_get_type"
                 c:type="GstGLSLError"
                 glib:error-domain="gst-glsl-error-quark">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglsl.h"
           line="39">Compilation stage that caused an error</doc>
      <member name="compile"
              value="0"
              c:identifier="GST_GLSL_ERROR_COMPILE"
              glib:nick="compile">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="41">Compilation error occured</doc>
      </member>
      <member name="link"
              value="1"
              c:identifier="GST_GLSL_ERROR_LINK"
              glib:nick="link">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="42">Link error occured</doc>
      </member>
      <member name="program"
              value="2"
              c:identifier="GST_GLSL_ERROR_PROGRAM"
              glib:nick="program">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="43">General program error occured</doc>
      </member>
      <function name="quark" c:identifier="gst_glsl_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <bitfield name="GLSLProfile"
              version="1.8"
              glib:type-name="GstGLSLProfile"
              glib:get-type="gst_glsl_profile_get_type"
              c:type="GstGLSLProfile">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglsl.h"
           line="101">GLSL profiles</doc>
      <member name="none"
              value="0"
              c:identifier="GST_GLSL_PROFILE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="103">no profile supported/available</doc>
      </member>
      <member name="es"
              value="1"
              c:identifier="GST_GLSL_PROFILE_ES"
              glib:nick="es">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="104">OpenGL|ES profile</doc>
      </member>
      <member name="core"
              value="2"
              c:identifier="GST_GLSL_PROFILE_CORE"
              glib:nick="core">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="105">OpenGL core profile</doc>
      </member>
      <member name="compatibility"
              value="4"
              c:identifier="GST_GLSL_PROFILE_COMPATIBILITY"
              glib:nick="compatibility">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="106">OpenGL compatibility profile</doc>
      </member>
      <member name="any"
              value="4294967295"
              c:identifier="GST_GLSL_PROFILE_ANY"
              glib:nick="any">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="107">any OpenGL/OpenGL|ES profile</doc>
      </member>
      <function name="from_string" c:identifier="gst_glsl_profile_from_string">
        <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="178">the #GstGLSLProfile of @string or %GST_GLSL_PROFILE_NONE on error</doc>
          <type name="GLSLProfile" c:type="GstGLSLProfile"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="176">a GLSL version string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="gst_glsl_profile_to_string">
        <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="136"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="152">the name for @profile or %NULL on error</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="150">a #GstGLSLProfile</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
        </parameters>
      </function>
    </bitfield>
    <class name="GLSLStage"
           c:symbol-prefix="glsl_stage"
           c:type="GstGLSLStage"
           parent="Gst.Object"
           glib:type-name="GstGLSLStage"
           glib:get-type="gst_glsl_stage_get_type"
           glib:type-struct="GLSLStageClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglslstage.c"
           line="44">#GstGLSLStage holds and represents a single OpenGL shader stage.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                       line="63"/>
      <constructor name="new" c:identifier="gst_glsl_stage_new" version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglslstage.c"
               line="252">a new #GstGLSLStage of the specified @type</doc>
          <type name="GLSLStage" c:type="GstGLSLStage*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="249">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="250">the GL enum shader stage type</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_default_fragment"
                   c:identifier="gst_glsl_stage_new_default_fragment">
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="GLSLStage" c:type="GstGLSLStage*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_default_vertex"
                   c:identifier="gst_glsl_stage_new_default_vertex">
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="GLSLStage" c:type="GstGLSLStage*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_string"
                   c:identifier="gst_glsl_stage_new_with_string"
                   version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglslstage.c"
               line="235">a new #GstGLSLStage of the specified @type</doc>
          <type name="GLSLStage" c:type="GstGLSLStage*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="229">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="230">the GL enum shader stage type</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="231">the #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="232">the #GstGLSLProfile</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="233">a shader string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_strings"
                   c:identifier="gst_glsl_stage_new_with_strings"
                   version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglslstage.c"
               line="196">a new #GstGLSLStage of the specified @type</doc>
          <type name="GLSLStage" c:type="GstGLSLStage*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="188">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="189">the GL enum shader stage type</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="190">the #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="191">the #GstGLSLProfile</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
          <parameter name="n_strings" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="192">the number of strings in @str</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="193">
    an array of strings concatted together to produce a shader</doc>
            <array length="4" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <method name="compile"
              c:identifier="gst_glsl_stage_compile"
              version="1.8"
              throws="1">
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglslstage.c"
               line="529">whether the compilation suceeded</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="526">a #GstGLSLStage</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_handle"
              c:identifier="gst_glsl_stage_get_handle"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglslstage.c"
               line="378">The GL handle for this shader stage</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="376">a #GstGLSLStage</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_profile"
              c:identifier="gst_glsl_stage_get_profile"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglslstage.c"
               line="411">The GLSL profile for the current shader stage</doc>
          <type name="GLSLProfile" c:type="GstGLSLProfile"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="409">a #GstGLSLStage</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_shader_type"
              c:identifier="gst_glsl_stage_get_shader_type"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglslstage.c"
               line="362">The GL shader type for this shader stage</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="360">a #GstGLSLStage</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="gst_glsl_stage_get_version"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglslstage.c"
               line="395">The GLSL version for the current shader stage</doc>
          <type name="GLSLVersion" c:type="GstGLSLVersion"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="393">a #GstGLSLStage</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_strings"
              c:identifier="gst_glsl_stage_set_strings"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglslstage.c"
             line="307">Replaces the current shader string with @str.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="309">a #GstGLSLStage</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </instance-parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="310">a #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="311">a #GstGLSLProfile</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
          <parameter name="n_strings" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="312">number of strings in @str</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglslstage.c"
                 line="313">a GLSL shader string</doc>
            <array length="2" zero-terminated="0" c:type="const gchar**">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <field name="parent" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="context" readable="0" private="1">
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLSLStagePrivate" c:type="GstGLSLStagePrivate*"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLSLStageClass"
            c:type="GstGLSLStageClass"
            glib:is-gtype-struct-for="GLSLStage">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglslstage.h"
           line="52">Opaque #GstGLSLStageClass struct</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglslstage.h"
                       line="63"/>
      <field name="parent" readable="0" private="1">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="GLSLStagePrivate" c:type="GstGLSLStagePrivate" disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="70"/>
    </record>
    <enumeration name="GLSLVersion"
                 version="1.8"
                 glib:type-name="GstGLSLVersion"
                 glib:get-type="gst_glsl_version_get_type"
                 c:type="GstGLSLVersion">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglsl.h"
           line="55">GLSL version list</doc>
      <member name="none"
              value="0"
              c:identifier="GST_GLSL_VERSION_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="57">no version</doc>
      </member>
      <member name="100"
              value="100"
              c:identifier="GST_GLSL_VERSION_100"
              glib:nick="100">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="58">version 100 (only valid for ES)</doc>
      </member>
      <member name="110"
              value="110"
              c:identifier="GST_GLSL_VERSION_110"
              glib:nick="110">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="59">version 110 (only valid for compatibility desktop GL)</doc>
      </member>
      <member name="120"
              value="120"
              c:identifier="GST_GLSL_VERSION_120"
              glib:nick="120">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="60">version 120 (only valid for compatibility desktop GL)</doc>
      </member>
      <member name="130"
              value="130"
              c:identifier="GST_GLSL_VERSION_130"
              glib:nick="130">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="61">version 130 (only valid for compatibility desktop GL)</doc>
      </member>
      <member name="140"
              value="140"
              c:identifier="GST_GLSL_VERSION_140"
              glib:nick="140">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="62">version 140 (only valid for compatibility desktop GL)</doc>
      </member>
      <member name="150"
              value="150"
              c:identifier="GST_GLSL_VERSION_150"
              glib:nick="150">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="63">version 150 (valid for compatibility/core desktop GL)</doc>
      </member>
      <member name="300"
              value="300"
              c:identifier="GST_GLSL_VERSION_300"
              glib:nick="300">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="64">version 300 (only valid for ES)</doc>
      </member>
      <member name="310"
              value="310"
              c:identifier="GST_GLSL_VERSION_310"
              glib:nick="310">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="65">version 310 (only valid for ES)</doc>
      </member>
      <member name="320"
              value="320"
              c:identifier="GST_GLSL_VERSION_320"
              glib:nick="320">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="66">version 320 (only valid for ES)</doc>
      </member>
      <member name="330"
              value="330"
              c:identifier="GST_GLSL_VERSION_330"
              glib:nick="330">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="67">version 330 (valid for compatibility/core desktop GL)</doc>
      </member>
      <member name="400"
              value="400"
              c:identifier="GST_GLSL_VERSION_400"
              glib:nick="400">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="68">version 400 (valid for compatibility/core desktop GL)</doc>
      </member>
      <member name="410"
              value="410"
              c:identifier="GST_GLSL_VERSION_410"
              glib:nick="410">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="69">version 410 (valid for compatibility/core desktop GL)</doc>
      </member>
      <member name="420"
              value="420"
              c:identifier="GST_GLSL_VERSION_420"
              glib:nick="420">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="70">version 420 (valid for compatibility/core desktop GL)</doc>
      </member>
      <member name="430"
              value="430"
              c:identifier="GST_GLSL_VERSION_430"
              glib:nick="430">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="71">version 430 (valid for compatibility/core desktop GL)</doc>
      </member>
      <member name="440"
              value="440"
              c:identifier="GST_GLSL_VERSION_440"
              glib:nick="440">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="72">version 440 (valid for compatibility/core desktop GL)</doc>
      </member>
      <member name="450"
              value="450"
              c:identifier="GST_GLSL_VERSION_450"
              glib:nick="450">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.h"
             line="73">version 450 (valid for compatibility/core desktop GL)</doc>
      </member>
      <function name="from_string" c:identifier="gst_glsl_version_from_string">
        <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="123">the #GstGLSLVersion of @string or %GST_GLSL_VERSION_NONE on error</doc>
          <type name="GLSLVersion" c:type="GstGLSLVersion"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="121">a GLSL version string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="profile_from_string"
                c:identifier="gst_glsl_version_profile_from_string">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.c"
             line="296">Note: this function expects either a #version GLSL preprocesser directive
or a valid GLSL version and/or profile.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="305">TRUE if a valid #version string was found, FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="298">a valid GLSL #version string</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="version_ret"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="299">resulting #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion*"/>
          </parameter>
          <parameter name="profile_ret"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="300">resulting #GstGLSLVersion</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile*"/>
          </parameter>
        </parameters>
      </function>
      <function name="profile_to_string"
                c:identifier="gst_glsl_version_profile_to_string">
        <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="139"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="235">the combined GLSL #version string for @version and @profile</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="232">a #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="233">a #GstGLSLVersion</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string" c:identifier="gst_glsl_version_to_string">
        <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="131"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="101">the name of @version or %NULL on error</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsl.c"
                 line="99">a #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="GLShader"
           c:symbol-prefix="gl_shader"
           c:type="GstGLShader"
           parent="Gst.Object"
           glib:type-name="GstGLShader"
           glib:get-type="gst_gl_shader_get_type"
           glib:type-struct="GLShaderClass">
      <source-position filename="git/gst-libs/gst/gl/gstglshader.h" line="54"/>
      <constructor name="new" c:identifier="gst_gl_shader_new">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="330">Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="336">a new empty @shader</doc>
          <type name="GLShader" c:type="GstGLShader*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="332">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_default"
                   c:identifier="gst_gl_shader_new_default"
                   version="1.8"
                   throws="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="344">Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="351">a default @shader or %NULL on failure</doc>
          <type name="GLShader" c:type="GstGLShader*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="346">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_link_with_stages"
                   c:identifier="gst_gl_shader_new_link_with_stages"
                   version="1.8"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="266">Each stage will attempt to be compiled and attached to @shader.  Then
the shader will be linked. On error, %NULL will be returned and @error will
contain the details of the error.

Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="61"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="278">a new @shader with the specified stages.</doc>
          <type name="GLShader" c:type="GstGLShader*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="268">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="269">a #GError</doc>
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="270">a NULL terminated list of #GstGLSLStage's</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_stages"
                   c:identifier="gst_gl_shader_new_with_stages"
                   version="1.8"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="302">Each stage will attempt to be compiled and attached to @shader.  On error,
%NULL will be returned and @error will contain the details of the error.

Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="59"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="313">a new @shader with the specified stages.</doc>
          <type name="GLShader" c:type="GstGLShader*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="304">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="305">a #GError</doc>
            <type name="GLib.Error" c:type="GError**"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="306">a NULL terminated list of #GstGLSLStage's</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <function name="string_fragment_external_oes_get_default"
                c:identifier="gst_gl_shader_string_fragment_external_oes_get_default"
                version="1.16">
        <source-position filename="git/gst-libs/gst/gl/gstglshaderstrings.h"
                         line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
               line="162">a passthrough shader string for copying an input external-oes
         texture to the output</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
                 line="158">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
                 line="159">a #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
                 line="160">a #GstGLSLProfile</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
        </parameters>
      </function>
      <function name="string_fragment_get_default"
                c:identifier="gst_gl_shader_string_fragment_get_default"
                version="1.16">
        <source-position filename="git/gst-libs/gst/gl/gstglshaderstrings.h"
                         line="53"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
               line="141">a passthrough shader string for copying an input texture to
         the output</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
                 line="137">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
                 line="138">a #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
                 line="139">a #GstGLSLProfile</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
        </parameters>
      </function>
      <function name="string_get_highest_precision"
                c:identifier="gst_gl_shader_string_get_highest_precision"
                version="1.16">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
             line="103">Generates a shader string that defines the precision of float types in
GLSL shaders.  This is particularly needed for fragment shaders in a
GLSL ES context where there is no default precision specified.

Practically, this will return the string 'precision mediump float'
or 'precision highp float' depending on if high precision floats are
determined to be supported.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshaderstrings.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
               line="117">a shader string defining the precision of float types based on
     @context, @version and @profile</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
                 line="105">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
                 line="106">a #GstGLSLVersion</doc>
            <type name="GLSLVersion" c:type="GstGLSLVersion"/>
          </parameter>
          <parameter name="profile" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshaderstrings.c"
                 line="107">a #GstGLSLProfile</doc>
            <type name="GLSLProfile" c:type="GstGLSLProfile"/>
          </parameter>
        </parameters>
      </function>
      <method name="attach" c:identifier="gst_gl_shader_attach" version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="564">Attaches @stage to @shader.  @stage must have been successfully compiled
with gst_glsl_stage_compile().

Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="574">whether @stage could be attached to @shader</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="566">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="567">a #GstGLSLStage to attach</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="attach_unlocked"
              c:identifier="gst_gl_shader_attach_unlocked"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="499">Attaches @stage to @shader.  @stage must have been successfully compiled
with gst_glsl_stage_compile().

Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="509">whether @stage could be attached to @shader</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="501">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="502">a #GstGLSLStage to attach</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="bind_attribute_location"
              c:identifier="gst_gl_shader_bind_attribute_location">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1288">Bind attribute @name to the specified location @index using
glBindAttributeLocation().</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="150"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1290">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1291">attribute index to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1292">name of the attribute</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="bind_frag_data_location"
              c:identifier="gst_gl_shader_bind_frag_data_location">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1311">Bind attribute @name to the specified location @index using
glBindFragDataLocation().</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1313">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1314">attribute index to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1315">name of the attribute</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="compile_attach_stage"
              c:identifier="gst_gl_shader_compile_attach_stage"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="593">Compiles @stage and attaches it to @shader.

Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="603">whether @stage could be compiled and attached to @shader</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="595">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="596">a #GstGLSLStage to attach</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="detach" c:identifier="gst_gl_shader_detach" version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="476">Detaches @stage from @shader.  @stage must have been successfully attached
to @shader with gst_gl_shader_attach() or gst_gl_shader_attach_unlocked().

Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="478">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="479">a #GstGLSLStage to attach</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="detach_unlocked"
              c:identifier="gst_gl_shader_detach_unlocked"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="419">Detaches @stage from @shader.  @stage must have been successfully attached
to @shader with gst_gl_shader_attach() or gst_gl_shader_attach_unlocked().

Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="421">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="422">a #GstGLSLStage to attach</doc>
            <type name="GLSLStage" c:type="GstGLSLStage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_location"
              c:identifier="gst_gl_shader_get_attribute_location">
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="148"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="1268">the attribute index for @name in @shader or -1 on failure</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1265">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1266">name of the attribute</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_program_handle"
              c:identifier="gst_gl_shader_get_program_handle"
              version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="401">the GL program handle for this shader</doc>
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="399">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_linked"
              c:identifier="gst_gl_shader_is_linked"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="363">Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="369">whether @shader has been successfully linked</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="365">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="link"
              c:identifier="gst_gl_shader_link"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="626">Links the current list of #GstGLSLStage's in @shader.

Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglshader.c"
               line="635">whether @shader could be linked together.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="628">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="release"
              c:identifier="gst_gl_shader_release"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="761">Releases the shader and stages.

Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="763">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="release_unlocked"
              c:identifier="gst_gl_shader_release_unlocked"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="724">Releases the shader and stages.

Note: must be called in the GL thread</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="726">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_uniform_1f"
              c:identifier="gst_gl_shader_set_uniform_1f">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="903">Perform glUniform1f() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="905">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="906">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="907">value to set</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_1fv"
              c:identifier="gst_gl_shader_set_uniform_1fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="914">Perform glUniform1fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="916">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="917">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="918">number of values to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="919">values to set</doc>
            <array length="1" zero-terminated="0" c:type="const gfloat*">
              <type name="gfloat" c:type="gfloat"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_1i"
              c:identifier="gst_gl_shader_set_uniform_1i">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="925">Perform glUniform1i() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="927">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="928">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="929">value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_1iv"
              c:identifier="gst_gl_shader_set_uniform_1iv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="936">Perform glUniform1iv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="938">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="939">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="940">number of values to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="941">values to set</doc>
            <array length="1" zero-terminated="0" c:type="const gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_2f"
              c:identifier="gst_gl_shader_set_uniform_2f">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="947">Perform glUniform2f() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="949">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="950">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="v0" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="951">first value to set</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="v1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="952">second value to set</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_2fv"
              c:identifier="gst_gl_shader_set_uniform_2fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="959">Perform glUniform2fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="961">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="962">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="963">number of values to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="964">values to set</doc>
            <array length="1" zero-terminated="0" c:type="const gfloat*">
              <type name="gfloat" c:type="gfloat"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_2i"
              c:identifier="gst_gl_shader_set_uniform_2i">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="970">Perform glUniform2i() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="972">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="973">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="v0" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="974">first value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="v1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="975">second value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_2iv"
              c:identifier="gst_gl_shader_set_uniform_2iv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="982">Perform glUniform2iv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="984">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="985">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="986">number of values to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="987">values to set</doc>
            <array length="1" zero-terminated="0" c:type="const gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_3f"
              c:identifier="gst_gl_shader_set_uniform_3f">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="993">Perform glUniform3f() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="995">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="996">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="v0" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="997">first value to set</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="v1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="998">second value to set</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="v2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="999">third value to set</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_3fv"
              c:identifier="gst_gl_shader_set_uniform_3fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1006">Perform glUniform3fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1008">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1009">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1010">number of values to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1011">values to set</doc>
            <array length="1" zero-terminated="0" c:type="const gfloat*">
              <type name="gfloat" c:type="gfloat"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_3i"
              c:identifier="gst_gl_shader_set_uniform_3i">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1017">Perform glUniform3i() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1019">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1020">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="v0" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1021">first value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="v1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1022">second value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="v2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1023">third value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_3iv"
              c:identifier="gst_gl_shader_set_uniform_3iv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1030">Perform glUniform3iv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1032">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1033">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1034">number of values to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1035">values to set</doc>
            <array length="1" zero-terminated="0" c:type="const gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_4f"
              c:identifier="gst_gl_shader_set_uniform_4f">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1041">Perform glUniform4f() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1043">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1044">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="v0" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1045">first value to set</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="v1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1046">second value to set</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="v2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1047">third value to set</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="v3" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1048">fourth value to set</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_4fv"
              c:identifier="gst_gl_shader_set_uniform_4fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1055">Perform glUniform4fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1057">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1058">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1059">number of values to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1060">values to set</doc>
            <array length="1" zero-terminated="0" c:type="const gfloat*">
              <type name="gfloat" c:type="gfloat"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_4i"
              c:identifier="gst_gl_shader_set_uniform_4i">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1066">Perform glUniform4i() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1068">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1069">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="v0" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1070">first value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="v1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1071">second value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="v2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1072">third value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="v3" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1073">fourth value to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_4iv"
              c:identifier="gst_gl_shader_set_uniform_4iv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1080">Perform glUniform4iv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1082">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1083">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1084">number of values to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1085">values to set</doc>
            <array length="1" zero-terminated="0" c:type="const gint*">
              <type name="gint" c:type="gint"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_matrix_2fv"
              c:identifier="gst_gl_shader_set_uniform_matrix_2fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1092">Perform glUniformMatrix2fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1094">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1095">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1096">number of 2x2 matrices to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="transpose" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1097">transpose the matrix</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1098">matrix to set</doc>
            <type name="gfloat" c:type="const gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_matrix_2x3fv"
              c:identifier="gst_gl_shader_set_uniform_matrix_2x3fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1149">Perform glUniformMatrix2x3fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1151">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1152">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1153">number of 2x3 matrices to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="transpose" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1154">transpose the matrix</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1155">values to set</doc>
            <type name="gfloat" c:type="const gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_matrix_2x4fv"
              c:identifier="gst_gl_shader_set_uniform_matrix_2x4fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1168">Perform glUniformMatrix2x4fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1170">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1171">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1172">number of 2x4 matrices to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="transpose" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1173">transpose the matrix</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1174">values to set</doc>
            <type name="gfloat" c:type="const gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_matrix_3fv"
              c:identifier="gst_gl_shader_set_uniform_matrix_3fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1111">Perform glUniformMatrix3fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1113">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1114">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1115">number of 3x3 matrices to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="transpose" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1116">transpose the matrix</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1117">values to set</doc>
            <type name="gfloat" c:type="const gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_matrix_3x2fv"
              c:identifier="gst_gl_shader_set_uniform_matrix_3x2fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1187">Perform glUniformMatrix3x2fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1189">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1190">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1191">number of 3x2 matrices to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="transpose" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1192">transpose the matrix</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1193">values to set</doc>
            <type name="gfloat" c:type="const gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_matrix_3x4fv"
              c:identifier="gst_gl_shader_set_uniform_matrix_3x4fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1206">Perform glUniformMatrix3x4fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1208">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1209">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1210">number of 3x4 matrices to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="transpose" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1211">transpose the matrix</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1212">values to set</doc>
            <type name="gfloat" c:type="const gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_matrix_4fv"
              c:identifier="gst_gl_shader_set_uniform_matrix_4fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1130">Perform glUniformMatrix4fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1132">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1133">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1134">number of 4x4 matrices to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="transpose" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1135">transpose the matrix</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1136">values to set</doc>
            <type name="gfloat" c:type="const gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_matrix_4x2fv"
              c:identifier="gst_gl_shader_set_uniform_matrix_4x2fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1225">Perform glUniformMatrix4x2fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1227">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1228">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1229">number of 4x2 matrices to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="transpose" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1230">transpose the matrix</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1231">values to set</doc>
            <type name="gfloat" c:type="const gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_matrix_4x3fv"
              c:identifier="gst_gl_shader_set_uniform_matrix_4x3fv">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="1244">Perform glUniformMatrix4x3fv() for @name on @shader</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1246">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1247">name of the uniform</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1248">number of 4x3 matrices to set</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="transpose" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1249">transpose the matrix</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="1250">values to set</doc>
            <type name="gfloat" c:type="const gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="use" c:identifier="gst_gl_shader_use">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglshader.c"
             line="781">Mark's @shader as being used for the next GL draw command.

Note: must be called in the GL thread and @shader must have been linked.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglshader.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="shader" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglshader.c"
                 line="783">a #GstGLShader</doc>
            <type name="GLShader" c:type="GstGLShader*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="linked" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="context">
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLShaderPrivate" c:type="GstGLShaderPrivate*"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLShaderClass"
            c:type="GstGLShaderClass"
            glib:is-gtype-struct-for="GLShader">
      <source-position filename="git/gst-libs/gst/gl/gstglshader.h" line="54"/>
      <field name="parent_class" readable="0" private="1">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
    </record>
    <record name="GLShaderPrivate" c:type="GstGLShaderPrivate" disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="74"/>
    </record>
    <enumeration name="GLStereoDownmix"
                 glib:type-name="GstGLStereoDownmix"
                 glib:get-type="gst_gl_stereo_downmix_get_type"
                 c:type="GstGLStereoDownmix">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglviewconvert.h"
           line="38">Output anaglyph type to generate when downmixing to mono</doc>
      <member name="green_magenta_dubois"
              value="0"
              c:identifier="GST_GL_STEREO_DOWNMIX_ANAGLYPH_GREEN_MAGENTA_DUBOIS"
              glib:nick="green-magenta-dubois">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.h"
             line="40">Dubois optimised Green-Magenta anaglyph</doc>
      </member>
      <member name="red_cyan_dubois"
              value="1"
              c:identifier="GST_GL_STEREO_DOWNMIX_ANAGLYPH_RED_CYAN_DUBOIS"
              glib:nick="red-cyan-dubois">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.h"
             line="41">Dubois optimised Red-Cyan anaglyph</doc>
      </member>
      <member name="amber_blue_dubois"
              value="2"
              c:identifier="GST_GL_STEREO_DOWNMIX_ANAGLYPH_AMBER_BLUE_DUBOIS"
              glib:nick="amber-blue-dubois">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.h"
             line="42">Dubois optimised Amber-Blue anaglyph</doc>
      </member>
    </enumeration>
    <record name="GLSyncMeta" c:type="GstGLSyncMeta">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
           line="21">#GstGLSyncMeta provides the ability to synchronize the OpenGL command stream
with the CPU or with other OpenGL contexts.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                       line="72"/>
      <field name="parent" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
             line="42">the parent #GstMeta</doc>
        <type name="Gst.Meta" c:type="GstMeta"/>
      </field>
      <field name="context" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
             line="43">the #GstGLContext used to allocate the meta</doc>
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="data" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
             line="44">a custom data pointer for the implementation</doc>
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="set_sync">
        <callback name="set_sync">
          <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                           line="63"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sync" transfer-ownership="none">
              <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_sync_gl">
        <callback name="set_sync_gl">
          <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                           line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sync" transfer-ownership="none">
              <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="wait">
        <callback name="wait">
          <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sync" transfer-ownership="none">
              <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="wait_gl">
        <callback name="wait_gl">
          <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sync" transfer-ownership="none">
              <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="wait_cpu">
        <callback name="wait_cpu">
          <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sync" transfer-ownership="none">
              <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="wait_cpu_gl">
        <callback name="wait_cpu_gl">
          <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sync" transfer-ownership="none">
              <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="copy">
        <callback name="copy">
          <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                           line="69"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="src" transfer-ownership="none">
              <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
            </parameter>
            <parameter name="sbuffer" transfer-ownership="none">
              <type name="Gst.Buffer" c:type="GstBuffer*"/>
            </parameter>
            <parameter name="dest" transfer-ownership="none">
              <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
            </parameter>
            <parameter name="dbuffer" transfer-ownership="none">
              <type name="Gst.Buffer" c:type="GstBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="free">
        <callback name="free">
          <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sync" transfer-ownership="none">
              <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="free_gl">
        <callback name="free_gl">
          <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sync" transfer-ownership="none">
              <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="GLContext" c:type="GstGLContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <method name="set_sync_point"
              c:identifier="gst_gl_sync_meta_set_sync_point"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
             line="192">Set a sync point to possibly wait on at a later time.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sync_meta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
                 line="194">a #GstGLSyncMeta</doc>
            <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
                 line="195">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="wait" c:identifier="gst_gl_sync_meta_wait" version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
             line="221">Insert a wait into @context's command stream ensuring all previous OpenGL
commands before @sync_meta have completed.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sync_meta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
                 line="223">a #GstGLSyncMeta</doc>
            <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
                 line="224">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="wait_cpu"
              c:identifier="gst_gl_sync_meta_wait_cpu"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
             line="250">Perform a wait so that the sync point has passed from the CPU's perspective
What that means, is that all GL operations changing CPU-visible data before
the sync point are now visible.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sync_meta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
                 line="252">a #GstGLSyncMeta</doc>
            <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
                 line="253">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <function name="get_info" c:identifier="gst_gl_sync_meta_get_info">
        <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="Gst.MetaInfo" c:type="const GstMetaInfo*"/>
        </return-value>
      </function>
    </record>
    <enumeration name="GLTextureTarget"
                 version="1.8"
                 glib:type-name="GstGLTextureTarget"
                 glib:get-type="gst_gl_texture_target_get_type"
                 c:type="GstGLTextureTarget">
      <member name="none"
              value="0"
              c:identifier="GST_GL_TEXTURE_TARGET_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgl_enums.h"
             line="26">no texture target</doc>
      </member>
      <member name="2d"
              value="1"
              c:identifier="GST_GL_TEXTURE_TARGET_2D"
              glib:nick="2d">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgl_enums.h"
             line="27">2D texture target</doc>
      </member>
      <member name="rectangle"
              value="2"
              c:identifier="GST_GL_TEXTURE_TARGET_RECTANGLE"
              glib:nick="rectangle">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgl_enums.h"
             line="28">rectangle texture target</doc>
      </member>
      <member name="external_oes"
              value="3"
              c:identifier="GST_GL_TEXTURE_TARGET_EXTERNAL_OES"
              glib:nick="external-oes">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgl_enums.h"
             line="29">external oes texture target</doc>
      </member>
      <function name="from_gl" c:identifier="gst_gl_texture_target_from_gl">
        <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                         line="156"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="495">the #GstGLTextureTarget that's equiavalant to @target or
         %GST_GL_TEXTURE_TARGET_NONE</doc>
          <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
        </return-value>
        <parameters>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="493">an OpenGL texture binding target</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_string"
                c:identifier="gst_gl_texture_target_from_string">
        <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                         line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="450">the #GstGLTextureTarget represented by @str or
         %GST_GL_TEXTURE_TARGET_NONE</doc>
          <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="448">a string equivalant to one of the GST_GL_TEXTURE_TARGET_*_STR values</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_buffer_pool_option"
                c:identifier="gst_gl_texture_target_to_buffer_pool_option">
        <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                         line="158"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="517">a string representing the @GstBufferPoolOption specified by @target</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="515">a #GstGLTextureTarget</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_gl" c:identifier="gst_gl_texture_target_to_gl">
        <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="473">the OpenGL value for binding the @target with glBindTexture() and
         similar functions or 0</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="471">a #GstGLTextureTarget</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
        </parameters>
      </function>
      <function name="to_string"
                c:identifier="gst_gl_texture_target_to_string">
        <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                         line="152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="429">the stringified version of @target or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglformat.c"
                 line="427">a #GstGLTextureTarget</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <class name="GLUpload"
           c:symbol-prefix="gl_upload"
           c:type="GstGLUpload"
           parent="Gst.Object"
           glib:type-name="GstGLUpload"
           glib:get-type="gst_gl_upload_get_type"
           glib:type-struct="GLUploadClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglupload.c"
           line="46">#GstGLUpload is an object that uploads data from system memory into GL textures.

A #GstGLUpload can be created with gst_gl_upload_new()</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglupload.h" line="85"/>
      <constructor name="new" c:identifier="gst_gl_upload_new">
        <source-position filename="git/gst-libs/gst/gl/gstglupload.h"
                         line="91"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglupload.c"
               line="1722">a new #GstGLUpload object</doc>
          <type name="GLUpload" c:type="GstGLUpload*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1720">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="get_input_template_caps"
                c:identifier="gst_gl_upload_get_input_template_caps">
        <source-position filename="git/gst-libs/gst/gl/gstglupload.h"
                         line="88"/>
        <return-value transfer-ownership="full">
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </return-value>
      </function>
      <method name="get_caps" c:identifier="gst_gl_upload_get_caps">
        <source-position filename="git/gst-libs/gst/gl/gstglupload.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="upload" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1906">a #GstGLUpload</doc>
            <type name="GLUpload" c:type="GstGLUpload*"/>
          </instance-parameter>
          <parameter name="in_caps"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1907">the input #GstCaps</doc>
            <type name="Gst.Caps" c:type="GstCaps**"/>
          </parameter>
          <parameter name="out_caps"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1908">the output #GstCaps</doc>
            <type name="Gst.Caps" c:type="GstCaps**"/>
          </parameter>
        </parameters>
      </method>
      <method name="perform_with_buffer"
              c:identifier="gst_gl_upload_perform_with_buffer">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglupload.c"
             line="1959">Uploads @buffer using the transformation specified by
gst_gl_upload_set_caps() creating a new #GstBuffer in @outbuf_ptr.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglupload.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglupload.c"
               line="1968">whether the upload was successful</doc>
          <type name="GLUploadReturn" c:type="GstGLUploadReturn"/>
        </return-value>
        <parameters>
          <instance-parameter name="upload" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1961">a #GstGLUpload</doc>
            <type name="GLUpload" c:type="GstGLUpload*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1962">input #GstBuffer</doc>
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
          <parameter name="outbuf_ptr"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1963">resulting #GstBuffer</doc>
            <type name="Gst.Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </method>
      <method name="propose_allocation"
              c:identifier="gst_gl_upload_propose_allocation">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglupload.c"
             line="1837">Adds the required allocation parameters to support uploading.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglupload.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="upload" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1839">a #GstGLUpload</doc>
            <type name="GLUpload" c:type="GstGLUpload*"/>
          </instance-parameter>
          <parameter name="decide_query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1840">a #GstQuery from a decide allocation</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
          <parameter name="query" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1841">the proposed allocation query</doc>
            <type name="Gst.Query" c:type="GstQuery*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_caps" c:identifier="gst_gl_upload_set_caps">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglupload.c"
             line="1881">Initializes @upload with the information required for upload.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglupload.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglupload.c"
               line="1889">whether @in_caps and @out_caps could be set on @upload</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="upload" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1883">a #GstGLUpload</doc>
            <type name="GLUpload" c:type="GstGLUpload*"/>
          </instance-parameter>
          <parameter name="in_caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1884">input #GstCaps</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="out_caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglupload.c"
                 line="1885">output #GstCaps</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_context" c:identifier="gst_gl_upload_set_context">
        <source-position filename="git/gst-libs/gst/gl/gstglupload.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="upload" transfer-ownership="none">
            <type name="GLUpload" c:type="GstGLUpload*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transform_caps"
              c:identifier="gst_gl_upload_transform_caps">
        <source-position filename="git/gst-libs/gst/gl/gstglupload.h"
                         line="98"/>
        <return-value transfer-ownership="full">
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <instance-parameter name="upload" transfer-ownership="none">
            <type name="GLUpload" c:type="GstGLUpload*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="Gst.PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="filter" transfer-ownership="none">
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="context">
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLUploadPrivate" c:type="GstGLUploadPrivate*"/>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLUploadClass"
            c:type="GstGLUploadClass"
            glib:is-gtype-struct-for="GLUpload">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglupload.h"
           line="74">The #GstGLUploadClass struct only contains private data</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglupload.h" line="85"/>
      <field name="object_class">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="GLUploadPrivate" c:type="GstGLUploadPrivate" disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="79"/>
    </record>
    <enumeration name="GLUploadReturn"
                 glib:type-name="GstGLUploadReturn"
                 glib:get-type="gst_gl_upload_return_get_type"
                 c:type="GstGLUploadReturn">
      <member name="done"
              value="1"
              c:identifier="GST_GL_UPLOAD_DONE"
              glib:nick="done">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglupload.h"
             line="41">No further processing required</doc>
      </member>
      <member name="error"
              value="-1"
              c:identifier="GST_GL_UPLOAD_ERROR"
              glib:nick="error">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglupload.h"
             line="42">An unspecified error occured</doc>
      </member>
      <member name="unsupported"
              value="-2"
              c:identifier="GST_GL_UPLOAD_UNSUPPORTED"
              glib:nick="unsupported">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglupload.h"
             line="43">The configuration is unsupported.</doc>
      </member>
      <member name="reconfigure"
              value="-3"
              c:identifier="GST_GL_UPLOAD_RECONFIGURE"
              glib:nick="reconfigure">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglupload.h"
             line="44">This element requires a reconfiguration.</doc>
      </member>
      <member name="unshared_gl_context"
              value="-100"
              c:identifier="GST_GL_UPLOAD_UNSHARED_GL_CONTEXT"
              glib:nick="unshared-gl-context">
      </member>
    </enumeration>
    <record name="GLVideoAllocationParams"
            c:type="GstGLVideoAllocationParams"
            glib:type-name="GstGLVideoAllocationParams"
            glib:get-type="gst_gl_video_allocation_params_get_type"
            c:symbol-prefix="gl_video_allocation_params">
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                       line="127"/>
      <field name="parent" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="108">the parent #GstGLAllocationParams structure</doc>
        <type name="GLAllocationParams" c:type="GstGLAllocationParams"/>
      </field>
      <field name="v_info" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="109">the #GstVideoInfo to allocate</doc>
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
      </field>
      <field name="plane" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="110">the video plane index to allocate</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="valign" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="111">the #GstVideoAlignment to align the system representation to (may be %NULL for the default)</doc>
        <type name="GstVideo.VideoAlignment" c:type="GstVideoAlignment*"/>
      </field>
      <field name="target" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="112">the #GstGLTextureTarget to allocate</doc>
        <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
      </field>
      <field name="tex_format" writable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.h"
             line="113">the #GstGLFormat to allocate</doc>
        <type name="GLFormat" c:type="GstGLFormat"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <constructor name="new"
                   c:identifier="gst_gl_video_allocation_params_new"
                   version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="147"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1228">a new #GstGLVideoAllocationParams for allocating #GstGLMemory's</doc>
          <type name="GLVideoAllocationParams"
                c:type="GstGLVideoAllocationParams*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1220">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="alloc_params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1221">the #GstAllocationParams for sysmem mappings of the texture</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="v_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1222">the #GstVideoInfo for the texture</doc>
            <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
          </parameter>
          <parameter name="plane" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1223">the video plane of @v_info to allocate</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="valign"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1224">any #GstVideoAlignment applied to symem mappings of the texture</doc>
            <type name="GstVideo.VideoAlignment" c:type="GstVideoAlignment*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1225">the #GstGLTextureTarget for the created textures</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
          <parameter name="tex_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1226">the #GstGLFormat for the created textures</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_wrapped_data"
                   c:identifier="gst_gl_video_allocation_params_new_wrapped_data"
                   version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="155"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1269">a new #GstGLVideoAllocationParams for wrapping @wrapped_data</doc>
          <type name="GLVideoAllocationParams"
                c:type="GstGLVideoAllocationParams*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1258">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="alloc_params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1259">the #GstAllocationParams for @wrapped_data</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="v_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1260">the #GstVideoInfo for @wrapped_data</doc>
            <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
          </parameter>
          <parameter name="plane" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1261">the video plane @wrapped_data represents</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="valign"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1262">any #GstVideoAlignment applied to symem mappings of @wrapped_data</doc>
            <type name="GstVideo.VideoAlignment" c:type="GstVideoAlignment*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1263">the #GstGLTextureTarget for @wrapped_data</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
          <parameter name="tex_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1264">the #GstGLFormat for @wrapped_data</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="wrapped_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1265">the data pointer to wrap</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1266">user data to call @notify with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1267">a #GDestroyNotify</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_wrapped_gl_handle"
                   c:identifier="gst_gl_video_allocation_params_new_wrapped_gl_handle"
                   version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="1299">@gl_handle is defined by the specific OpenGL handle being wrapped
For #GstGLMemory and #GstGLMemoryPBO it is an OpenGL texture id.
Other memory types may define it to require a different type of parameter.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="179"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1316">a new #GstGLVideoAllocationParams for wrapping @gl_handle</doc>
          <type name="GLVideoAllocationParams"
                c:type="GstGLVideoAllocationParams*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1301">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="alloc_params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1302">the #GstAllocationParams for @tex_id</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="v_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1303">the #GstVideoInfo for @tex_id</doc>
            <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
          </parameter>
          <parameter name="plane" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1304">the video plane @tex_id represents</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="valign"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1305">any #GstVideoAlignment applied to symem mappings of @tex_id</doc>
            <type name="GstVideo.VideoAlignment" c:type="GstVideoAlignment*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1306">the #GstGLTextureTarget for @tex_id</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
          <parameter name="tex_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1307">the #GstGLFormat for @tex_id</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="gl_handle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1308">the GL handle to wrap</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1309">user data to call @notify with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1310">a #GDestroyNotify</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_wrapped_texture"
                   c:identifier="gst_gl_video_allocation_params_new_wrapped_texture"
                   version="1.8">
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="167"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1359">a new #GstGLVideoAllocationParams for wrapping @tex_id</doc>
          <type name="GLVideoAllocationParams"
                c:type="GstGLVideoAllocationParams*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1348">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="alloc_params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1349">the #GstAllocationParams for @tex_id</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="v_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1350">the #GstVideoInfo for @tex_id</doc>
            <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
          </parameter>
          <parameter name="plane" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1351">the video plane @tex_id represents</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="valign"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1352">any #GstVideoAlignment applied to symem mappings of @tex_id</doc>
            <type name="GstVideo.VideoAlignment" c:type="GstVideoAlignment*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1353">the #GstGLTextureTarget for @tex_id</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
          <parameter name="tex_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1354">the #GstGLFormat for @tex_id</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="tex_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1355">the GL texture to wrap</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1356">user data to call @notify with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1357">a #GDestroyNotify</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy_data"
              c:identifier="gst_gl_video_allocation_params_copy_data"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="1393">Copy and set any dynamically allocated resources in @dest_vid.  Intended
for subclass usage only to chain up at the end of a subclass copy function.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="195"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="src_vid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1395">source #GstGLVideoAllocationParams to copy from</doc>
            <type name="GLVideoAllocationParams"
                  c:type="GstGLVideoAllocationParams*"/>
          </instance-parameter>
          <parameter name="dest_vid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1396">destination #GstGLVideoAllocationParams to copy into</doc>
            <type name="GLVideoAllocationParams"
                  c:type="GstGLVideoAllocationParams*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free_data"
              c:identifier="gst_gl_video_allocation_params_free_data"
              version="1.8">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="1375">Unset and free any dynamically allocated resources.  Intended for subclass
usage only to chain up at the end of a subclass free function.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="192"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1377">a #GstGLVideoAllocationParams</doc>
            <type name="GLVideoAllocationParams"
                  c:type="GstGLVideoAllocationParams*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init_full"
              c:identifier="gst_gl_video_allocation_params_init_full"
              version="1.8"
              introspectable="0">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="1155">Intended for subclass usage</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1176">initializes @params with the parameters specified</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1157">a #GstGLVideoAllocationParams to initialize</doc>
            <type name="GLVideoAllocationParams"
                  c:type="GstGLVideoAllocationParams*"/>
          </instance-parameter>
          <parameter name="struct_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1158">the size of the struct in @params</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="alloc_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1159">some allocation flags</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="copy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1160">a copy function</doc>
            <type name="GLAllocationParamsCopyFunc"
                  c:type="GstGLAllocationParamsCopyFunc"/>
          </parameter>
          <parameter name="free"
                     transfer-ownership="none"
                     scope="notified"
                     closure="13"
                     destroy="14">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1161">a free function</doc>
            <type name="GLAllocationParamsFreeFunc"
                  c:type="GstGLAllocationParamsFreeFunc"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1162">a #GstGLContext</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
          <parameter name="alloc_params"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1163">the #GstAllocationParams for @wrapped_data</doc>
            <type name="Gst.AllocationParams" c:type="GstAllocationParams*"/>
          </parameter>
          <parameter name="v_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1164">the #GstVideoInfo for @wrapped_data</doc>
            <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
          </parameter>
          <parameter name="plane" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1165">the video plane @wrapped_data represents</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="valign"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1166">any #GstVideoAlignment applied to symem mappings of @wrapped_data</doc>
            <type name="GstVideo.VideoAlignment" c:type="GstVideoAlignment*"/>
          </parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1167">the #GstGLTextureTarget</doc>
            <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
          </parameter>
          <parameter name="tex_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1168">the #GstGLFormat</doc>
            <type name="GLFormat" c:type="GstGLFormat"/>
          </parameter>
          <parameter name="wrapped_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1169">the optional data pointer to wrap</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="gl_handle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1170">the optional OpenGL handle to wrap or 0</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1171">user data to call @notify with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglmemory.c"
                 line="1172">a #GDestroyNotify</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <class name="GLViewConvert"
           c:symbol-prefix="gl_view_convert"
           c:type="GstGLViewConvert"
           parent="Gst.Object"
           glib:type-name="GstGLViewConvert"
           glib:get-type="gst_gl_view_convert_get_type"
           glib:type-struct="GLViewConvertClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglviewconvert.c"
           line="23">Convert stereoscopic/multiview video using fragment shaders.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                       line="109"/>
      <constructor name="new"
                   c:identifier="gst_gl_view_convert_new"
                   version="1.6">
        <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                         line="114"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglviewconvert.c"
               line="312">a new #GstGLViewConvert</doc>
          <type name="GLViewConvert" c:type="GstGLViewConvert*"/>
        </return-value>
      </constructor>
      <method name="fixate_caps"
              c:identifier="gst_gl_view_convert_fixate_caps"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.c"
             line="1233">Provides an implementation of #GstBaseTransformClass.fixate_caps()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                         line="122"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglviewconvert.c"
               line="1242">the fixated #GstCaps</doc>
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <instance-parameter name="viewconvert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1235">a #GstGLViewConvert</doc>
            <type name="GLViewConvert" c:type="GstGLViewConvert*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1236">a #GstPadDirection</doc>
            <type name="Gst.PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1237">the #GstCaps of @direction</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="othercaps" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1238">the #GstCaps to fixate</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_output"
              c:identifier="gst_gl_view_convert_get_output"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.c"
             line="2247">Retrieve the processed output buffer placing the output in @outbuf_ptr.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglviewconvert.c"
               line="2254">a #GstFlowReturn</doc>
          <type name="Gst.FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <instance-parameter name="viewconvert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="2249">a #GstGLViewConvert</doc>
            <type name="GLViewConvert" c:type="GstGLViewConvert*"/>
          </instance-parameter>
          <parameter name="outbuf_ptr"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="2250">a #GstBuffer</doc>
            <type name="Gst.Buffer" c:type="GstBuffer**"/>
          </parameter>
        </parameters>
      </method>
      <method name="perform"
              c:identifier="gst_gl_view_convert_perform"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.c"
             line="1408">Converts the data contained by @inbuf using the formats specified by the
#GstCaps passed to gst_gl_view_convert_set_caps()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                         line="132"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglviewconvert.c"
               line="1416">a converted #GstBuffer or %NULL</doc>
          <type name="Gst.Buffer" c:type="GstBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="viewconvert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1410">a #GstGLViewConvert</doc>
            <type name="GLViewConvert" c:type="GstGLViewConvert*"/>
          </instance-parameter>
          <parameter name="inbuf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1411">the #GstGLMemory filled #GstBuffer to convert</doc>
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset"
              c:identifier="gst_gl_view_convert_reset"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.c"
             line="1326">Reset @viewconvert to the default state.  Further operation will require
setting the caps with gst_gl_view_convert_set_caps().</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="viewconvert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1328">a #GstGLViewConvert</doc>
            <type name="GLViewConvert" c:type="GstGLViewConvert*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_caps"
              c:identifier="gst_gl_view_convert_set_caps"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.c"
             line="394">Initializes @viewconvert with the information required for conversion.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="viewconvert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="396">a #GstGLViewConvert</doc>
            <type name="GLViewConvert" c:type="GstGLViewConvert*"/>
          </instance-parameter>
          <parameter name="in_caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="397">input #GstCaps</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="out_caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="398">output #GstCaps</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_context"
              c:identifier="gst_gl_view_convert_set_context"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.c"
             line="327">Set @context on @viewconvert</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="viewconvert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="329">a #GstGLViewConvert</doc>
            <type name="GLViewConvert" c:type="GstGLViewConvert*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="330">the #GstGLContext to set</doc>
            <type name="GLContext" c:type="GstGLContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="submit_input_buffer"
              c:identifier="gst_gl_view_convert_submit_input_buffer"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.c"
             line="2202">Submit @input to be processed by @viewconvert</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglviewconvert.c"
               line="2210">a #GstFlowReturn</doc>
          <type name="Gst.FlowReturn" c:type="GstFlowReturn"/>
        </return-value>
        <parameters>
          <instance-parameter name="viewconvert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="2204">a #GstGLViewConvert</doc>
            <type name="GLViewConvert" c:type="GstGLViewConvert*"/>
          </instance-parameter>
          <parameter name="is_discont" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="2205">true if we have a discontinuity</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="input" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="2206">a #GstBuffer</doc>
            <type name="Gst.Buffer" c:type="GstBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transform_caps"
              c:identifier="gst_gl_view_convert_transform_caps"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglviewconvert.c"
             line="1043">Provides an implementation of #GstBaseTransformClass.transform_caps()</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                         line="119"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglviewconvert.c"
               line="1052">the converted #GstCaps</doc>
          <type name="Gst.Caps" c:type="GstCaps*"/>
        </return-value>
        <parameters>
          <instance-parameter name="viewconvert" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1045">a #GstGLViewConvert</doc>
            <type name="GLViewConvert" c:type="GstGLViewConvert*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1046">a #GstPadDirection</doc>
            <type name="Gst.PadDirection" c:type="GstPadDirection"/>
          </parameter>
          <parameter name="caps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1047">the #GstCaps to transform</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglviewconvert.c"
                 line="1048">a set of filter #GstCaps</doc>
            <type name="Gst.Caps" c:type="GstCaps*"/>
          </parameter>
        </parameters>
      </method>
      <property name="downmix-mode" writable="1" transfer-ownership="none">
        <type name="GLStereoDownmix"/>
      </property>
      <property name="input-flags-override"
                writable="1"
                transfer-ownership="none">
        <type name="GstVideo.VideoMultiviewFlags"/>
      </property>
      <property name="input-mode-override"
                writable="1"
                transfer-ownership="none">
        <type name="GstVideo.VideoMultiviewMode"/>
      </property>
      <property name="output-flags-override"
                writable="1"
                transfer-ownership="none">
        <type name="GstVideo.VideoMultiviewFlags"/>
      </property>
      <property name="output-mode-override"
                writable="1"
                transfer-ownership="none">
        <type name="GstVideo.VideoMultiviewMode"/>
      </property>
      <field name="object">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="context">
        <type name="GLContext" c:type="GstGLContext*"/>
      </field>
      <field name="shader">
        <type name="GLShader" c:type="GstGLShader*"/>
      </field>
      <field name="input_mode_override">
        <type name="GstVideo.VideoMultiviewMode"
              c:type="GstVideoMultiviewMode"/>
      </field>
      <field name="input_flags_override">
        <type name="GstVideo.VideoMultiviewFlags"
              c:type="GstVideoMultiviewFlags"/>
      </field>
      <field name="output_mode_override">
        <type name="GstVideo.VideoMultiviewMode"
              c:type="GstVideoMultiviewMode"/>
      </field>
      <field name="output_flags_override">
        <type name="GstVideo.VideoMultiviewFlags"
              c:type="GstVideoMultiviewFlags"/>
      </field>
      <field name="downmix_mode">
        <type name="GLStereoDownmix" c:type="GstGLStereoDownmix"/>
      </field>
      <field name="in_info">
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
      <field name="out_info">
        <type name="GstVideo.VideoInfo" c:type="GstVideoInfo"/>
      </field>
      <field name="from_texture_target">
        <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
      </field>
      <field name="to_texture_target">
        <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
      </field>
      <field name="caps_passthrough">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="initted">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="reconfigure">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="fbo">
        <type name="GLFramebuffer" c:type="GstGLFramebuffer*"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLViewConvertPrivate" c:type="GstGLViewConvertPrivate*"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLViewConvertClass"
            c:type="GstGLViewConvertClass"
            glib:is-gtype-struct-for="GLViewConvert">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglviewconvert.h"
           line="98">Opaque #GstGLViewConvertClass struct</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                       line="109"/>
      <field name="object_class" readable="0" private="1">
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="GLViewConvertPrivate"
            c:type="GstGLViewConvertPrivate"
            disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="98"/>
    </record>
    <class name="GLWindow"
           c:symbol-prefix="gl_window"
           c:type="GstGLWindow"
           parent="Gst.Object"
           abstract="1"
           glib:type-name="GstGLWindow"
           glib:get-type="gst_gl_window_get_type"
           glib:type-struct="GLWindowClass">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglwindow.c"
           line="21">GstGLWindow represents a window that elements can render into.  A window can
either be a user visible window (onscreen) or hidden (offscreen).</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                       line="177"/>
      <constructor name="new" c:identifier="gst_gl_window_new" version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="180"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglwindow.c"
               line="232">a new #GstGLWindow using @display's connection</doc>
          <type name="GLWindow" c:type="GstGLWindow*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="230">a #GstGLDisplay</doc>
            <type name="GLDisplay" c:type="GstGLDisplay*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="close">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="167"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="controls_viewport"
                      invoker="controls_viewport"
                      version="1.16">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="992">Checks if @window controls the GL viewport.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="173"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglwindow.c"
               line="998">%TRUE if @window controls the GL viewport, otherwise %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="994">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="draw" invoker="draw" version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="424">Redraw the window contents.  Implementations should invoke the draw callback.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="426">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_display" invoker="get_display" version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglwindow.c"
               line="781">the windowing system display handle for this @window</doc>
          <type name="guintptr" c:type="guintptr"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="779">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_window_handle"
                      invoker="get_window_handle"
                      version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglwindow.c"
               line="801">the window handle we are currently rendering into</doc>
          <type name="guintptr" c:type="guintptr"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="799">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_events" invoker="handle_events">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="867">Tell a @window that it should handle events from the window system. These
events are forwarded upstream as navigation events. In some window systems
events are not propagated in the window hierarchy if a client is listening
for them. This method allows you to disable events handling completely
from the @window.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="869">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="handle_events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="870">a #gboolean indicating if events should be handled or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open" throws="1">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="166"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="queue_resize" invoker="queue_resize">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="929">Queue resizing of @window.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="172"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="931">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="quit" invoker="quit" version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="531">Quit the runloop's execution.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="162"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="533">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="run" invoker="run" version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="504">Start the execution of the runloop.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="506">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="send_message" invoker="send_message" version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="604">Invoke @callback with data on the window thread.  @callback is guarenteed to
have executed when this function returns.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="606">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="607">function to invoke</doc>
            <type name="GLWindowCB" c:type="GstGLWindowCB"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="608">data to invoke @callback with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="send_message_async"
                      invoker="send_message_async"
                      version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="664">Invoke @callback with @data on the window thread.  The callback may not
have been executed when this function returns.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="666">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="667">function to invoke</doc>
            <type name="GLWindowCB" c:type="GstGLWindowCB"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="668">data to invoke @callback with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="669">called when @data is not needed anymore</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_preferred_size"
                      invoker="set_preferred_size"
                      version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="449">Set the preferred width and height of the window.  Implementations are free
to ignore this information.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="169"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="451">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="452">new preferred width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="453">new preferred height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_render_rectangle"
                      invoker="set_render_rectangle">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="890">Tell a @window that it should render into a specific region of the window
according to the #GstVideoOverlay interface.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglwindow.c"
               line="901">whether the specified region could be set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="892">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="893">x position</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="894">y position</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="895">width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="896">height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_window_handle"
                      invoker="set_window_handle"
                      version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="364">Sets the window that this @window should render into.  Some implementations
require this to be called with a valid handle before drawing can commence.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="158"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="366">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="367">handle to the window</doc>
            <type name="guintptr" c:type="guintptr"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show" invoker="show" version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="472">Present the window to the screen.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="170"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="474">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="controls_viewport"
              c:identifier="gst_gl_window_controls_viewport"
              version="1.16">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="992">Checks if @window controls the GL viewport.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="257"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglwindow.c"
               line="998">%TRUE if @window controls the GL viewport, otherwise %FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="994">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="draw" c:identifier="gst_gl_window_draw" version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="424">Redraw the window contents.  Implementations should invoke the draw callback.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="239"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="426">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_context"
              c:identifier="gst_gl_window_get_context"
              version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="264"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglwindow.c"
               line="821">the #GstGLContext associated with this @window</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="819">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display"
              c:identifier="gst_gl_window_get_display"
              version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="266"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglwindow.c"
               line="781">the windowing system display handle for this @window</doc>
          <type name="guintptr" c:type="guintptr"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="779">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_surface_dimensions"
              c:identifier="gst_gl_window_get_surface_dimensions"
              version="1.6">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="247"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="835">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="836">resulting surface width</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="837">resulting surface height</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_window_handle"
              c:identifier="gst_gl_window_get_window_handle"
              version="1.4">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="202"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglwindow.c"
               line="801">the window handle we are currently rendering into</doc>
          <type name="guintptr" c:type="guintptr"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="799">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="handle_events" c:identifier="gst_gl_window_handle_events">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="867">Tell a @window that it should handle events from the window system. These
events are forwarded upstream as navigation events. In some window systems
events are not propagated in the window hierarchy if a client is listening
for them. This method allows you to disable events handling completely
from the @window.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="221"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="869">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="handle_events" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="870">a #gboolean indicating if events should be handled or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_resize" c:identifier="gst_gl_window_queue_resize">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="929">Queue resizing of @window.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="237"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="931">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="quit" c:identifier="gst_gl_window_quit" version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="531">Quit the runloop's execution.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="208"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="533">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="resize" c:identifier="gst_gl_window_resize">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="963">Resize @window to the given @width and @height.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="261"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="965">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="966">new width</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="967">new height</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="run" c:identifier="gst_gl_window_run" version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="504">Start the execution of the runloop.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="206"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="506">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="send_key_event"
              c:identifier="gst_gl_window_send_key_event">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="225"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="event_type" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="key_str" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_message"
              c:identifier="gst_gl_window_send_message"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="604">Invoke @callback with data on the window thread.  @callback is guarenteed to
have executed when this function returns.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="210"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="606">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="607">function to invoke</doc>
            <type name="GLWindowCB" c:type="GstGLWindowCB"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="608">data to invoke @callback with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_message_async"
              c:identifier="gst_gl_window_send_message_async"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="664">Invoke @callback with @data on the window thread.  The callback may not
have been executed when this function returns.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="214"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="666">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="667">function to invoke</doc>
            <type name="GLWindowCB" c:type="GstGLWindowCB"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="668">data to invoke @callback with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="669">called when @data is not needed anymore</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_mouse_event"
              c:identifier="gst_gl_window_send_mouse_event">
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="229"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="event_type" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="button" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="posx" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="posy" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_close_callback"
              c:identifier="gst_gl_window_set_close_callback"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="748">Sets the callback called when the window is about to close.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="194"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="750">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="751">function to invoke</doc>
            <type name="GLWindowCB" c:type="GstGLWindowCB"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="752">data to invoke @callback with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_notify"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="753">called when @data is not needed any more</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_draw_callback"
              c:identifier="gst_gl_window_set_draw_callback"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="690">Sets the draw callback called everytime gst_gl_window_draw() is called</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="184"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="692">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="693">function to invoke</doc>
            <type name="GLWindowCB" c:type="GstGLWindowCB"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="694">data to invoke @callback with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_notify"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="695">called when @data is not needed any more</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_preferred_size"
              c:identifier="gst_gl_window_set_preferred_size"
              version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="449">Set the preferred width and height of the window.  Implementations are free
to ignore this information.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="243"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="451">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="452">new preferred width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="453">new preferred height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_render_rectangle"
              c:identifier="gst_gl_window_set_render_rectangle">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="890">Tell a @window that it should render into a specific region of the window
according to the #GstVideoOverlay interface.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="251"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglwindow.c"
               line="901">whether the specified region could be set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="892">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="893">x position</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="894">y position</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="895">width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="896">height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_resize_callback"
              c:identifier="gst_gl_window_set_resize_callback"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="719">Sets the resize callback called everytime a resize of the window occurs.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="189"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="721">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="722">function to invoke</doc>
            <type name="GLWindowResizeCB" c:type="GstGLWindowResizeCB"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="723">data to invoke @callback with</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_notify"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="724">called when @data is not needed any more</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_window_handle"
              c:identifier="gst_gl_window_set_window_handle"
              version="1.4">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="364">Sets the window that this @window should render into.  Some implementations
require this to be called with a valid handle before drawing can commence.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="200"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="366">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="367">handle to the window</doc>
            <type name="guintptr" c:type="guintptr"/>
          </parameter>
        </parameters>
      </method>
      <method name="show" c:identifier="gst_gl_window_show" version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="472">Present the window to the screen.</doc>
        <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                         line="241"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="474">a #GstGLWindow</doc>
            <type name="GLWindow" c:type="GstGLWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent" readable="0" private="1">
        <type name="Gst.Object" c:type="GstObject"/>
      </field>
      <field name="lock" readable="0" private="1">
        <type name="GLib.Mutex" c:type="GMutex"/>
      </field>
      <field name="display" readable="0" private="1">
        <type name="GLDisplay" c:type="GstGLDisplay*"/>
      </field>
      <field name="context_ref" readable="0" private="1">
        <type name="GObject.WeakRef" c:type="GWeakRef"/>
      </field>
      <field name="is_drawing" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="draw" readable="0" private="1">
        <type name="GLWindowCB" c:type="GstGLWindowCB"/>
      </field>
      <field name="draw_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="draw_notify" readable="0" private="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="close" readable="0" private="1">
        <type name="GLWindowCB" c:type="GstGLWindowCB"/>
      </field>
      <field name="close_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="close_notify" readable="0" private="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="resize" readable="0" private="1">
        <type name="GLWindowResizeCB" c:type="GstGLWindowResizeCB"/>
      </field>
      <field name="resize_data" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="resize_notify" readable="0" private="1">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="queue_resize" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="main_context" readable="0" private="1">
        <type name="GLib.MainContext" c:type="GMainContext*"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GLWindowPrivate" c:type="GstGLWindowPrivate*"/>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
      <glib:signal name="key-event" when="last" version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="210">Will be emitted when a key event is received by the GstGLwindow.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="213">the name of the event</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="214">the id of the key pressed</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mouse-event" when="last" version="1.6">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.c"
             line="193">Will be emitted when a mouse event is received by the GstGLwindow.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="196">the name of the event</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="197">the id of the button</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="198">the x coordinate of the mouse event</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="199">the y coordinate of the mouse event</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <callback name="GLWindowCB" c:type="GstGLWindowCB">
      <source-position filename="git/gst-libs/gst/gl/gstglwindow.h" line="70"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="GLWindowClass"
            c:type="GstGLWindowClass"
            glib:is-gtype-struct-for="GLWindow">
      <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                       line="177"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.h"
             line="129">Parent class</doc>
        <type name="Gst.ObjectClass" c:type="GstObjectClass"/>
      </field>
      <field name="get_display">
        <callback name="get_display">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="157"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="781">the windowing system display handle for this @window</doc>
            <type name="guintptr" c:type="guintptr"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="779">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_window_handle">
        <callback name="set_window_handle">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="158"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="366">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
            <parameter name="handle" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="367">handle to the window</doc>
              <type name="guintptr" c:type="guintptr"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_window_handle">
        <callback name="get_window_handle">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="159"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="801">the window handle we are currently rendering into</doc>
            <type name="guintptr" c:type="guintptr"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="799">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="draw">
        <callback name="draw">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="160"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="426">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="run">
        <callback name="run">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="161"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="506">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="quit">
        <callback name="quit">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="162"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="533">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="send_message">
        <callback name="send_message">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="163"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="606">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       scope="async"
                       closure="2">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="607">function to invoke</doc>
              <type name="GLWindowCB" c:type="GstGLWindowCB"/>
            </parameter>
            <parameter name="data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="608">data to invoke @callback with</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="send_message_async">
        <callback name="send_message_async">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="164"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="666">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       scope="notified"
                       closure="2"
                       destroy="3">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="667">function to invoke</doc>
              <type name="GLWindowCB" c:type="GstGLWindowCB"/>
            </parameter>
            <parameter name="data"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="668">data to invoke @callback with</doc>
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
            <parameter name="destroy" transfer-ownership="none" scope="async">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="669">called when @data is not needed anymore</doc>
              <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open">
        <callback name="open" throws="1">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="166"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close">
        <callback name="close">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="167"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_events">
        <callback name="handle_events">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="168"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="869">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
            <parameter name="handle_events" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="870">a #gboolean indicating if events should be handled or not.</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_preferred_size">
        <callback name="set_preferred_size">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="169"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="451">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="452">new preferred width</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="453">new preferred height</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show">
        <callback name="show">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="170"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="474">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_render_rectangle">
        <callback name="set_render_rectangle">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="171"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="901">whether the specified region could be set</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="892">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="893">x position</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="894">y position</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="895">width</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="896">height</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="queue_resize">
        <callback name="queue_resize">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="172"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="931">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="controls_viewport">
        <callback name="controls_viewport">
          <source-position filename="git/gst-libs/gst/gl/gstglwindow.h"
                           line="173"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="git/gst-libs/gst/gl/gstglwindow.c"
                 line="998">%TRUE if @window controls the GL viewport, otherwise %FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="window" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="git/gst-libs/gst/gl/gstglwindow.c"
                   line="994">a #GstGLWindow</doc>
              <type name="GLWindow" c:type="GstGLWindow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_reserved" readable="0" private="1">
        <array zero-terminated="0" fixed-size="3">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="GLWindowError"
                 glib:type-name="GstGLWindowError"
                 glib:get-type="gst_gl_window_error_get_type"
                 c:type="GstGLWindowError"
                 glib:error-domain="gst-gl-window-error-quark">
      <member name="failed"
              value="0"
              c:identifier="GST_GL_WINDOW_ERROR_FAILED"
              glib:nick="failed">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.h"
             line="59">failed for a unspecified reason</doc>
      </member>
      <member name="old_libs"
              value="1"
              c:identifier="GST_GL_WINDOW_ERROR_OLD_LIBS"
              glib:nick="old-libs">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.h"
             line="60">the implementation is too old</doc>
      </member>
      <member name="resource_unavailable"
              value="2"
              c:identifier="GST_GL_WINDOW_ERROR_RESOURCE_UNAVAILABLE"
              glib:nick="resource-unavailable">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglwindow.h"
             line="61">no such resource was found</doc>
      </member>
      <function name="quark" c:identifier="gst_gl_window_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="GLWindowPrivate" c:type="GstGLWindowPrivate" disguised="1">
      <source-position filename="git/gst-libs/gst/gl/gstgl_fwd.h" line="39"/>
    </record>
    <callback name="GLWindowResizeCB" c:type="GstGLWindowResizeCB">
      <source-position filename="git/gst-libs/gst/gl/gstglwindow.h" line="71"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="width" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="height" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </callback>
    <constant name="GL_ALLOCATION_PARAMS_ALLOC_FLAG_ALLOC"
              value="1"
              c:type="GST_GL_ALLOCATION_PARAMS_ALLOC_FLAG_ALLOC">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="154">GL Allocation flag indicating that the implementation should allocate the
necessary resources.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="160"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GL_ALLOCATION_PARAMS_ALLOC_FLAG_BUFFER"
              value="16"
              c:type="GST_GL_ALLOCATION_PARAMS_ALLOC_FLAG_BUFFER">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbuffer.h"
           line="63">GL allocation flag indicating the allocation of a GL buffer.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h" line="68"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GL_ALLOCATION_PARAMS_ALLOC_FLAG_USER"
              value="65536"
              c:type="GST_GL_ALLOCATION_PARAMS_ALLOC_FLAG_USER">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="176">Values &gt;= than #GST_GL_ALLOCATION_PARAMS_ALLOC_FLAG_USER can be used for
user-defined purposes.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="182"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GL_ALLOCATION_PARAMS_ALLOC_FLAG_VIDEO"
              value="8"
              c:type="GST_GL_ALLOCATION_PARAMS_ALLOC_FLAG_VIDEO">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemory.h"
           line="99">GL allocation flag indicating the allocation of 2D video frames</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                       line="101"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GL_ALLOCATION_PARAMS_ALLOC_FLAG_WRAP_GPU_HANDLE"
              value="4"
              c:type="GST_GL_ALLOCATION_PARAMS_ALLOC_FLAG_WRAP_GPU_HANDLE">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="169">GL Allocation flag for using the provided GPU handle as storage.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="174"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GL_ALLOCATION_PARAMS_ALLOC_FLAG_WRAP_SYSMEM"
              value="2"
              c:type="GST_GL_ALLOCATION_PARAMS_ALLOC_FLAG_WRAP_SYSMEM">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="162">GL Allocation flag for using the provided system memory data as storage.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="167"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GL_API_GLES1_NAME"
              value="gles1"
              c:type="GST_GL_API_GLES1_NAME">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglapi.h"
           line="65">The name for %GST_GL_API_GLES1 used in various places</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="70"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_API_GLES2_NAME"
              value="gles2"
              c:type="GST_GL_API_GLES2_NAME">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglapi.h"
           line="72">The name for %GST_GL_API_GLES2 used in various places</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="77"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_API_OPENGL3_NAME"
              value="opengl3"
              c:type="GST_GL_API_OPENGL3_NAME">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglapi.h"
           line="58">The name for %GST_GL_API_OPENGL3 used in various places</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="63"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_API_OPENGL_NAME"
              value="opengl"
              c:type="GST_GL_API_OPENGL_NAME">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglapi.h"
           line="51">The name for %GST_GL_API_OPENGL used in various places</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="56"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_BASE_MEMORY_ALLOCATOR_NAME"
              value="GLBaseMemory"
              c:type="GST_GL_BASE_MEMORY_ALLOCATOR_NAME"
              version="1.8">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="381">The name of the GL buffer allocator</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="388"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_BUFFER_ALLOCATOR_NAME"
              value="GLBuffer"
              c:type="GST_GL_BUFFER_ALLOCATOR_NAME">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbuffer.h"
           line="127">The name of the GL buffer allocator</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h"
                       line="132"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_COLOR_CONVERT_FORMATS"
              value="{ RGBA, RGB, RGBx, BGR, BGRx, BGRA, xRGB, xBGR, ARGB, ABGR, Y444, I420, YV12, Y42B, Y41B, NV12, NV21, YUY2, UYVY, AYUV, VUYA, GRAY8, GRAY16_LE, GRAY16_BE, RGB16, BGR16, ARGB64 }"
              c:type="GST_GL_COLOR_CONVERT_FORMATS">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
           line="85">The currently supported formats that can be converted</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
                       line="90"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_COLOR_CONVERT_VIDEO_CAPS"
              value="video/x-raw("
              c:type="GST_GL_COLOR_CONVERT_VIDEO_CAPS">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
           line="95">The currently supported #GstCaps that can be converted</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglcolorconvert.h"
                       line="97"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_CONTEXT_TYPE_CGL"
              value="gst.gl.context.CGL"
              c:type="GST_GL_CONTEXT_TYPE_CGL">
      <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                       line="60"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_CONTEXT_TYPE_EAGL"
              value="gst.gl.context.EAGL"
              c:type="GST_GL_CONTEXT_TYPE_EAGL">
      <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                       line="64"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_CONTEXT_TYPE_EGL"
              value="gst.gl.context.EGL"
              c:type="GST_GL_CONTEXT_TYPE_EGL">
      <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                       line="62"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_CONTEXT_TYPE_GLX"
              value="gst.gl.context.GLX"
              c:type="GST_GL_CONTEXT_TYPE_GLX">
      <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                       line="61"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_CONTEXT_TYPE_WGL"
              value="gst.gl.context.WGL"
              c:type="GST_GL_CONTEXT_TYPE_WGL">
      <source-position filename="git/gst-libs/gst/gl/gstglcontext.h"
                       line="63"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_DISPLAY_CONTEXT_TYPE"
              value="gst.gl.GLDisplay"
              c:type="GST_GL_DISPLAY_CONTEXT_TYPE">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstgldisplay.h"
           line="121">The name used in #GstContext queries for requesting a #GstGLDisplay</doc>
      <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                       line="126"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_DISPLAY_EGL_NAME"
              value="gst.gl.display.egl"
              c:type="GST_GL_DISPLAY_EGL_NAME">
      <source-position filename="git/gst-libs/gst/gl/egl/gstgldisplay_egl.h"
                       line="78"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_MEMORY_ALLOCATOR_NAME"
              value="GLMemory"
              c:type="GST_GL_MEMORY_ALLOCATOR_NAME">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemory.h"
           line="233">The name of the GL memory allocator</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                       line="235"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_MEMORY_PBO_ALLOCATOR_NAME"
              value="GLMemoryPBO"
              c:type="GST_GL_MEMORY_PBO_ALLOCATOR_NAME">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
           line="55">The name of the GL Memory PBO allocator</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
                       line="60"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_MEMORY_VIDEO_FORMATS_STR"
              value="{ RGBA, BGRA, RGBx, BGRx, ARGB, ABGR, xRGB, xBGR, RGB, BGR, RGB16, BGR16, AYUV, VUYA, I420, YV12, NV12, NV21, YUY2, UYVY, Y41B, Y42B, Y444, GRAY8, GRAY16_LE, GRAY16_BE, ARGB64 }"
              c:type="GST_GL_MEMORY_VIDEO_FORMATS_STR">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemory.h"
           line="48">List of video formats that are supported by #GstGLMemory</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h" line="53"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_RENDERBUFFER_ALLOCATOR_NAME"
              value="GLRenderbuffer"
              c:type="GST_GL_RENDERBUFFER_ALLOCATOR_NAME">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
           line="40">The name of the GL renderbuffer allocator</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                       line="45"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_TEXTURE_TARGET_2D_STR"
              value="2D"
              c:type="GST_GL_TEXTURE_TARGET_2D_STR">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglformat.h"
           line="29">String used for %GST_GL_TEXTURE_TARGET_2D in things like caps values</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h" line="34"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_TEXTURE_TARGET_EXTERNAL_OES_STR"
              value="external-oes"
              c:type="GST_GL_TEXTURE_TARGET_EXTERNAL_OES_STR">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglformat.h"
           line="43">String used for %GST_GL_TEXTURE_TARGET_EXTERNAL_OES in things like caps values</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h" line="48"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="GL_TEXTURE_TARGET_RECTANGLE_STR"
              value="rectangle"
              c:type="GST_GL_TEXTURE_TARGET_RECTANGLE_STR">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglformat.h"
           line="36">String used for %GST_GL_TEXTURE_TARGET_RECTANGLE in things like caps values</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h" line="41"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="MAP_GL" value="131072" c:type="GST_MAP_GL">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.h"
           line="86">Flag indicating that we should map the GL object instead of to system memory.

Combining #GST_MAP_GL with #GST_MAP_WRITE has the same semantics as though
you are writing to OpenGL. Conversely, combining #GST_MAP_GL with
#GST_MAP_READ has the same semantics as though you are reading from OpenGL.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="95"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function name="buffer_add_gl_sync_meta"
              c:identifier="gst_buffer_add_gl_sync_meta"
              version="1.6">
      <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                       line="82"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
             line="163">the #GstGLSyncMeta added to #GstBuffer</doc>
        <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
               line="160">a #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
               line="161">a #GstBuffer</doc>
          <type name="Gst.Buffer" c:type="GstBuffer*"/>
        </parameter>
      </parameters>
    </function>
    <function name="buffer_add_gl_sync_meta_full"
              c:identifier="gst_buffer_add_gl_sync_meta_full"
              version="1.8">
      <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                       line="84"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
             line="133">the #GstGLSyncMeta added to #GstBuffer</doc>
        <type name="GLSyncMeta" c:type="GstGLSyncMeta*"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
               line="129">a #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
               line="130">a #GstBuffer</doc>
          <type name="Gst.Buffer" c:type="GstBuffer*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsyncmeta.c"
               line="131">sync data to hold</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="buffer_pool_config_get_gl_allocation_params"
              c:identifier="gst_buffer_pool_config_get_gl_allocation_params">
      <source-position filename="git/gst-libs/gst/gl/gstglbufferpool.h"
                       line="73"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbufferpool.c"
             line="386">the currently set #GstGLAllocationParams or %NULL</doc>
        <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbufferpool.c"
               line="384">a buffer pool config</doc>
          <type name="Gst.Structure" c:type="GstStructure*"/>
        </parameter>
      </parameters>
    </function>
    <function name="buffer_pool_config_set_gl_allocation_params"
              c:identifier="gst_buffer_pool_config_set_gl_allocation_params">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbufferpool.c"
           line="400">Sets @params on @config</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbufferpool.h"
                       line="75"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="config" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbufferpool.c"
               line="402">a buffer pool config</doc>
          <type name="Gst.Structure" c:type="GstStructure*"/>
        </parameter>
        <parameter name="params" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbufferpool.c"
               line="403">a #GstGLAllocationParams</doc>
          <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_get_gl_display"
              c:identifier="gst_context_get_gl_display"
              version="1.4">
      <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                       line="130"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldisplay.c"
             line="466">Whether @display was in @context</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="463">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="display"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="464">resulting #GstGLDisplay</doc>
          <type name="GLDisplay" c:type="GstGLDisplay**"/>
        </parameter>
      </parameters>
    </function>
    <function name="context_set_gl_display"
              c:identifier="gst_context_set_gl_display"
              version="1.4">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstgldisplay.c"
           line="435">Sets @display on @context</doc>
      <source-position filename="git/gst-libs/gst/gl/gstgldisplay.h"
                       line="128"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="437">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="display" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldisplay.c"
               line="438">resulting #GstGLDisplay</doc>
          <type name="GLDisplay" c:type="GstGLDisplay*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_api_from_string"
              c:identifier="gst_gl_api_from_string"
              moved-to="GLAPI.from_string">
      <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="105"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.c"
             line="93">The #GstGLAPI represented by @api_s</doc>
        <type name="GLAPI" c:type="GstGLAPI"/>
      </return-value>
      <parameters>
        <parameter name="api_s" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglapi.c"
               line="91">a space seperated string of OpenGL apis</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_api_to_string"
              c:identifier="gst_gl_api_to_string"
              moved-to="GLAPI.to_string">
      <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="103"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.c"
             line="40">A space seperated string of the OpenGL api's enabled in @api</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="api" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglapi.c"
               line="38">a #GstGLAPI to stringify</doc>
          <type name="GLAPI" c:type="GstGLAPI"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_async_debug_new"
              c:identifier="gst_gl_async_debug_new"
              moved-to="GLAsyncDebug.new"
              version="1.8"
              introspectable="0">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstgldebug.c"
           line="168">Free with gst_gl_async_debug_free()</doc>
      <source-position filename="git/gst-libs/gst/gl/gstgldebug.h" line="57"/>
      <return-value>
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstgldebug.c"
             line="173">a new #GstGLAsyncDebug</doc>
        <type name="GLAsyncDebug" c:type="GstGLAsyncDebug*"/>
      </return-value>
    </function>
    <function name="gl_base_memory_alloc"
              c:identifier="gst_gl_base_memory_alloc"
              moved-to="GLBaseMemory.alloc"
              version="1.8">
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="416"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.c"
             line="746">a new #GstGLBaseMemory from @allocator with the requested @params.</doc>
        <type name="GLBaseMemory" c:type="GstGLBaseMemory*"/>
      </return-value>
      <parameters>
        <parameter name="allocator" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.c"
               line="743">a #GstGLBaseMemoryAllocator</doc>
          <type name="GLBaseMemoryAllocator"
                c:type="GstGLBaseMemoryAllocator*"/>
        </parameter>
        <parameter name="params" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.c"
               line="744">the #GstGLAllocationParams to allocate the memory with</doc>
          <type name="GLAllocationParams" c:type="GstGLAllocationParams*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_base_memory_error_quark"
              c:identifier="gst_gl_base_memory_error_quark"
              moved-to="GLBaseMemoryError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="gl_base_memory_init_once"
              c:identifier="gst_gl_base_memory_init_once"
              moved-to="GLBaseMemory.init_once"
              version="1.8">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbasememory.c"
           line="489">Initializes the GL Base Memory allocator. It is safe to call this function
multiple times.  This must be called before any other GstGLBaseMemory operation.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="391"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="gl_buffer_init_once"
              c:identifier="gst_gl_buffer_init_once"
              moved-to="GLBuffer.init_once"
              version="1.8">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglbuffer.c"
           line="447">Initializes the GL Buffer allocator. It is safe to call this function
multiple times.  This must be called before any other #GstGLBuffer operation.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h"
                       line="135"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="gl_check_extension" c:identifier="gst_gl_check_extension">
      <source-position filename="git/gst-libs/gst/gl/gstglfeature.h"
                       line="58"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglfeature.c"
             line="53">whether @name is in the space seperated list of @ext</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglfeature.c"
               line="50">the extension to search for</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="ext" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglfeature.c"
               line="51">the list of possible extensions</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_context_error_quark"
              c:identifier="gst_gl_context_error_quark"
              moved-to="GLContextError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="gl_element_propagate_display_context"
              c:identifier="gst_gl_element_propagate_display_context">
      <source-position filename="git/gst-libs/gst/gl/gstglutils.h" line="45"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="display" transfer-ownership="none">
          <type name="GLDisplay" c:type="GstGLDisplay*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_ensure_element_data"
              c:identifier="gst_gl_ensure_element_data">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglutils.c"
           line="246">Perform the steps necessary for retrieving a #GstGLDisplay and (optionally)
an application provided #GstGLContext from the surrounding elements or from
the application using the #GstContext mechanism.

If the contents of @display_ptr or @other_context_ptr are not %NULL, then no
#GstContext query is necessary for #GstGLDisplay or #GstGLContext retrieval
or is performed.

This performs #GstContext queries (if necessary) for a winsys display
connection with %GST_GL_DISPLAY_CONTEXT_TYPE, "gst.x11.display.handle", and
"GstWaylandDisplayHandleContextType" stopping after the first successful
retrieval.

This also performs a #GstContext query (if necessary) for an optional
application provided #GstGLContext using the name "gst.gl.app_context".
The returned #GstGLContext will be shared with a GStreamer created OpenGL context.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglutils.h" line="32"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglutils.c"
             line="269">whether a #GstGLDisplay exists in @display_ptr</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="248">the #GstElement running the query</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="display_ptr"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="249">the resulting #GstGLDisplay</doc>
          <type name="GLDisplay" c:type="GstGLDisplay**"/>
        </parameter>
        <parameter name="other_context_ptr"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="250">the resulting #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext**"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_format_from_video_info"
              c:identifier="gst_gl_format_from_video_info"
              moved-to="GLFormat.from_video_info">
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                       line="133"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.c"
             line="138">the #GstGLFormat necessary for holding the data in @plane of @vinfo</doc>
        <type name="GLFormat" c:type="GstGLFormat"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="134">a #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </parameter>
        <parameter name="vinfo" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="135">a #GstVideoInfo</doc>
          <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
        </parameter>
        <parameter name="plane" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="136">the plane number in @vinfo</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_format_is_supported"
              c:identifier="gst_gl_format_is_supported"
              moved-to="GLFormat.is_supported"
              version="1.16">
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                       line="146"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.c"
             line="365">Whether @format is supported by @context based on the OpenGL API,
         version, or available OpenGL extension/s.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="362">a #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="363">the #GstGLFormat to check is supported by @context</doc>
          <type name="GLFormat" c:type="GstGLFormat"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_format_type_from_sized_gl_format"
              c:identifier="gst_gl_format_type_from_sized_gl_format"
              moved-to="GLFormat.type_from_sized_gl_format"
              version="1.16">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglformat.c"
           line="295">Get the unsized format and type from @format for usage in glReadPixels,
glTex{Sub}Image*, glTexImage* and similar functions.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                       line="141"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="297">the sized internal #GstGLFormat</doc>
          <type name="GLFormat" c:type="GstGLFormat"/>
        </parameter>
        <parameter name="unsized_format"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="298">location for the resulting unsized #GstGLFormat</doc>
          <type name="GLFormat" c:type="GstGLFormat*"/>
        </parameter>
        <parameter name="gl_type"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="299">location for the resulting GL type</doc>
          <type name="guint" c:type="guint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_format_type_n_bytes"
              c:identifier="gst_gl_format_type_n_bytes"
              moved-to="GLFormat.type_n_bytes">
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                       line="130"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.c"
             line="122">the number of bytes the specified @format, @type combination takes
per pixel</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="119">the OpenGL format, %GL_RGBA, %GL_LUMINANCE, etc</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="120">the OpenGL type, %GL_UNSIGNED_BYTE, %GL_FLOAT, etc</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_get_plane_data_size"
              c:identifier="gst_gl_get_plane_data_size">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglutils.c"
           line="604">Retrieve the size in bytes of a video plane of data with a certain alignment</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglutils.h" line="48"/>
      <return-value transfer-ownership="none">
        <type name="gsize" c:type="gsize"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="606">a #GstVideoInfo</doc>
          <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
        </parameter>
        <parameter name="align" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="607">a #GstVideoAlignment or %NULL</doc>
          <type name="GstVideo.VideoAlignment" c:type="GstVideoAlignment*"/>
        </parameter>
        <parameter name="plane" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="608">plane number in @info to retrieve the data size of</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_get_plane_start" c:identifier="gst_gl_get_plane_start">
      <source-position filename="git/gst-libs/gst/gl/gstglutils.h" line="51"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglutils.c"
             line="638">difference between the supposed start of the plane from the @info
         and where the data from the previous plane ends.</doc>
        <type name="gsize" c:type="gsize"/>
      </return-value>
      <parameters>
        <parameter name="info" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="634">a #GstVideoInfo</doc>
          <type name="GstVideo.VideoInfo" c:type="GstVideoInfo*"/>
        </parameter>
        <parameter name="valign" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="635">a #GstVideoAlignment or %NULL</doc>
          <type name="GstVideo.VideoAlignment" c:type="GstVideoAlignment*"/>
        </parameter>
        <parameter name="plane" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="636">plane number in @info to retrieve the data size of</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_handle_context_query"
              c:identifier="gst_gl_handle_context_query">
      <source-position filename="git/gst-libs/gst/gl/gstglutils.h" line="38"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglutils.c"
             line="419">Whether the @query was successfully responded to from the passed
         @display, @context, and @other_context.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="413">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="query" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="414">a #GstQuery of type %GST_QUERY_CONTEXT</doc>
          <type name="Gst.Query" c:type="GstQuery*"/>
        </parameter>
        <parameter name="display"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="415">a #GstGLDisplay</doc>
          <type name="GLDisplay" c:type="GstGLDisplay*"/>
        </parameter>
        <parameter name="context"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="416">a #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </parameter>
        <parameter name="other_context"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="417">application provided #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_handle_set_context"
              c:identifier="gst_gl_handle_set_context">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglutils.c"
           line="311">Helper function for implementing #GstElementClass.set_context() in
OpenGL capable elements.

Retrieve's the #GstGLDisplay or #GstGLContext in @context and places the
result in @display or @other_context respectively.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglutils.h" line="35"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglutils.c"
             line="324">whether the @display or @other_context could be set successfully</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="313">a #GstElement</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="314">a #GstContext</doc>
          <type name="Gst.Context" c:type="GstContext*"/>
        </parameter>
        <parameter name="display"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="315">location of a #GstGLDisplay</doc>
          <type name="GLDisplay" c:type="GstGLDisplay**"/>
        </parameter>
        <parameter name="other_context"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="316">location of a #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext**"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_insert_debug_marker"
              c:identifier="gst_gl_insert_debug_marker"
              version="1.8"
              introspectable="0">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstgldebug.c"
           line="373">Inserts a marker into a GL debug stream.  Requires the 'gldebugmarker'
debug category to be at least %GST_LEVEL_FIXME.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstgldebug.h" line="121"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldebug.c"
               line="375">a #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldebug.c"
               line="376">a printf-style format string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="..." transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstgldebug.c"
               line="377">arguments form @format</doc>
          <varargs/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_memory_init_once"
              c:identifier="gst_gl_memory_init_once"
              moved-to="GLMemory.init_once"
              version="1.4">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglmemory.c"
           line="1091">Initializes the GL Base Texture allocator. It is safe to call this function
multiple times.  This must be called before any other GstGLMemory operation.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                       line="241"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="gl_memory_pbo_init_once"
              c:identifier="gst_gl_memory_pbo_init_once"
              moved-to="GLMemoryPBO.init_once">
      <source-position filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
                       line="63"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="gl_memory_setup_buffer"
              c:identifier="gst_gl_memory_setup_buffer"
              moved-to="GLMemory.setup_buffer"
              version="1.8"
              introspectable="0">
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                       line="294"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="1437">whether the buffer was correctly setup</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="allocator" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1428">the @GstGLMemoryAllocator to allocate from</doc>
          <type name="GLMemoryAllocator" c:type="GstGLMemoryAllocator*"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1429">a #GstBuffer to setup</doc>
          <type name="Gst.Buffer" c:type="GstBuffer*"/>
        </parameter>
        <parameter name="params" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1430">the #GstGLVideoAllocationParams to allocate with</doc>
          <type name="GLVideoAllocationParams"
                c:type="GstGLVideoAllocationParams*"/>
        </parameter>
        <parameter name="tex_formats"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1431">
    a list of #GstGLFormat's to allocate with.</doc>
          <array length="5" zero-terminated="0" c:type="GstGLFormat*">
            <type name="GLFormat" c:type="GstGLFormat"/>
          </array>
        </parameter>
        <parameter name="wrapped_data" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1433">
    a list of wrapped data pointers</doc>
          <array length="5" zero-terminated="0" c:type="gpointer*">
            <type name="gpointer"/>
          </array>
        </parameter>
        <parameter name="n_wrapped_pointers" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1435">the number of elements in @tex_formats and @wrapped_data</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_platform_from_string"
              c:identifier="gst_gl_platform_from_string"
              moved-to="GLPlatform.from_string">
      <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="110"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.c"
             line="178">The #GstGLPlatform represented by @platform_s</doc>
        <type name="GLPlatform" c:type="GstGLPlatform"/>
      </return-value>
      <parameters>
        <parameter name="platform_s" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglapi.c"
               line="176">a space seperated string of OpenGL platformss</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_platform_to_string"
              c:identifier="gst_gl_platform_to_string"
              moved-to="GLPlatform.to_string">
      <source-position filename="git/gst-libs/gst/gl/gstglapi.h" line="108"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglapi.c"
             line="135">A space seperated string of the OpenGL platforms enabled in @platform</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="platform" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglapi.c"
               line="133">a #GstGLPlatform to stringify</doc>
          <type name="GLPlatform" c:type="GstGLPlatform"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_query_local_gl_context"
              c:identifier="gst_gl_query_local_gl_context"
              moved-to="GLQuery.local_gl_context">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglutils.c"
           line="563">Performs a GST_QUERY_CONTEXT query of type "gst.gl.local_context" on all
#GstPads in @element of @direction for the local OpenGL context used by
GStreamer elements.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglutils.h" line="41"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglutils.c"
             line="574">whether @context_ptr contains a #GstGLContext</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="element" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="565">a #GstElement to query from</doc>
          <type name="Gst.Element" c:type="GstElement*"/>
        </parameter>
        <parameter name="direction" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="566">the #GstPadDirection to query</doc>
          <type name="Gst.PadDirection" c:type="GstPadDirection"/>
        </parameter>
        <parameter name="context_ptr"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="567">location containing the current and/or resulting
                     #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext**"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_query_new"
              c:identifier="gst_gl_query_new"
              moved-to="GLQuery.new"
              version="1.10"
              introspectable="0">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglquery.c"
           line="193">Free with gst_gl_query_free()</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglquery.h" line="69"/>
      <return-value>
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglquery.c"
             line="200">a new #GstGLQuery</doc>
        <type name="GLQuery" c:type="GstGLQuery*"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglquery.c"
               line="195">a #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </parameter>
        <parameter name="query_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglquery.c"
               line="196">the #GstGLQueryType to create</doc>
          <type name="GLQueryType" c:type="GstGLQueryType"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_renderbuffer_init_once"
              c:identifier="gst_gl_renderbuffer_init_once"
              moved-to="GLRenderbuffer.init_once"
              version="1.10">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
           line="302">Initializes the GL Base Texture allocator. It is safe to call this function
multiple times.  This must be called before any other GstGLRenderbuffer operation.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                       line="147"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="gl_sized_gl_format_from_gl_format_type"
              c:identifier="gst_gl_sized_gl_format_from_gl_format_type">
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                       line="137"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.c"
             line="222">the sized internal format specified by @format and @type that can
         be used in @context</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="context" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="218">a #GstGLContext</doc>
          <type name="GLContext" c:type="GstGLContext*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="219">an OpenGL format, %GL_RGBA, %GL_LUMINANCE, etc</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="220">an OpenGL type, %GL_UNSIGNED_BYTE, %GL_FLOAT, etc</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_stereo_downmix_mode_get_type"
              c:identifier="gst_gl_stereo_downmix_mode_get_type">
      <source-position filename="git/gst-libs/gst/gl/gstglviewconvert.h"
                       line="56"/>
      <return-value transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </return-value>
    </function>
    <function name="gl_sync_meta_api_get_type"
              c:identifier="gst_gl_sync_meta_api_get_type">
      <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                       line="75"/>
      <return-value transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </return-value>
    </function>
    <function name="gl_sync_meta_get_info"
              c:identifier="gst_gl_sync_meta_get_info"
              moved-to="GLSyncMeta.get_info">
      <source-position filename="git/gst-libs/gst/gl/gstglsyncmeta.h"
                       line="77"/>
      <return-value transfer-ownership="none">
        <type name="Gst.MetaInfo" c:type="const GstMetaInfo*"/>
      </return-value>
    </function>
    <function name="gl_texture_target_from_gl"
              c:identifier="gst_gl_texture_target_from_gl"
              moved-to="GLTextureTarget.from_gl">
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                       line="156"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.c"
             line="495">the #GstGLTextureTarget that's equiavalant to @target or
         %GST_GL_TEXTURE_TARGET_NONE</doc>
        <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
      </return-value>
      <parameters>
        <parameter name="target" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="493">an OpenGL texture binding target</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_texture_target_from_string"
              c:identifier="gst_gl_texture_target_from_string"
              moved-to="GLTextureTarget.from_string">
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                       line="150"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.c"
             line="450">the #GstGLTextureTarget represented by @str or
         %GST_GL_TEXTURE_TARGET_NONE</doc>
        <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="448">a string equivalant to one of the GST_GL_TEXTURE_TARGET_*_STR values</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_texture_target_to_buffer_pool_option"
              c:identifier="gst_gl_texture_target_to_buffer_pool_option"
              moved-to="GLTextureTarget.to_buffer_pool_option">
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                       line="158"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.c"
             line="517">a string representing the @GstBufferPoolOption specified by @target</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="target" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="515">a #GstGLTextureTarget</doc>
          <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_texture_target_to_gl"
              c:identifier="gst_gl_texture_target_to_gl"
              moved-to="GLTextureTarget.to_gl">
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                       line="154"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.c"
             line="473">the OpenGL value for binding the @target with glBindTexture() and
         similar functions or 0</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="target" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="471">a #GstGLTextureTarget</doc>
          <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_texture_target_to_string"
              c:identifier="gst_gl_texture_target_to_string"
              moved-to="GLTextureTarget.to_string">
      <source-position filename="git/gst-libs/gst/gl/gstglformat.h"
                       line="152"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglformat.c"
             line="429">the stringified version of @target or %NULL</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="target" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglformat.c"
               line="427">a #GstGLTextureTarget</doc>
          <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_value_get_texture_target_mask"
              c:identifier="gst_gl_value_get_texture_target_mask">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglutils.c"
           line="658">See gst_gl_value_set_texture_target_from_mask() for what entails a mask</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglutils.h" line="60"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglutils.c"
             line="664">the mask of #GstGLTextureTarget's in @value</doc>
        <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="660">an initialized #GValue of type G_TYPE_STRING</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_value_set_texture_target"
              c:identifier="gst_gl_value_set_texture_target">
      <source-position filename="git/gst-libs/gst/gl/gstglutils.h" line="58"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglutils.c"
             line="706">whether the @target could be set on @value</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="703">an initialized #GValue of type G_TYPE_STRING</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="target" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="704">a #GstGLTextureTarget's</doc>
          <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_value_set_texture_target_from_mask"
              c:identifier="gst_gl_value_set_texture_target_from_mask">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglutils.c"
           line="738">A mask is a bitwise OR of (1 &lt;&lt; target) where target is a valid
#GstGLTextureTarget</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglutils.h" line="55"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglutils.c"
             line="746">whether the @target_mask could be set on @value</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="740">an uninitialized #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="target_mask" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglutils.c"
               line="741">a bitwise mask of #GstGLTextureTarget's</doc>
          <type name="GLTextureTarget" c:type="GstGLTextureTarget"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_version_to_glsl_version"
              c:identifier="gst_gl_version_to_glsl_version">
      <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="152"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.c"
             line="505">The minimum supported #GstGLSLVersion available for @gl_api, @maj and @min</doc>
        <type name="GLSLVersion" c:type="GstGLSLVersion"/>
      </return-value>
      <parameters>
        <parameter name="gl_api" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="501">the #GstGLAPI</doc>
          <type name="GLAPI" c:type="GstGLAPI"/>
        </parameter>
        <parameter name="maj" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="502">the major GL version</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="min" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="503">the minor GL version</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="gl_window_error_quark"
              c:identifier="gst_gl_window_error_quark"
              moved-to="GLWindowError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="glsl_error_quark"
              c:identifier="gst_glsl_error_quark"
              moved-to="GLSLError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="glsl_profile_from_string"
              c:identifier="gst_glsl_profile_from_string"
              moved-to="GLSLProfile.from_string">
      <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="134"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.c"
             line="178">the #GstGLSLProfile of @string or %GST_GLSL_PROFILE_NONE on error</doc>
        <type name="GLSLProfile" c:type="GstGLSLProfile"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="176">a GLSL version string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="glsl_profile_to_string"
              c:identifier="gst_glsl_profile_to_string"
              moved-to="GLSLProfile.to_string">
      <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="136"/>
      <return-value transfer-ownership="none" nullable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.c"
             line="152">the name for @profile or %NULL on error</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="profile" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="150">a #GstGLSLProfile</doc>
          <type name="GLSLProfile" c:type="GstGLSLProfile"/>
        </parameter>
      </parameters>
    </function>
    <function name="glsl_string_get_version_profile"
              c:identifier="gst_glsl_string_get_version_profile">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglsl.c"
           line="462">Note: this function first searches the first 1 kilobytes for a #version
preprocessor directive and then executes gst_glsl_version_profile_from_string().</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="147"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.c"
             line="471">TRUE if a valid #version string was found, FALSE otherwise</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="s" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="464">string to search for a valid #version string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="version"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="465">resulting #GstGLSLVersion</doc>
          <type name="GLSLVersion" c:type="GstGLSLVersion*"/>
        </parameter>
        <parameter name="profile"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="466">resulting #GstGLSLProfile</doc>
          <type name="GLSLProfile" c:type="GstGLSLProfile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="glsl_version_from_string"
              c:identifier="gst_glsl_version_from_string"
              moved-to="GLSLVersion.from_string">
      <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="129"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.c"
             line="123">the #GstGLSLVersion of @string or %GST_GLSL_VERSION_NONE on error</doc>
        <type name="GLSLVersion" c:type="GstGLSLVersion"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="121">a GLSL version string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="glsl_version_profile_from_string"
              c:identifier="gst_glsl_version_profile_from_string"
              moved-to="GLSLVersion.profile_from_string">
      <doc xml:space="preserve"
           filename="git/gst-libs/gst/gl/gstglsl.c"
           line="296">Note: this function expects either a #version GLSL preprocesser directive
or a valid GLSL version and/or profile.</doc>
      <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="142"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.c"
             line="305">TRUE if a valid #version string was found, FALSE otherwise</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="298">a valid GLSL #version string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="version_ret"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="299">resulting #GstGLSLVersion</doc>
          <type name="GLSLVersion" c:type="GstGLSLVersion*"/>
        </parameter>
        <parameter name="profile_ret"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="300">resulting #GstGLSLVersion</doc>
          <type name="GLSLProfile" c:type="GstGLSLProfile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="glsl_version_profile_to_string"
              c:identifier="gst_glsl_version_profile_to_string"
              moved-to="GLSLVersion.profile_to_string">
      <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="139"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.c"
             line="235">the combined GLSL #version string for @version and @profile</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="version" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="232">a #GstGLSLVersion</doc>
          <type name="GLSLVersion" c:type="GstGLSLVersion"/>
        </parameter>
        <parameter name="profile" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="233">a #GstGLSLVersion</doc>
          <type name="GLSLProfile" c:type="GstGLSLProfile"/>
        </parameter>
      </parameters>
    </function>
    <function name="glsl_version_to_string"
              c:identifier="gst_glsl_version_to_string"
              moved-to="GLSLVersion.to_string">
      <source-position filename="git/gst-libs/gst/gl/gstglsl.h" line="131"/>
      <return-value transfer-ownership="none" nullable="1">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglsl.c"
             line="101">the name of @version or %NULL on error</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="version" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglsl.c"
               line="99">a #GstGLSLVersion</doc>
          <type name="GLSLVersion" c:type="GstGLSLVersion"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_gl_base_memory"
              c:identifier="gst_is_gl_base_memory"
              version="1.8">
      <source-position filename="git/gst-libs/gst/gl/gstglbasememory.h"
                       line="394"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbasememory.c"
             line="546">whether the memory at @mem is a #GstGLBaseMemory</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbasememory.c"
               line="544">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_gl_buffer"
              c:identifier="gst_is_gl_buffer"
              version="1.8">
      <source-position filename="git/gst-libs/gst/gl/gstglbuffer.h"
                       line="137"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglbuffer.c"
             line="482">whether the memory at @mem is a #GstGLBuffer</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglbuffer.c"
               line="480">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_gl_memory"
              c:identifier="gst_is_gl_memory"
              version="1.4">
      <source-position filename="git/gst-libs/gst/gl/gstglmemory.h"
                       line="243"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemory.c"
             line="1123">whether the memory at @mem is a #GstGLMemory</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemory.c"
               line="1121">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_gl_memory_pbo"
              c:identifier="gst_is_gl_memory_pbo"
              version="1.8">
      <source-position filename="git/gst-libs/gst/gl/gstglmemorypbo.h"
                       line="65"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
             line="841">whether the memory at @mem is a #GstGLMemoryPBO</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglmemorypbo.c"
               line="839">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
    <function name="is_gl_renderbuffer"
              c:identifier="gst_is_gl_renderbuffer"
              version="1.10">
      <source-position filename="git/gst-libs/gst/gl/gstglrenderbuffer.h"
                       line="150"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
             line="338">whether the memory at @mem is a #GstGLRenderbuffer</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mem" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="git/gst-libs/gst/gl/gstglrenderbuffer.c"
               line="336">a #GstMemory</doc>
          <type name="Gst.Memory" c:type="GstMemory*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
