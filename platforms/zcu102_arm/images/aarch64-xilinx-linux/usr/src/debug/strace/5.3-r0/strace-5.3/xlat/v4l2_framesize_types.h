/* Generated by ./xlat/gen.sh from ./xlat/v4l2_framesize_types.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"


#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat v4l2_framesize_types[];

# else

static const struct xlat_data v4l2_framesize_types_xdata[] = {
#if defined(V4L2_FRMSIZE_TYPE_DISCRETE) || (defined(HAVE_DECL_V4L2_FRMSIZE_TYPE_DISCRETE) && HAVE_DECL_V4L2_FRMSIZE_TYPE_DISCRETE)
  XLAT(V4L2_FRMSIZE_TYPE_DISCRETE),
#endif
#if defined(V4L2_FRMSIZE_TYPE_CONTINUOUS) || (defined(HAVE_DECL_V4L2_FRMSIZE_TYPE_CONTINUOUS) && HAVE_DECL_V4L2_FRMSIZE_TYPE_CONTINUOUS)
  XLAT(V4L2_FRMSIZE_TYPE_CONTINUOUS),
#endif
#if defined(V4L2_FRMSIZE_TYPE_STEPWISE) || (defined(HAVE_DECL_V4L2_FRMSIZE_TYPE_STEPWISE) && HAVE_DECL_V4L2_FRMSIZE_TYPE_STEPWISE)
  XLAT(V4L2_FRMSIZE_TYPE_STEPWISE),
#endif
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat v4l2_framesize_types[1] = { {
 .data = v4l2_framesize_types_xdata,
 .size = ARRAY_SIZE(v4l2_framesize_types_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
