/* Generated by ./xlat/gen.sh from ./xlat/fan_init_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(FAN_CLOEXEC) || (defined(HAVE_DECL_FAN_CLOEXEC) && HAVE_DECL_FAN_CLOEXEC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FAN_CLOEXEC) == (0x00000001), "FAN_CLOEXEC != 0x00000001");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FAN_CLOEXEC 0x00000001
#endif
#if defined(FAN_NONBLOCK) || (defined(HAVE_DECL_FAN_NONBLOCK) && HAVE_DECL_FAN_NONBLOCK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FAN_NONBLOCK) == (0x00000002), "FAN_NONBLOCK != 0x00000002");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FAN_NONBLOCK 0x00000002
#endif
#if defined(FAN_UNLIMITED_QUEUE) || (defined(HAVE_DECL_FAN_UNLIMITED_QUEUE) && HAVE_DECL_FAN_UNLIMITED_QUEUE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FAN_UNLIMITED_QUEUE) == (0x00000010), "FAN_UNLIMITED_QUEUE != 0x00000010");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FAN_UNLIMITED_QUEUE 0x00000010
#endif
#if defined(FAN_UNLIMITED_MARKS) || (defined(HAVE_DECL_FAN_UNLIMITED_MARKS) && HAVE_DECL_FAN_UNLIMITED_MARKS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FAN_UNLIMITED_MARKS) == (0x00000020), "FAN_UNLIMITED_MARKS != 0x00000020");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FAN_UNLIMITED_MARKS 0x00000020
#endif
#if defined(FAN_ENABLE_AUDIT) || (defined(HAVE_DECL_FAN_ENABLE_AUDIT) && HAVE_DECL_FAN_ENABLE_AUDIT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FAN_ENABLE_AUDIT) == (0x00000040), "FAN_ENABLE_AUDIT != 0x00000040");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FAN_ENABLE_AUDIT 0x00000040
#endif
#if defined(FAN_REPORT_TID) || (defined(HAVE_DECL_FAN_REPORT_TID) && HAVE_DECL_FAN_REPORT_TID)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FAN_REPORT_TID) == (0x00000100), "FAN_REPORT_TID != 0x00000100");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FAN_REPORT_TID 0x00000100
#endif
#if defined(FAN_REPORT_FID) || (defined(HAVE_DECL_FAN_REPORT_FID) && HAVE_DECL_FAN_REPORT_FID)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FAN_REPORT_FID) == (0x00000200), "FAN_REPORT_FID != 0x00000200");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FAN_REPORT_FID 0x00000200
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat fan_init_flags in mpers mode

# else

static const struct xlat_data fan_init_flags_xdata[] = {
 XLAT(FAN_CLOEXEC),
 XLAT(FAN_NONBLOCK),
 XLAT(FAN_UNLIMITED_QUEUE),
 XLAT(FAN_UNLIMITED_MARKS),
 XLAT(FAN_ENABLE_AUDIT),
 XLAT(FAN_REPORT_TID),
 XLAT(FAN_REPORT_FID),
};
static
const struct xlat fan_init_flags[1] = { {
 .data = fan_init_flags_xdata,
 .size = ARRAY_SIZE(fan_init_flags_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
