/* Generated by ./xlat/gen.sh from ./xlat/xdp_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"


#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat xdp_flags in mpers mode

# else

static const struct xlat_data xdp_flags_xdata[] = {
#if defined(XDP_FLAGS_MODES) || (defined(HAVE_DECL_XDP_FLAGS_MODES) && HAVE_DECL_XDP_FLAGS_MODES)
  XLAT(XDP_FLAGS_MODES),
#endif
#if defined(XDP_FLAGS_UPDATE_IF_NOEXIST) || (defined(HAVE_DECL_XDP_FLAGS_UPDATE_IF_NOEXIST) && HAVE_DECL_XDP_FLAGS_UPDATE_IF_NOEXIST)
  XLAT(XDP_FLAGS_UPDATE_IF_NOEXIST),
#endif
#if defined(XDP_FLAGS_SKB_MODE) || (defined(HAVE_DECL_XDP_FLAGS_SKB_MODE) && HAVE_DECL_XDP_FLAGS_SKB_MODE)
  XLAT(XDP_FLAGS_SKB_MODE),
#endif
#if defined(XDP_FLAGS_DRV_MODE) || (defined(HAVE_DECL_XDP_FLAGS_DRV_MODE) && HAVE_DECL_XDP_FLAGS_DRV_MODE)
  XLAT(XDP_FLAGS_DRV_MODE),
#endif
#if defined(XDP_FLAGS_HW_MODE) || (defined(HAVE_DECL_XDP_FLAGS_HW_MODE) && HAVE_DECL_XDP_FLAGS_HW_MODE)
  XLAT(XDP_FLAGS_HW_MODE),
#endif
};
static
const struct xlat xdp_flags[1] = { {
 .data = xdp_flags_xdata,
 .size = ARRAY_SIZE(xdp_flags_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
