/* Generated by ./xlat/gen.sh from ./xlat/mpol_mode_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(MPOL_F_STATIC_NODES) || (defined(HAVE_DECL_MPOL_F_STATIC_NODES) && HAVE_DECL_MPOL_F_STATIC_NODES)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPOL_F_STATIC_NODES) == ((1U << 15)), "MPOL_F_STATIC_NODES != (1U << 15)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MPOL_F_STATIC_NODES (1U << 15)
#endif
#if defined(MPOL_F_RELATIVE_NODES) || (defined(HAVE_DECL_MPOL_F_RELATIVE_NODES) && HAVE_DECL_MPOL_F_RELATIVE_NODES)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MPOL_F_RELATIVE_NODES) == ((1U << 14)), "MPOL_F_RELATIVE_NODES != (1U << 14)");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MPOL_F_RELATIVE_NODES (1U << 14)
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat mpol_mode_flags in mpers mode

# else

static const struct xlat_data mpol_mode_flags_xdata[] = {
 XLAT(MPOL_F_STATIC_NODES),
 XLAT(MPOL_F_RELATIVE_NODES),
};
static
const struct xlat mpol_mode_flags[1] = { {
 .data = mpol_mode_flags_xdata,
 .size = ARRAY_SIZE(mpol_mode_flags_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
