/* Generated by ./xlat/gen.sh from ./xlat/move_mount_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(MOVE_MOUNT_F_SYMLINKS) || (defined(HAVE_DECL_MOVE_MOUNT_F_SYMLINKS) && HAVE_DECL_MOVE_MOUNT_F_SYMLINKS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOVE_MOUNT_F_SYMLINKS) == (0x01), "MOVE_MOUNT_F_SYMLINKS != 0x01");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOVE_MOUNT_F_SYMLINKS 0x01
#endif
#if defined(MOVE_MOUNT_F_AUTOMOUNTS) || (defined(HAVE_DECL_MOVE_MOUNT_F_AUTOMOUNTS) && HAVE_DECL_MOVE_MOUNT_F_AUTOMOUNTS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOVE_MOUNT_F_AUTOMOUNTS) == (0x02), "MOVE_MOUNT_F_AUTOMOUNTS != 0x02");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOVE_MOUNT_F_AUTOMOUNTS 0x02
#endif
#if defined(MOVE_MOUNT_F_EMPTY_PATH) || (defined(HAVE_DECL_MOVE_MOUNT_F_EMPTY_PATH) && HAVE_DECL_MOVE_MOUNT_F_EMPTY_PATH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOVE_MOUNT_F_EMPTY_PATH) == (0x04), "MOVE_MOUNT_F_EMPTY_PATH != 0x04");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOVE_MOUNT_F_EMPTY_PATH 0x04
#endif
#if defined(MOVE_MOUNT_T_SYMLINKS) || (defined(HAVE_DECL_MOVE_MOUNT_T_SYMLINKS) && HAVE_DECL_MOVE_MOUNT_T_SYMLINKS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOVE_MOUNT_T_SYMLINKS) == (0x10), "MOVE_MOUNT_T_SYMLINKS != 0x10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOVE_MOUNT_T_SYMLINKS 0x10
#endif
#if defined(MOVE_MOUNT_T_AUTOMOUNTS) || (defined(HAVE_DECL_MOVE_MOUNT_T_AUTOMOUNTS) && HAVE_DECL_MOVE_MOUNT_T_AUTOMOUNTS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOVE_MOUNT_T_AUTOMOUNTS) == (0x20), "MOVE_MOUNT_T_AUTOMOUNTS != 0x20");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOVE_MOUNT_T_AUTOMOUNTS 0x20
#endif
#if defined(MOVE_MOUNT_T_EMPTY_PATH) || (defined(HAVE_DECL_MOVE_MOUNT_T_EMPTY_PATH) && HAVE_DECL_MOVE_MOUNT_T_EMPTY_PATH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOVE_MOUNT_T_EMPTY_PATH) == (0x40), "MOVE_MOUNT_T_EMPTY_PATH != 0x40");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOVE_MOUNT_T_EMPTY_PATH 0x40
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat move_mount_flags in mpers mode

# else

static const struct xlat_data move_mount_flags_xdata[] = {
 XLAT(MOVE_MOUNT_F_SYMLINKS),
 XLAT(MOVE_MOUNT_F_AUTOMOUNTS),
 XLAT(MOVE_MOUNT_F_EMPTY_PATH),
 XLAT(MOVE_MOUNT_T_SYMLINKS),
 XLAT(MOVE_MOUNT_T_AUTOMOUNTS),
 XLAT(MOVE_MOUNT_T_EMPTY_PATH),
};
static
const struct xlat move_mount_flags[1] = { {
 .data = move_mount_flags_xdata,
 .size = ARRAY_SIZE(move_mount_flags_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
