/* Generated by ./xlat/gen.sh from ./xlat/mount_attr_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(MOUNT_ATTR_RDONLY) || (defined(HAVE_DECL_MOUNT_ATTR_RDONLY) && HAVE_DECL_MOUNT_ATTR_RDONLY)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOUNT_ATTR_RDONLY) == (0x01), "MOUNT_ATTR_RDONLY != 0x01");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOUNT_ATTR_RDONLY 0x01
#endif
#if defined(MOUNT_ATTR_NOSUID) || (defined(HAVE_DECL_MOUNT_ATTR_NOSUID) && HAVE_DECL_MOUNT_ATTR_NOSUID)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOUNT_ATTR_NOSUID) == (0x02), "MOUNT_ATTR_NOSUID != 0x02");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOUNT_ATTR_NOSUID 0x02
#endif
#if defined(MOUNT_ATTR_NODEV) || (defined(HAVE_DECL_MOUNT_ATTR_NODEV) && HAVE_DECL_MOUNT_ATTR_NODEV)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOUNT_ATTR_NODEV) == (0x04), "MOUNT_ATTR_NODEV != 0x04");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOUNT_ATTR_NODEV 0x04
#endif
#if defined(MOUNT_ATTR_NOEXEC) || (defined(HAVE_DECL_MOUNT_ATTR_NOEXEC) && HAVE_DECL_MOUNT_ATTR_NOEXEC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOUNT_ATTR_NOEXEC) == (0x08), "MOUNT_ATTR_NOEXEC != 0x08");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOUNT_ATTR_NOEXEC 0x08
#endif
#if defined(MOUNT_ATTR_NOATIME) || (defined(HAVE_DECL_MOUNT_ATTR_NOATIME) && HAVE_DECL_MOUNT_ATTR_NOATIME)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOUNT_ATTR_NOATIME) == (0x10), "MOUNT_ATTR_NOATIME != 0x10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOUNT_ATTR_NOATIME 0x10
#endif
#if defined(MOUNT_ATTR_STRICTATIME) || (defined(HAVE_DECL_MOUNT_ATTR_STRICTATIME) && HAVE_DECL_MOUNT_ATTR_STRICTATIME)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOUNT_ATTR_STRICTATIME) == (0x20), "MOUNT_ATTR_STRICTATIME != 0x20");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOUNT_ATTR_STRICTATIME 0x20
#endif
#if defined(MOUNT_ATTR_NODIRATIME) || (defined(HAVE_DECL_MOUNT_ATTR_NODIRATIME) && HAVE_DECL_MOUNT_ATTR_NODIRATIME)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MOUNT_ATTR_NODIRATIME) == (0x80), "MOUNT_ATTR_NODIRATIME != 0x80");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MOUNT_ATTR_NODIRATIME 0x80
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat mount_attr_flags in mpers mode

# else

static const struct xlat_data mount_attr_flags_xdata[] = {
 XLAT(MOUNT_ATTR_RDONLY),
 XLAT(MOUNT_ATTR_NOSUID),
 XLAT(MOUNT_ATTR_NODEV),
 XLAT(MOUNT_ATTR_NOEXEC),
 XLAT(MOUNT_ATTR_NOATIME),
 XLAT(MOUNT_ATTR_STRICTATIME),
 XLAT(MOUNT_ATTR_NODIRATIME),
};
static
const struct xlat mount_attr_flags[1] = { {
 .data = mount_attr_flags_xdata,
 .size = ARRAY_SIZE(mount_attr_flags_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
