/* Generated by ./xlat/gen.sh from ./xlat/nf_queue_msg_types.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(NFQNL_MSG_PACKET) || (defined(HAVE_DECL_NFQNL_MSG_PACKET) && HAVE_DECL_NFQNL_MSG_PACKET)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((NFQNL_MSG_PACKET) == (0), "NFQNL_MSG_PACKET != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define NFQNL_MSG_PACKET 0
#endif
#if defined(NFQNL_MSG_VERDICT) || (defined(HAVE_DECL_NFQNL_MSG_VERDICT) && HAVE_DECL_NFQNL_MSG_VERDICT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((NFQNL_MSG_VERDICT) == (1), "NFQNL_MSG_VERDICT != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define NFQNL_MSG_VERDICT 1
#endif
#if defined(NFQNL_MSG_CONFIG) || (defined(HAVE_DECL_NFQNL_MSG_CONFIG) && HAVE_DECL_NFQNL_MSG_CONFIG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((NFQNL_MSG_CONFIG) == (2), "NFQNL_MSG_CONFIG != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define NFQNL_MSG_CONFIG 2
#endif
#if defined(NFQNL_MSG_VERDICT_BATCH) || (defined(HAVE_DECL_NFQNL_MSG_VERDICT_BATCH) && HAVE_DECL_NFQNL_MSG_VERDICT_BATCH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((NFQNL_MSG_VERDICT_BATCH) == (3), "NFQNL_MSG_VERDICT_BATCH != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define NFQNL_MSG_VERDICT_BATCH 3
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat nf_queue_msg_types in mpers mode

# else

static const struct xlat_data nf_queue_msg_types_xdata[] = {
 [NFQNL_MSG_PACKET] = XLAT(NFQNL_MSG_PACKET),
 [NFQNL_MSG_VERDICT] = XLAT(NFQNL_MSG_VERDICT),
 [NFQNL_MSG_CONFIG] = XLAT(NFQNL_MSG_CONFIG),
 [NFQNL_MSG_VERDICT_BATCH] = XLAT(NFQNL_MSG_VERDICT_BATCH),
};
static
const struct xlat nf_queue_msg_types[1] = { {
 .data = nf_queue_msg_types_xdata,
 .size = ARRAY_SIZE(nf_queue_msg_types_xdata),
 .type = XT_INDEXED,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
