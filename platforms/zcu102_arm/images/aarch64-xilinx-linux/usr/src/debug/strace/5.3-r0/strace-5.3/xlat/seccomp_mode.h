/* Generated by ./xlat/gen.sh from ./xlat/seccomp_mode.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(SECCOMP_MODE_DISABLED) || (defined(HAVE_DECL_SECCOMP_MODE_DISABLED) && HAVE_DECL_SECCOMP_MODE_DISABLED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SECCOMP_MODE_DISABLED) == (0), "SECCOMP_MODE_DISABLED != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SECCOMP_MODE_DISABLED 0
#endif
#if defined(SECCOMP_MODE_STRICT) || (defined(HAVE_DECL_SECCOMP_MODE_STRICT) && HAVE_DECL_SECCOMP_MODE_STRICT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SECCOMP_MODE_STRICT) == (1), "SECCOMP_MODE_STRICT != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SECCOMP_MODE_STRICT 1
#endif
#if defined(SECCOMP_MODE_FILTER) || (defined(HAVE_DECL_SECCOMP_MODE_FILTER) && HAVE_DECL_SECCOMP_MODE_FILTER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SECCOMP_MODE_FILTER) == (2), "SECCOMP_MODE_FILTER != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SECCOMP_MODE_FILTER 2
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat seccomp_mode in mpers mode

# else

static const struct xlat_data seccomp_mode_xdata[] = {
 [SECCOMP_MODE_DISABLED] = XLAT(SECCOMP_MODE_DISABLED),
 [SECCOMP_MODE_STRICT] = XLAT(SECCOMP_MODE_STRICT),
 [SECCOMP_MODE_FILTER] = XLAT(SECCOMP_MODE_FILTER),
};
static
const struct xlat seccomp_mode[1] = { {
 .data = seccomp_mode_xdata,
 .size = ARRAY_SIZE(seccomp_mode_xdata),
 .type = XT_INDEXED,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
