/* Generated by ./xlat/gen.sh from ./xlat/syslog_action_type.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(SYSLOG_ACTION_CLOSE) || (defined(HAVE_DECL_SYSLOG_ACTION_CLOSE) && HAVE_DECL_SYSLOG_ACTION_CLOSE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_CLOSE) == (0), "SYSLOG_ACTION_CLOSE != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_CLOSE 0
#endif
#if defined(SYSLOG_ACTION_OPEN) || (defined(HAVE_DECL_SYSLOG_ACTION_OPEN) && HAVE_DECL_SYSLOG_ACTION_OPEN)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_OPEN) == (1), "SYSLOG_ACTION_OPEN != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_OPEN 1
#endif
#if defined(SYSLOG_ACTION_READ) || (defined(HAVE_DECL_SYSLOG_ACTION_READ) && HAVE_DECL_SYSLOG_ACTION_READ)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_READ) == (2), "SYSLOG_ACTION_READ != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_READ 2
#endif
#if defined(SYSLOG_ACTION_READ_ALL) || (defined(HAVE_DECL_SYSLOG_ACTION_READ_ALL) && HAVE_DECL_SYSLOG_ACTION_READ_ALL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_READ_ALL) == (3), "SYSLOG_ACTION_READ_ALL != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_READ_ALL 3
#endif
#if defined(SYSLOG_ACTION_READ_CLEAR) || (defined(HAVE_DECL_SYSLOG_ACTION_READ_CLEAR) && HAVE_DECL_SYSLOG_ACTION_READ_CLEAR)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_READ_CLEAR) == (4), "SYSLOG_ACTION_READ_CLEAR != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_READ_CLEAR 4
#endif
#if defined(SYSLOG_ACTION_CLEAR) || (defined(HAVE_DECL_SYSLOG_ACTION_CLEAR) && HAVE_DECL_SYSLOG_ACTION_CLEAR)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_CLEAR) == (5), "SYSLOG_ACTION_CLEAR != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_CLEAR 5
#endif
#if defined(SYSLOG_ACTION_CONSOLE_OFF) || (defined(HAVE_DECL_SYSLOG_ACTION_CONSOLE_OFF) && HAVE_DECL_SYSLOG_ACTION_CONSOLE_OFF)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_CONSOLE_OFF) == (6), "SYSLOG_ACTION_CONSOLE_OFF != 6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_CONSOLE_OFF 6
#endif
#if defined(SYSLOG_ACTION_CONSOLE_ON) || (defined(HAVE_DECL_SYSLOG_ACTION_CONSOLE_ON) && HAVE_DECL_SYSLOG_ACTION_CONSOLE_ON)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_CONSOLE_ON) == (7), "SYSLOG_ACTION_CONSOLE_ON != 7");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_CONSOLE_ON 7
#endif
#if defined(SYSLOG_ACTION_CONSOLE_LEVEL) || (defined(HAVE_DECL_SYSLOG_ACTION_CONSOLE_LEVEL) && HAVE_DECL_SYSLOG_ACTION_CONSOLE_LEVEL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_CONSOLE_LEVEL) == (8), "SYSLOG_ACTION_CONSOLE_LEVEL != 8");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_CONSOLE_LEVEL 8
#endif
#if defined(SYSLOG_ACTION_SIZE_UNREAD) || (defined(HAVE_DECL_SYSLOG_ACTION_SIZE_UNREAD) && HAVE_DECL_SYSLOG_ACTION_SIZE_UNREAD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_SIZE_UNREAD) == (9), "SYSLOG_ACTION_SIZE_UNREAD != 9");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_SIZE_UNREAD 9
#endif
#if defined(SYSLOG_ACTION_SIZE_BUFFER) || (defined(HAVE_DECL_SYSLOG_ACTION_SIZE_BUFFER) && HAVE_DECL_SYSLOG_ACTION_SIZE_BUFFER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((SYSLOG_ACTION_SIZE_BUFFER) == (10), "SYSLOG_ACTION_SIZE_BUFFER != 10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define SYSLOG_ACTION_SIZE_BUFFER 10
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat syslog_action_type in mpers mode

# else

static const struct xlat_data syslog_action_type_xdata[] = {
 [SYSLOG_ACTION_CLOSE] = XLAT(SYSLOG_ACTION_CLOSE),
 [SYSLOG_ACTION_OPEN] = XLAT(SYSLOG_ACTION_OPEN),
 [SYSLOG_ACTION_READ] = XLAT(SYSLOG_ACTION_READ),
 [SYSLOG_ACTION_READ_ALL] = XLAT(SYSLOG_ACTION_READ_ALL),
 [SYSLOG_ACTION_READ_CLEAR] = XLAT(SYSLOG_ACTION_READ_CLEAR),
 [SYSLOG_ACTION_CLEAR] = XLAT(SYSLOG_ACTION_CLEAR),
 [SYSLOG_ACTION_CONSOLE_OFF] = XLAT(SYSLOG_ACTION_CONSOLE_OFF),
 [SYSLOG_ACTION_CONSOLE_ON] = XLAT(SYSLOG_ACTION_CONSOLE_ON),
 [SYSLOG_ACTION_CONSOLE_LEVEL] = XLAT(SYSLOG_ACTION_CONSOLE_LEVEL),
 [SYSLOG_ACTION_SIZE_UNREAD] = XLAT(SYSLOG_ACTION_SIZE_UNREAD),
 [SYSLOG_ACTION_SIZE_BUFFER] = XLAT(SYSLOG_ACTION_SIZE_BUFFER),
};
static
const struct xlat syslog_action_type[1] = { {
 .data = syslog_action_type_xdata,
 .size = ARRAY_SIZE(syslog_action_type_xdata),
 .type = XT_INDEXED,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
