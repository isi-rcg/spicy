/* Generated by ./xlat/gen.sh from ./xlat/membarrier_cmds.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(MEMBARRIER_CMD_QUERY) || (defined(HAVE_DECL_MEMBARRIER_CMD_QUERY) && HAVE_DECL_MEMBARRIER_CMD_QUERY)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MEMBARRIER_CMD_QUERY) == (0), "MEMBARRIER_CMD_QUERY != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MEMBARRIER_CMD_QUERY 0
#endif
#if defined(MEMBARRIER_CMD_GLOBAL) || (defined(HAVE_DECL_MEMBARRIER_CMD_GLOBAL) && HAVE_DECL_MEMBARRIER_CMD_GLOBAL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MEMBARRIER_CMD_GLOBAL) == (1 << 0), "MEMBARRIER_CMD_GLOBAL != 1 << 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MEMBARRIER_CMD_GLOBAL 1 << 0
#endif
#if defined(MEMBARRIER_CMD_GLOBAL_EXPEDITED) || (defined(HAVE_DECL_MEMBARRIER_CMD_GLOBAL_EXPEDITED) && HAVE_DECL_MEMBARRIER_CMD_GLOBAL_EXPEDITED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MEMBARRIER_CMD_GLOBAL_EXPEDITED) == (1 << 1), "MEMBARRIER_CMD_GLOBAL_EXPEDITED != 1 << 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MEMBARRIER_CMD_GLOBAL_EXPEDITED 1 << 1
#endif
#if defined(MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED) || (defined(HAVE_DECL_MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED) && HAVE_DECL_MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED) == (1 << 2), "MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED != 1 << 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED 1 << 2
#endif
#if defined(MEMBARRIER_CMD_PRIVATE_EXPEDITED) || (defined(HAVE_DECL_MEMBARRIER_CMD_PRIVATE_EXPEDITED) && HAVE_DECL_MEMBARRIER_CMD_PRIVATE_EXPEDITED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MEMBARRIER_CMD_PRIVATE_EXPEDITED) == (1 << 3), "MEMBARRIER_CMD_PRIVATE_EXPEDITED != 1 << 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MEMBARRIER_CMD_PRIVATE_EXPEDITED 1 << 3
#endif
#if defined(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED) || (defined(HAVE_DECL_MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED) && HAVE_DECL_MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED) == (1 << 4), "MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED != 1 << 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED 1 << 4
#endif
#if defined(MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE) || (defined(HAVE_DECL_MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE) && HAVE_DECL_MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE) == (1 << 5), "MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE != 1 << 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE 1 << 5
#endif
#if defined(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE) || (defined(HAVE_DECL_MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE) && HAVE_DECL_MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE) == (1 << 6), "MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE != 1 << 6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE 1 << 6
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat membarrier_cmds in mpers mode

# else

static const struct xlat_data membarrier_cmds_xdata[] = {
 XLAT(MEMBARRIER_CMD_QUERY),
 XLAT(MEMBARRIER_CMD_GLOBAL),
 XLAT(MEMBARRIER_CMD_GLOBAL_EXPEDITED),
 XLAT(MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED),
 XLAT(MEMBARRIER_CMD_PRIVATE_EXPEDITED),
 XLAT(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED),
 XLAT(MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE),
 XLAT(MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE),
};
static
const struct xlat membarrier_cmds[1] = { {
 .data = membarrier_cmds_xdata,
 .size = ARRAY_SIZE(membarrier_cmds_xdata),
 .type = XT_NORMAL,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
