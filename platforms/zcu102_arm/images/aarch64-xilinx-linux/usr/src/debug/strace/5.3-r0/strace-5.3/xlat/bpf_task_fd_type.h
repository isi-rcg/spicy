/* Generated by ./xlat/gen.sh from ./xlat/bpf_task_fd_type.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(BPF_FD_TYPE_RAW_TRACEPOINT) || (defined(HAVE_DECL_BPF_FD_TYPE_RAW_TRACEPOINT) && HAVE_DECL_BPF_FD_TYPE_RAW_TRACEPOINT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BPF_FD_TYPE_RAW_TRACEPOINT) == (0), "BPF_FD_TYPE_RAW_TRACEPOINT != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define BPF_FD_TYPE_RAW_TRACEPOINT 0
#endif
#if defined(BPF_FD_TYPE_TRACEPOINT) || (defined(HAVE_DECL_BPF_FD_TYPE_TRACEPOINT) && HAVE_DECL_BPF_FD_TYPE_TRACEPOINT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BPF_FD_TYPE_TRACEPOINT) == (1), "BPF_FD_TYPE_TRACEPOINT != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define BPF_FD_TYPE_TRACEPOINT 1
#endif
#if defined(BPF_FD_TYPE_KPROBE) || (defined(HAVE_DECL_BPF_FD_TYPE_KPROBE) && HAVE_DECL_BPF_FD_TYPE_KPROBE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BPF_FD_TYPE_KPROBE) == (2), "BPF_FD_TYPE_KPROBE != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define BPF_FD_TYPE_KPROBE 2
#endif
#if defined(BPF_FD_TYPE_KRETPROBE) || (defined(HAVE_DECL_BPF_FD_TYPE_KRETPROBE) && HAVE_DECL_BPF_FD_TYPE_KRETPROBE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BPF_FD_TYPE_KRETPROBE) == (3), "BPF_FD_TYPE_KRETPROBE != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define BPF_FD_TYPE_KRETPROBE 3
#endif
#if defined(BPF_FD_TYPE_UPROBE) || (defined(HAVE_DECL_BPF_FD_TYPE_UPROBE) && HAVE_DECL_BPF_FD_TYPE_UPROBE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BPF_FD_TYPE_UPROBE) == (4), "BPF_FD_TYPE_UPROBE != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define BPF_FD_TYPE_UPROBE 4
#endif
#if defined(BPF_FD_TYPE_URETPROBE) || (defined(HAVE_DECL_BPF_FD_TYPE_URETPROBE) && HAVE_DECL_BPF_FD_TYPE_URETPROBE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((BPF_FD_TYPE_URETPROBE) == (5), "BPF_FD_TYPE_URETPROBE != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define BPF_FD_TYPE_URETPROBE 5
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat bpf_task_fd_type in mpers mode

# else

static const struct xlat_data bpf_task_fd_type_xdata[] = {
 [BPF_FD_TYPE_RAW_TRACEPOINT] = XLAT(BPF_FD_TYPE_RAW_TRACEPOINT),
 [BPF_FD_TYPE_TRACEPOINT] = XLAT(BPF_FD_TYPE_TRACEPOINT),
 [BPF_FD_TYPE_KPROBE] = XLAT(BPF_FD_TYPE_KPROBE),
 [BPF_FD_TYPE_KRETPROBE] = XLAT(BPF_FD_TYPE_KRETPROBE),
 [BPF_FD_TYPE_UPROBE] = XLAT(BPF_FD_TYPE_UPROBE),
 [BPF_FD_TYPE_URETPROBE] = XLAT(BPF_FD_TYPE_URETPROBE),
};
static
const struct xlat bpf_task_fd_type[1] = { {
 .data = bpf_task_fd_type_xdata,
 .size = ARRAY_SIZE(bpf_task_fd_type_xdata),
 .type = XT_INDEXED,
} };

# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
